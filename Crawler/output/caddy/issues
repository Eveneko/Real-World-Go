[
  {
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "Fixes #3043.",
    "closed_at": null,
    "comments": 0,
    "comments_url": "https://api.github.com/repos/caddyserver/caddy/issues/3107/comments",
    "created_at": "2020-03-01T06:06:53Z",
    "events_url": "https://api.github.com/repos/caddyserver/caddy/issues/3107/events",
    "html_url": "https://github.com/caddyserver/caddy/pull/3107",
    "id": 573491911,
    "labels": [],
    "labels_url": "https://api.github.com/repos/caddyserver/caddy/issues/3107/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzgyMDAzOTgy",
    "number": 3107,
    "pull_request": {
      "diff_url": "https://github.com/caddyserver/caddy/pull/3107.diff",
      "html_url": "https://github.com/caddyserver/caddy/pull/3107",
      "patch_url": "https://github.com/caddyserver/caddy/pull/3107.patch",
      "url": "https://api.github.com/repos/caddyserver/caddy/pulls/3107"
    },
    "repository_url": "https://api.github.com/repos/caddyserver/caddy",
    "state": "open",
    "title": "update quic-go to v0.15.0 (supporting QUIC draft-27)",
    "updated_at": "2020-03-01T06:06:53Z",
    "url": "https://api.github.com/repos/caddyserver/caddy/issues/3107",
    "user": {
      "avatar_url": "https://avatars3.githubusercontent.com/u/1478487?v=4",
      "events_url": "https://api.github.com/users/marten-seemann/events{/privacy}",
      "followers_url": "https://api.github.com/users/marten-seemann/followers",
      "following_url": "https://api.github.com/users/marten-seemann/following{/other_user}",
      "gists_url": "https://api.github.com/users/marten-seemann/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/marten-seemann",
      "id": 1478487,
      "login": "marten-seemann",
      "node_id": "MDQ6VXNlcjE0Nzg0ODc=",
      "organizations_url": "https://api.github.com/users/marten-seemann/orgs",
      "received_events_url": "https://api.github.com/users/marten-seemann/received_events",
      "repos_url": "https://api.github.com/users/marten-seemann/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/marten-seemann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marten-seemann/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/marten-seemann"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "still want support for legacy htpasswd format\r\n\r\nhow about supporting existing statements:\r\n\r\nbasicauth *path* *username* *password*\r\nbasicauth *path* *username* *htpasswd=/path/to/file*\r\n\r\nbasicauth *username* *password* { ... }\r\nbasicauth *username* *htpasswd=/path/to/file*  { ... }\r\n\r\nand extend to:\r\n\r\nbasicauth *path* *format=/path/to/file*\r\nbasicauth *format=/path/to/file*  { ... }\r\n\r\n*format* could be: \r\n\r\n*    \"htpasswd\" for apache-style htpasswd ( see https://en.wikipedia.org/wiki/.htpasswd )\r\n*    \"passwd\" for unix/linux etc-passwd or etc-shadow (because of format similarity this could be dropped)\r\n\r\nhmm ... optionally:\r\n\r\n*    \"?dbm\" for unix-style dbm/gdbm/cdb/... kv-format ( see https://en.wikipedia.org/wiki/DBM_(computing)#Implementations )\r\n*    \"sqlite\" for sqlite (table=passwd, username and password fields)\r\n*    \"http\" with http(s) url for auth request forwarding.",
    "closed_at": null,
    "comments": 0,
    "comments_url": "https://api.github.com/repos/caddyserver/caddy/issues/3088/comments",
    "created_at": "2020-02-27T12:03:51Z",
    "events_url": "https://api.github.com/repos/caddyserver/caddy/issues/3088/events",
    "html_url": "https://github.com/caddyserver/caddy/issues/3088",
    "id": 572036763,
    "labels": [
      {
        "color": "c7def8",
        "default": false,
        "description": null,
        "id": 204890680,
        "name": "feature request",
        "node_id": "MDU6TGFiZWwyMDQ4OTA2ODA=",
        "url": "https://api.github.com/repos/caddyserver/caddy/labels/feature%20request"
      },
      {
        "color": "dbd523",
        "default": false,
        "description": "Specifically applies to Caddy 2",
        "id": 1436036184,
        "name": "v2",
        "node_id": "MDU6TGFiZWwxNDM2MDM2MTg0",
        "url": "https://api.github.com/repos/caddyserver/caddy/labels/v2"
      }
    ],
    "labels_url": "https://api.github.com/repos/caddyserver/caddy/issues/3088/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1NzIwMzY3NjM=",
    "number": 3088,
    "repository_url": "https://api.github.com/repos/caddyserver/caddy",
    "state": "open",
    "title": "basicauth: Allow htpasswd= to be used to fetch both username and password from a .htaccess file",
    "updated_at": "2020-02-27T16:06:19Z",
    "url": "https://api.github.com/repos/caddyserver/caddy/issues/3088",
    "user": {
      "avatar_url": "https://avatars0.githubusercontent.com/u/492154?v=4",
      "events_url": "https://api.github.com/users/terefang/events{/privacy}",
      "followers_url": "https://api.github.com/users/terefang/followers",
      "following_url": "https://api.github.com/users/terefang/following{/other_user}",
      "gists_url": "https://api.github.com/users/terefang/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/terefang",
      "id": 492154,
      "login": "terefang",
      "node_id": "MDQ6VXNlcjQ5MjE1NA==",
      "organizations_url": "https://api.github.com/users/terefang/orgs",
      "received_events_url": "https://api.github.com/users/terefang/received_events",
      "repos_url": "https://api.github.com/users/terefang/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/terefang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/terefang/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/terefang"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Hi there\r\n\r\nI'm searching for the \"on demand\" configuration in Caddyfile V2. So far I only found this example through the API https://caddy.community/t/v2-http-to-https-redirects-fail-for-on-demand-ssl-certs/6742\r\n\r\nI know it's work in progress, I'ld just like a confirmation it's still to be done, and an issue to track the feature.\r\n\r\nBest regards,",
    "closed_at": null,
    "comments": 4,
    "comments_url": "https://api.github.com/repos/caddyserver/caddy/issues/3058/comments",
    "created_at": "2020-02-18T13:05:19Z",
    "events_url": "https://api.github.com/repos/caddyserver/caddy/issues/3058/events",
    "html_url": "https://github.com/caddyserver/caddy/issues/3058",
    "id": 566879853,
    "labels": [
      {
        "color": "c7def8",
        "default": false,
        "description": null,
        "id": 204890680,
        "name": "feature request",
        "node_id": "MDU6TGFiZWwyMDQ4OTA2ODA=",
        "url": "https://api.github.com/repos/caddyserver/caddy/labels/feature%20request"
      },
      {
        "color": "dbd523",
        "default": false,
        "description": "Specifically applies to Caddy 2",
        "id": 1436036184,
        "name": "v2",
        "node_id": "MDU6TGFiZWwxNDM2MDM2MTg0",
        "url": "https://api.github.com/repos/caddyserver/caddy/labels/v2"
      }
    ],
    "labels_url": "https://api.github.com/repos/caddyserver/caddy/issues/3058/labels{/name}",
    "locked": false,
    "milestone": {
      "closed_at": null,
      "closed_issues": 81,
      "created_at": "2017-03-07T02:57:47Z",
      "creator": {
        "avatar_url": "https://avatars2.githubusercontent.com/u/1128849?v=4",
        "events_url": "https://api.github.com/users/mholt/events{/privacy}",
        "followers_url": "https://api.github.com/users/mholt/followers",
        "following_url": "https://api.github.com/users/mholt/following{/other_user}",
        "gists_url": "https://api.github.com/users/mholt/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/mholt",
        "id": 1128849,
        "login": "mholt",
        "node_id": "MDQ6VXNlcjExMjg4NDk=",
        "organizations_url": "https://api.github.com/users/mholt/orgs",
        "received_events_url": "https://api.github.com/users/mholt/received_events",
        "repos_url": "https://api.github.com/users/mholt/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/mholt/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mholt/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/mholt"
      },
      "description": "2.0 is the next generation of Caddy, and it's AWESOME. This milestone is for things planned for version 2, but not sure at what point in the dev tree it will happen yet.",
      "due_on": null,
      "html_url": "https://github.com/caddyserver/caddy/milestone/4",
      "id": 2367944,
      "labels_url": "https://api.github.com/repos/caddyserver/caddy/milestones/4/labels",
      "node_id": "MDk6TWlsZXN0b25lMjM2Nzk0NA==",
      "number": 4,
      "open_issues": 65,
      "state": "open",
      "title": "2.0",
      "updated_at": "2020-02-29T20:23:21Z",
      "url": "https://api.github.com/repos/caddyserver/caddy/milestones/4"
    },
    "node_id": "MDU6SXNzdWU1NjY4Nzk4NTM=",
    "number": 3058,
    "repository_url": "https://api.github.com/repos/caddyserver/caddy",
    "state": "open",
    "title": "v2: on-demand TLS configuration in Caddyfile",
    "updated_at": "2020-02-28T07:20:20Z",
    "url": "https://api.github.com/repos/caddyserver/caddy/issues/3058",
    "user": {
      "avatar_url": "https://avatars1.githubusercontent.com/u/1872031?v=4",
      "events_url": "https://api.github.com/users/rgarrigue/events{/privacy}",
      "followers_url": "https://api.github.com/users/rgarrigue/followers",
      "following_url": "https://api.github.com/users/rgarrigue/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgarrigue/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rgarrigue",
      "id": 1872031,
      "login": "rgarrigue",
      "node_id": "MDQ6VXNlcjE4NzIwMzE=",
      "organizations_url": "https://api.github.com/users/rgarrigue/orgs",
      "received_events_url": "https://api.github.com/users/rgarrigue/received_events",
      "repos_url": "https://api.github.com/users/rgarrigue/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rgarrigue/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgarrigue/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rgarrigue"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "QUIC defines an address validation mechanism: https://tools.ietf.org/html/draft-ietf-quic-transport-25#section-8.1.2. A server that receives an Initial packet from a new client can send a Retry packet with an opaque token, and the client then includes this token on subsequent packets.\r\n\r\nThis costs one network round trip, so we don't really want to use this on every connection. This behavior can be configured in quic-go using the `quic.Config`'s [AcceptToken callback](https://godoc.org/github.com/lucas-clemente/quic-go#Config). Currently, Caddy doesn't set any custom callback, which means that quic-go will send a Retry for every client that hasn't connected to the server before.\r\n\r\nCan we find a better logic for this?",
    "closed_at": null,
    "comments": 3,
    "comments_url": "https://api.github.com/repos/caddyserver/caddy/issues/3055/comments",
    "created_at": "2020-02-18T04:40:42Z",
    "events_url": "https://api.github.com/repos/caddyserver/caddy/issues/3055/events",
    "html_url": "https://github.com/caddyserver/caddy/issues/3055",
    "id": 566641402,
    "labels": [
      {
        "color": "AAAAAA",
        "default": false,
        "description": null,
        "id": 221922456,
        "name": "deferred",
        "node_id": "MDU6TGFiZWwyMjE5MjI0NTY=",
        "url": "https://api.github.com/repos/caddyserver/caddy/labels/deferred"
      },
      {
        "color": "c7def8",
        "default": false,
        "description": null,
        "id": 204890680,
        "name": "feature request",
        "node_id": "MDU6TGFiZWwyMDQ4OTA2ODA=",
        "url": "https://api.github.com/repos/caddyserver/caddy/labels/feature%20request"
      },
      {
        "color": "dbd523",
        "default": false,
        "description": "Specifically applies to Caddy 2",
        "id": 1436036184,
        "name": "v2",
        "node_id": "MDU6TGFiZWwxNDM2MDM2MTg0",
        "url": "https://api.github.com/repos/caddyserver/caddy/labels/v2"
      }
    ],
    "labels_url": "https://api.github.com/repos/caddyserver/caddy/issues/3055/labels{/name}",
    "locked": false,
    "milestone": {
      "closed_at": null,
      "closed_issues": 81,
      "created_at": "2017-03-07T02:57:47Z",
      "creator": {
        "avatar_url": "https://avatars2.githubusercontent.com/u/1128849?v=4",
        "events_url": "https://api.github.com/users/mholt/events{/privacy}",
        "followers_url": "https://api.github.com/users/mholt/followers",
        "following_url": "https://api.github.com/users/mholt/following{/other_user}",
        "gists_url": "https://api.github.com/users/mholt/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/mholt",
        "id": 1128849,
        "login": "mholt",
        "node_id": "MDQ6VXNlcjExMjg4NDk=",
        "organizations_url": "https://api.github.com/users/mholt/orgs",
        "received_events_url": "https://api.github.com/users/mholt/received_events",
        "repos_url": "https://api.github.com/users/mholt/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/mholt/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mholt/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/mholt"
      },
      "description": "2.0 is the next generation of Caddy, and it's AWESOME. This milestone is for things planned for version 2, but not sure at what point in the dev tree it will happen yet.",
      "due_on": null,
      "html_url": "https://github.com/caddyserver/caddy/milestone/4",
      "id": 2367944,
      "labels_url": "https://api.github.com/repos/caddyserver/caddy/milestones/4/labels",
      "node_id": "MDk6TWlsZXN0b25lMjM2Nzk0NA==",
      "number": 4,
      "open_issues": 65,
      "state": "open",
      "title": "2.0",
      "updated_at": "2020-02-29T20:23:21Z",
      "url": "https://api.github.com/repos/caddyserver/caddy/milestones/4"
    },
    "node_id": "MDU6SXNzdWU1NjY2NDE0MDI=",
    "number": 3055,
    "repository_url": "https://api.github.com/repos/caddyserver/caddy",
    "state": "open",
    "title": "disable QUIC Retries when not under load",
    "updated_at": "2020-02-20T17:18:21Z",
    "url": "https://api.github.com/repos/caddyserver/caddy/issues/3055",
    "user": {
      "avatar_url": "https://avatars3.githubusercontent.com/u/1478487?v=4",
      "events_url": "https://api.github.com/users/marten-seemann/events{/privacy}",
      "followers_url": "https://api.github.com/users/marten-seemann/followers",
      "following_url": "https://api.github.com/users/marten-seemann/following{/other_user}",
      "gists_url": "https://api.github.com/users/marten-seemann/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/marten-seemann",
      "id": 1478487,
      "login": "marten-seemann",
      "node_id": "MDQ6VXNlcjE0Nzg0ODc=",
      "organizations_url": "https://api.github.com/users/marten-seemann/orgs",
      "received_events_url": "https://api.github.com/users/marten-seemann/received_events",
      "repos_url": "https://api.github.com/users/marten-seemann/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/marten-seemann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marten-seemann/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/marten-seemann"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "The version of caddy is 1.0.4 and 2.0beta14.\r\n\r\nConfig of caddy 2:\r\n```json\r\n{\r\n    \"admin\": {\r\n        \"disabled\": true,\r\n        \"listen\": \"\",\r\n        \"enforce_origin\": false,\r\n        \"origins\": [\"\"],\r\n        \"config\": {\r\n            \"persist\": false\r\n        }\r\n    },\r\n    \"apps\": {\r\n        \"http\": {\r\n            \"servers\": {\r\n                \"h3-proxy\": {\r\n                    \"listen\": [\":2\"],\r\n                    \"routes\": [{\r\n                        \"match\": [{\r\n                            \"host\": [\"qwq.ren\", \"*.qwq.ren\", \"imvictor.tech\", \"*.imvictor.tech\"]\r\n                        }],\r\n                        \"handle\": [{\r\n                            \"handler\": \"subroute\",\r\n                            \"routes\": [{\r\n                                \"handle\": [{\r\n                                    \"encodings\": {\r\n                                        \"brotli\": {},\r\n                                        \"gzip\": {}\r\n                                    },\r\n                                    \"handler\": \"encode\"\r\n                                }, {\r\n                                    \"handler\": \"reverse_proxy\",\r\n                                    \"headers\": {\r\n                                        \"request\": {\r\n                                            \"set\": {\r\n                                                \"Host\": [\"{http.request.host}\"],\r\n                                                \"X-Forwarded-For\": [\"{http.request.remote.host}\"],\r\n                                                \"X-Forwarded-Proto\": [\"{http.request.scheme}\"],\r\n                                                \"X-Real-IP\": [\"{http.request.remote.host}\"],\r\n                                                \"X-Victors-Test1\": [\"passed\"]\r\n                                            }\r\n                                        }\r\n                                    },\r\n                                    \"upstreams\": [{\r\n                                        \"dial\": \"127.0.0.1:80\"\r\n                                    }]\r\n                                }]\r\n                            }]\r\n                        }],\r\n                        \"terminal\": true\r\n                    }],\r\n                    \"tls_connection_policies\": [{\r\n                        \"match\": {\r\n                            \"sni\": [\"*.imvictor.tech\", \"qwq.ren\", \"*.qwq.ren\", \"imvictor.tech\"]\r\n                        },\r\n                        \"certificate_selection\": {\r\n                            \"policy\": \"custom\",\r\n                            \"tag\": \"main-cert\"\r\n                        }\r\n                    }, {}],\r\n                    \"experimental_http3\": true,\r\n                    \"automatic_https\": {\r\n                        \"disable\": true\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"tls\": {\r\n            \"certificates\": {\r\n                \"load_files\": [{\r\n                    \"certificate\": \"[HIDDEN].cer\",\r\n                    \"key\": \"[HIDDEN].key\",\r\n                    \"tags\": [\"main-cert\"]\r\n                }]\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nConfig of caddy 1.0.4:\r\n```Caddyfile\r\nhttps://qwq.ren:2 https://*.qwq.ren:2 https://imvictor.tech:2 https://*.imvictor.tech:2 {\r\n    gzip\r\n    proxy / http://127.0.0.1:80 {\r\n        header_upstream Host {host}\r\n        header_upstream X-Forwarded-Proto {scheme}\r\n        header_upstream X-Forwarded-Port {port}\r\n        header_upstream X-Forwarded-For {remote}\r\n        header_upstream X-Real-IP {remote}\r\n        header_upstream X-Victors-Test1 \"passed\"\r\n        insecure_skip_verify\r\n    }\r\n    tls [HIDDEN].cer [HIDDEN].key\r\n}\r\n```\r\nTest HTTP/3 with curl 7.69.0-dev, it shows that some headers like X-Forwarded-For or X-Real-IP cannot be passed to the backend,\r\n```plain\r\nVictor@Victor-Mac:/tmp \u00bb curl-h3 -6 --http3 https://dns-main.imvictor.tech:2/__test/dump -H 'X-Victors-Test0: test'\r\nPort: 80\r\nRemote Addr: 127.0.0.1\r\nProxy Protocol Addr: \r\nX-Forwarded-For Header: \r\nX-Real-IP Header: \r\nX-Forwarded-Proto Header: https\r\nX-Forwarded-Port Header: \r\nX-Victors-Test0 Header: test\r\nX-Victors-Test1 Header: passed\r\n```\r\nwhile HTTP/2 and HTTP/1.1 both work:\r\n```plain\r\nVictor@Victor-Mac:/tmp \u00bb curl-h3 -6 --http2 https://dns-main.imvictor.tech:2/__test/dump -H 'X-Victors-Test0: test'\r\nPort: 80\r\nRemote Addr: 2409:8a3c:5b7c:2300:[HIDDEN]\r\nProxy Protocol Addr: \r\nX-Forwarded-For Header: 2409:8a3c:5b7c:2300:[HIDDEN]\r\nX-Real-IP Header: 2409:8a3c:5b7c:2300:[HIDDEN]\r\nX-Forwarded-Proto Header: https\r\nX-Forwarded-Port Header: 54881\r\nX-Victors-Test0 Header: test\r\nX-Victors-Test1 Header: passed\r\nVictor@Victor-Mac:/tmp \u00bb curl-h3 -6 --http1.1 https://dns-main.imvictor.tech:2/__test/dump -H 'X-Victors-Test0: test'\r\nPort: 80\r\nRemote Addr: 2409:8a3c:5b7c:2300:[HIDDEN]\r\nProxy Protocol Addr: \r\nX-Forwarded-For Header: 2409:8a3c:5b7c:2300:[HIDDEN]\r\nX-Real-IP Header: 2409:8a3c:5b7c:2300:[HIDDEN]\r\nX-Forwarded-Proto Header: https\r\nX-Forwarded-Port Header: 55544\r\nX-Victors-Test0 Header: test\r\nX-Victors-Test1 Header: passed\r\n```\r\nNow I have no idea to make a workaround.",
    "closed_at": null,
    "comments": 20,
    "comments_url": "https://api.github.com/repos/caddyserver/caddy/issues/3054/comments",
    "created_at": "2020-02-18T01:51:52Z",
    "events_url": "https://api.github.com/repos/caddyserver/caddy/issues/3054/events",
    "html_url": "https://github.com/caddyserver/caddy/issues/3054",
    "id": 566596640,
    "labels": [
      {
        "color": "fc2929",
        "default": true,
        "description": null,
        "id": 165906141,
        "name": "bug",
        "node_id": "MDU6TGFiZWwxNjU5MDYxNDE=",
        "url": "https://api.github.com/repos/caddyserver/caddy/labels/bug"
      },
      {
        "color": "a6e5fc",
        "default": false,
        "description": null,
        "id": 811922384,
        "name": "upstream",
        "node_id": "MDU6TGFiZWw4MTE5MjIzODQ=",
        "url": "https://api.github.com/repos/caddyserver/caddy/labels/upstream"
      },
      {
        "color": "dbd523",
        "default": false,
        "description": "Specifically applies to Caddy 2",
        "id": 1436036184,
        "name": "v2",
        "node_id": "MDU6TGFiZWwxNDM2MDM2MTg0",
        "url": "https://api.github.com/repos/caddyserver/caddy/labels/v2"
      }
    ],
    "labels_url": "https://api.github.com/repos/caddyserver/caddy/issues/3054/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1NjY1OTY2NDA=",
    "number": 3054,
    "repository_url": "https://api.github.com/repos/caddyserver/caddy",
    "state": "open",
    "title": "v2&v1: HTTP/3 breaks support of getting remote IP and port",
    "updated_at": "2020-02-18T17:53:09Z",
    "url": "https://api.github.com/repos/caddyserver/caddy/issues/3054",
    "user": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/21100901?v=4",
      "events_url": "https://api.github.com/users/qwqVictor/events{/privacy}",
      "followers_url": "https://api.github.com/users/qwqVictor/followers",
      "following_url": "https://api.github.com/users/qwqVictor/following{/other_user}",
      "gists_url": "https://api.github.com/users/qwqVictor/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/qwqVictor",
      "id": 21100901,
      "login": "qwqVictor",
      "node_id": "MDQ6VXNlcjIxMTAwOTAx",
      "organizations_url": "https://api.github.com/users/qwqVictor/orgs",
      "received_events_url": "https://api.github.com/users/qwqVictor/received_events",
      "repos_url": "https://api.github.com/users/qwqVictor/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/qwqVictor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/qwqVictor/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/qwqVictor"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Currently, if we want to match based on data stored in the ReplacerCtx (e.g. `http.error.status_code`, one first has to store it in the the `VarsCtx` with a `vars` middleware. This leads to slightly over-complicated configurations, e.g. [like this](https://gist.github.com/roblabla/d0890eab479776dd8a1bb103d382e47c#file-test-json5-L30).\r\n\r\nI feel like vars and replacers should be unified under a single concept. Is there a specific reason why they aren't currently backed by the same data?",
    "closed_at": null,
    "comments": 27,
    "comments_url": "https://api.github.com/repos/caddyserver/caddy/issues/3051/comments",
    "created_at": "2020-02-17T17:01:32Z",
    "events_url": "https://api.github.com/repos/caddyserver/caddy/issues/3051/events",
    "html_url": "https://github.com/caddyserver/caddy/issues/3051",
    "id": 566423781,
    "labels": [
      {
        "color": "c7def8",
        "default": false,
        "description": null,
        "id": 204890680,
        "name": "feature request",
        "node_id": "MDU6TGFiZWwyMDQ4OTA2ODA=",
        "url": "https://api.github.com/repos/caddyserver/caddy/labels/feature%20request"
      },
      {
        "color": "dbd523",
        "default": false,
        "description": "Specifically applies to Caddy 2",
        "id": 1436036184,
        "name": "v2",
        "node_id": "MDU6TGFiZWwxNDM2MDM2MTg0",
        "url": "https://api.github.com/repos/caddyserver/caddy/labels/v2"
      }
    ],
    "labels_url": "https://api.github.com/repos/caddyserver/caddy/issues/3051/labels{/name}",
    "locked": false,
    "milestone": {
      "closed_at": null,
      "closed_issues": 5,
      "created_at": "2020-02-26T03:56:55Z",
      "creator": {
        "avatar_url": "https://avatars2.githubusercontent.com/u/1128849?v=4",
        "events_url": "https://api.github.com/users/mholt/events{/privacy}",
        "followers_url": "https://api.github.com/users/mholt/followers",
        "following_url": "https://api.github.com/users/mholt/following{/other_user}",
        "gists_url": "https://api.github.com/users/mholt/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/mholt",
        "id": 1128849,
        "login": "mholt",
        "node_id": "MDQ6VXNlcjExMjg4NDk=",
        "organizations_url": "https://api.github.com/users/mholt/orgs",
        "received_events_url": "https://api.github.com/users/mholt/received_events",
        "repos_url": "https://api.github.com/users/mholt/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/mholt/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mholt/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/mholt"
      },
      "description": "",
      "due_on": null,
      "html_url": "https://github.com/caddyserver/caddy/milestone/31",
      "id": 5142110,
      "labels_url": "https://api.github.com/repos/caddyserver/caddy/milestones/31/labels",
      "node_id": "MDk6TWlsZXN0b25lNTE0MjExMA==",
      "number": 31,
      "open_issues": 1,
      "state": "open",
      "title": "v2.0.0-beta.16",
      "updated_at": "2020-02-29T20:23:23Z",
      "url": "https://api.github.com/repos/caddyserver/caddy/milestones/31"
    },
    "node_id": "MDU6SXNzdWU1NjY0MjM3ODE=",
    "number": 3051,
    "repository_url": "https://api.github.com/repos/caddyserver/caddy",
    "state": "open",
    "title": "v2: proposal: Matcher to compare primitive values",
    "updated_at": "2020-02-26T03:57:11Z",
    "url": "https://api.github.com/repos/caddyserver/caddy/issues/3051",
    "user": {
      "avatar_url": "https://avatars3.githubusercontent.com/u/1069318?v=4",
      "events_url": "https://api.github.com/users/roblabla/events{/privacy}",
      "followers_url": "https://api.github.com/users/roblabla/followers",
      "following_url": "https://api.github.com/users/roblabla/following{/other_user}",
      "gists_url": "https://api.github.com/users/roblabla/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/roblabla",
      "id": 1069318,
      "login": "roblabla",
      "node_id": "MDQ6VXNlcjEwNjkzMTg=",
      "organizations_url": "https://api.github.com/users/roblabla/orgs",
      "received_events_url": "https://api.github.com/users/roblabla/received_events",
      "repos_url": "https://api.github.com/users/roblabla/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/roblabla/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/roblabla/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/roblabla"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Outlines an approach to integration testing caddy features.\r\n\r\nTheses tests make the following assumptions on the environment.\r\n\r\n- changes to the localhost configuration\r\n```\r\n   127.0.0.1 a.caddy.local \r\n   127.0.0.1 b.caddy.local \r\n   127.0.0.1 c.caddy.local \r\n```\r\n   to support testing by IP and by hostname or combinations of both\r\n- local certificates - Caddy is all about the ACME but for clear reasons this isn't possible for local testing so certificates are expected to be generated. Tests ignore certification validation.\r\n- caddy is already running (could check and start of course)\r\n\r\n[edit]\r\n\r\nChanged the test api to include a context to track when a test fails, this is an attempt to find a nice way to export the current config on error.\r\n\r\n*nitpick is it ok to force the tests to be single threaded? `go test ./... -count=1`\r\n\r\nNow includes a failing test https://github.com/caddyserver/caddy/pull/3044/files#diff-4119c85db3fe58fb3e309290dd219b39R60\r\n\r\n\r\n",
    "closed_at": null,
    "comments": 8,
    "comments_url": "https://api.github.com/repos/caddyserver/caddy/issues/3044/comments",
    "created_at": "2020-02-15T20:37:34Z",
    "events_url": "https://api.github.com/repos/caddyserver/caddy/issues/3044/events",
    "html_url": "https://github.com/caddyserver/caddy/pull/3044",
    "id": 565805899,
    "labels": [
      {
        "color": "fbca04",
        "default": false,
        "description": null,
        "id": 205293550,
        "name": "in progress",
        "node_id": "MDU6TGFiZWwyMDUyOTM1NTA=",
        "url": "https://api.github.com/repos/caddyserver/caddy/labels/in%20progress"
      },
      {
        "color": "dbd523",
        "default": false,
        "description": "Specifically applies to Caddy 2",
        "id": 1436036184,
        "name": "v2",
        "node_id": "MDU6TGFiZWwxNDM2MDM2MTg0",
        "url": "https://api.github.com/repos/caddyserver/caddy/labels/v2"
      }
    ],
    "labels_url": "https://api.github.com/repos/caddyserver/caddy/issues/3044/labels{/name}",
    "locked": false,
    "milestone": {
      "closed_at": null,
      "closed_issues": 81,
      "created_at": "2017-03-07T02:57:47Z",
      "creator": {
        "avatar_url": "https://avatars2.githubusercontent.com/u/1128849?v=4",
        "events_url": "https://api.github.com/users/mholt/events{/privacy}",
        "followers_url": "https://api.github.com/users/mholt/followers",
        "following_url": "https://api.github.com/users/mholt/following{/other_user}",
        "gists_url": "https://api.github.com/users/mholt/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/mholt",
        "id": 1128849,
        "login": "mholt",
        "node_id": "MDQ6VXNlcjExMjg4NDk=",
        "organizations_url": "https://api.github.com/users/mholt/orgs",
        "received_events_url": "https://api.github.com/users/mholt/received_events",
        "repos_url": "https://api.github.com/users/mholt/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/mholt/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mholt/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/mholt"
      },
      "description": "2.0 is the next generation of Caddy, and it's AWESOME. This milestone is for things planned for version 2, but not sure at what point in the dev tree it will happen yet.",
      "due_on": null,
      "html_url": "https://github.com/caddyserver/caddy/milestone/4",
      "id": 2367944,
      "labels_url": "https://api.github.com/repos/caddyserver/caddy/milestones/4/labels",
      "node_id": "MDk6TWlsZXN0b25lMjM2Nzk0NA==",
      "number": 4,
      "open_issues": 65,
      "state": "open",
      "title": "2.0",
      "updated_at": "2020-02-29T20:23:21Z",
      "url": "https://api.github.com/repos/caddyserver/caddy/milestones/4"
    },
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mzc1NzU1Mzc1",
    "number": 3044,
    "pull_request": {
      "diff_url": "https://github.com/caddyserver/caddy/pull/3044.diff",
      "html_url": "https://github.com/caddyserver/caddy/pull/3044",
      "patch_url": "https://github.com/caddyserver/caddy/pull/3044.patch",
      "url": "https://api.github.com/repos/caddyserver/caddy/pulls/3044"
    },
    "repository_url": "https://api.github.com/repos/caddyserver/caddy",
    "state": "open",
    "title": "Add integration test harness",
    "updated_at": "2020-03-01T02:55:28Z",
    "url": "https://api.github.com/repos/caddyserver/caddy/issues/3044",
    "user": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/99003?v=4",
      "events_url": "https://api.github.com/users/sarge/events{/privacy}",
      "followers_url": "https://api.github.com/users/sarge/followers",
      "following_url": "https://api.github.com/users/sarge/following{/other_user}",
      "gists_url": "https://api.github.com/users/sarge/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/sarge",
      "id": 99003,
      "login": "sarge",
      "node_id": "MDQ6VXNlcjk5MDAz",
      "organizations_url": "https://api.github.com/users/sarge/orgs",
      "received_events_url": "https://api.github.com/users/sarge/received_events",
      "repos_url": "https://api.github.com/users/sarge/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/sarge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sarge/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/sarge"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "draft-26 will (probably) be released next week or the week after. This draft version is intended for deployment.\r\n\r\nI'm planning to send a PR adding support for draft-26 as soon as I ship the quic-go update. Hopefully this will be in time for the Caddy 2 release.",
    "closed_at": null,
    "comments": 1,
    "comments_url": "https://api.github.com/repos/caddyserver/caddy/issues/3043/comments",
    "created_at": "2020-02-15T06:32:27Z",
    "events_url": "https://api.github.com/repos/caddyserver/caddy/issues/3043/events",
    "html_url": "https://github.com/caddyserver/caddy/issues/3043",
    "id": 565705889,
    "labels": [
      {
        "color": "dbd523",
        "default": false,
        "description": "Specifically applies to Caddy 2",
        "id": 1436036184,
        "name": "v2",
        "node_id": "MDU6TGFiZWwxNDM2MDM2MTg0",
        "url": "https://api.github.com/repos/caddyserver/caddy/labels/v2"
      }
    ],
    "labels_url": "https://api.github.com/repos/caddyserver/caddy/issues/3043/labels{/name}",
    "locked": false,
    "milestone": {
      "closed_at": null,
      "closed_issues": 81,
      "created_at": "2017-03-07T02:57:47Z",
      "creator": {
        "avatar_url": "https://avatars2.githubusercontent.com/u/1128849?v=4",
        "events_url": "https://api.github.com/users/mholt/events{/privacy}",
        "followers_url": "https://api.github.com/users/mholt/followers",
        "following_url": "https://api.github.com/users/mholt/following{/other_user}",
        "gists_url": "https://api.github.com/users/mholt/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/mholt",
        "id": 1128849,
        "login": "mholt",
        "node_id": "MDQ6VXNlcjExMjg4NDk=",
        "organizations_url": "https://api.github.com/users/mholt/orgs",
        "received_events_url": "https://api.github.com/users/mholt/received_events",
        "repos_url": "https://api.github.com/users/mholt/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/mholt/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mholt/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/mholt"
      },
      "description": "2.0 is the next generation of Caddy, and it's AWESOME. This milestone is for things planned for version 2, but not sure at what point in the dev tree it will happen yet.",
      "due_on": null,
      "html_url": "https://github.com/caddyserver/caddy/milestone/4",
      "id": 2367944,
      "labels_url": "https://api.github.com/repos/caddyserver/caddy/milestones/4/labels",
      "node_id": "MDk6TWlsZXN0b25lMjM2Nzk0NA==",
      "number": 4,
      "open_issues": 65,
      "state": "open",
      "title": "2.0",
      "updated_at": "2020-02-29T20:23:21Z",
      "url": "https://api.github.com/repos/caddyserver/caddy/milestones/4"
    },
    "node_id": "MDU6SXNzdWU1NjU3MDU4ODk=",
    "number": 3043,
    "repository_url": "https://api.github.com/repos/caddyserver/caddy",
    "state": "open",
    "title": "update QUIC to draft-26",
    "updated_at": "2020-02-15T13:22:07Z",
    "url": "https://api.github.com/repos/caddyserver/caddy/issues/3043",
    "user": {
      "avatar_url": "https://avatars3.githubusercontent.com/u/1478487?v=4",
      "events_url": "https://api.github.com/users/marten-seemann/events{/privacy}",
      "followers_url": "https://api.github.com/users/marten-seemann/followers",
      "following_url": "https://api.github.com/users/marten-seemann/following{/other_user}",
      "gists_url": "https://api.github.com/users/marten-seemann/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/marten-seemann",
      "id": 1478487,
      "login": "marten-seemann",
      "node_id": "MDQ6VXNlcjE0Nzg0ODc=",
      "organizations_url": "https://api.github.com/users/marten-seemann/orgs",
      "received_events_url": "https://api.github.com/users/marten-seemann/received_events",
      "repos_url": "https://api.github.com/users/marten-seemann/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/marten-seemann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marten-seemann/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/marten-seemann"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "Thanks to a recent agreement, I'll soon be working on integrating [Smallstep](https://smallstep.com/) into Caddy. :+1:\r\n\r\nThis should allow us to serve HTTPS for localhost and internal sites automatically, much like we already do for public sites via Let's Encrypt. Essentially, we want `https://localhost` or `https://example.local` to be able to be the default using _trusted_ certificates and _properly managed_ local/internal PKI.\r\n\r\nIn Caddy 1, `tls self_signed` simply generated a private key in memory and used it to self-sign a certificate that lasted for a week, and that's all: it wasn't trusted, the key wasn't reused, and there was no proper PKI. With this integration in v2, Caddy will be able to serve your local dev and internal sites over HTTPS using trusted certificates with a proper, long-lived CA. This brings the ACME protocol into local and internal environments, rather than hacking private keys together in memory.\r\n\r\nIn the future, we can probably extend this to properly-managed mTLS that is (near-)fully automatic in a cluster.\r\n\r\nThis feature is not a release blocker for Caddy 2.0. It may get into 2.1.\r\n\r\nThis issue is for tracking discussion of the proposal and getting feedback from interested users and companies. Please get involved!\r\n\r\nHere are some questions to help bootstrap development discussion:\r\n\r\n- What do you want/need most from this feature?\r\n- Should HTTPS be the default for all sites, including local and internal ones?\r\n- What kind of configuration should be exposed?\r\n- What should the cert and CA default lifetimes be?\r\n- (Anything else that comes to your mind)\r\n\r\n/cc Smallstep: @mmalone @maraino @mikemaxey",
    "closed_at": null,
    "comments": 12,
    "comments_url": "https://api.github.com/repos/caddyserver/caddy/issues/3021/comments",
    "created_at": "2020-02-04T19:19:49Z",
    "events_url": "https://api.github.com/repos/caddyserver/caddy/issues/3021/events",
    "html_url": "https://github.com/caddyserver/caddy/issues/3021",
    "id": 559925950,
    "labels": [
      {
        "color": "006b75",
        "default": false,
        "description": null,
        "id": 207868286,
        "name": "discussion",
        "node_id": "MDU6TGFiZWwyMDc4NjgyODY=",
        "url": "https://api.github.com/repos/caddyserver/caddy/labels/discussion"
      },
      {
        "color": "dbd523",
        "default": false,
        "description": "Specifically applies to Caddy 2",
        "id": 1436036184,
        "name": "v2",
        "node_id": "MDU6TGFiZWwxNDM2MDM2MTg0",
        "url": "https://api.github.com/repos/caddyserver/caddy/labels/v2"
      }
    ],
    "labels_url": "https://api.github.com/repos/caddyserver/caddy/issues/3021/labels{/name}",
    "locked": false,
    "milestone": {
      "closed_at": null,
      "closed_issues": 81,
      "created_at": "2017-03-07T02:57:47Z",
      "creator": {
        "avatar_url": "https://avatars2.githubusercontent.com/u/1128849?v=4",
        "events_url": "https://api.github.com/users/mholt/events{/privacy}",
        "followers_url": "https://api.github.com/users/mholt/followers",
        "following_url": "https://api.github.com/users/mholt/following{/other_user}",
        "gists_url": "https://api.github.com/users/mholt/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/mholt",
        "id": 1128849,
        "login": "mholt",
        "node_id": "MDQ6VXNlcjExMjg4NDk=",
        "organizations_url": "https://api.github.com/users/mholt/orgs",
        "received_events_url": "https://api.github.com/users/mholt/received_events",
        "repos_url": "https://api.github.com/users/mholt/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/mholt/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mholt/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/mholt"
      },
      "description": "2.0 is the next generation of Caddy, and it's AWESOME. This milestone is for things planned for version 2, but not sure at what point in the dev tree it will happen yet.",
      "due_on": null,
      "html_url": "https://github.com/caddyserver/caddy/milestone/4",
      "id": 2367944,
      "labels_url": "https://api.github.com/repos/caddyserver/caddy/milestones/4/labels",
      "node_id": "MDk6TWlsZXN0b25lMjM2Nzk0NA==",
      "number": 4,
      "open_issues": 65,
      "state": "open",
      "title": "2.0",
      "updated_at": "2020-02-29T20:23:21Z",
      "url": "https://api.github.com/repos/caddyserver/caddy/milestones/4"
    },
    "node_id": "MDU6SXNzdWU1NTk5MjU5NTA=",
    "number": 3021,
    "repository_url": "https://api.github.com/repos/caddyserver/caddy",
    "state": "open",
    "title": "Caddy+Smallstep integration (trusted certs for localhost and internal sites)",
    "updated_at": "2020-02-11T19:46:52Z",
    "url": "https://api.github.com/repos/caddyserver/caddy/issues/3021",
    "user": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/1128849?v=4",
      "events_url": "https://api.github.com/users/mholt/events{/privacy}",
      "followers_url": "https://api.github.com/users/mholt/followers",
      "following_url": "https://api.github.com/users/mholt/following{/other_user}",
      "gists_url": "https://api.github.com/users/mholt/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mholt",
      "id": 1128849,
      "login": "mholt",
      "node_id": "MDQ6VXNlcjExMjg4NDk=",
      "organizations_url": "https://api.github.com/users/mholt/orgs",
      "received_events_url": "https://api.github.com/users/mholt/received_events",
      "repos_url": "https://api.github.com/users/mholt/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mholt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mholt/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mholt"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Caddy v1.0.4 (via FreeBSD pkg)\r\n\r\nI have a Caddyfile which serves several TLS domains, and HTTP->HTTPS redirects for them. After some period of time (exactly how long is unknown to me right now, I last restarted Caddy at 12:48 GMT today, and noticed the issue at 19:54 GMT) Caddy stops listening on port 80. This has happened several times, and results in \"connection refused\" on the client when making a plaintext HTTP request.\r\n\r\nThis is not a NAT issue as the server has a public IP, and is not an external firewall issue as I see the SYN received in tcpdump on the webserver. There is a pf firewall running on the server itself, however this is configured to allow port 80 and port 443 from all source IPs, as befits a webserver.\r\n\r\nThis issue appears to be the same as #2804 however:\r\n\r\n1. I'm running v1.0.4 which should have the referenced PR/commit (#2787) in it\r\n2. This commit also appears to be specific to OpenBSD so I don't really see how this previous issue could *actually* have been fixed by the referenced commit. If the two BSDs have shared behaviour in this area then it seems that this commit should be more generic and include more BSD variants?\r\n\r\nThere don't appear to be any relevant log entries, although I don't know the exact time to look at. I now have monitoring in place so I will know within a couple of minutes the next time Caddy stops responding and I can check the logs next time this happens.\r\n\r\nI'm sure you will ask for a sample site - http://www.couragetherapies.co.uk is one such. It should redirect you to the HTTPS version of that page, but at some point it will stop doing so for no obvious reason.",
    "closed_at": null,
    "comments": 10,
    "comments_url": "https://api.github.com/repos/caddyserver/caddy/issues/3016/comments",
    "created_at": "2020-01-31T20:55:00Z",
    "events_url": "https://api.github.com/repos/caddyserver/caddy/issues/3016/events",
    "html_url": "https://github.com/caddyserver/caddy/issues/3016",
    "id": 558367825,
    "labels": [],
    "labels_url": "https://api.github.com/repos/caddyserver/caddy/issues/3016/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1NTgzNjc4MjU=",
    "number": 3016,
    "repository_url": "https://api.github.com/repos/caddyserver/caddy",
    "state": "open",
    "title": "Caddy stops listening on port 80 on FreeBSD after some amount of time",
    "updated_at": "2020-02-06T16:05:46Z",
    "url": "https://api.github.com/repos/caddyserver/caddy/issues/3016",
    "user": {
      "avatar_url": "https://avatars0.githubusercontent.com/u/2798739?v=4",
      "events_url": "https://api.github.com/users/g-a-c/events{/privacy}",
      "followers_url": "https://api.github.com/users/g-a-c/followers",
      "following_url": "https://api.github.com/users/g-a-c/following{/other_user}",
      "gists_url": "https://api.github.com/users/g-a-c/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/g-a-c",
      "id": 2798739,
      "login": "g-a-c",
      "node_id": "MDQ6VXNlcjI3OTg3Mzk=",
      "organizations_url": "https://api.github.com/users/g-a-c/orgs",
      "received_events_url": "https://api.github.com/users/g-a-c/received_events",
      "repos_url": "https://api.github.com/users/g-a-c/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/g-a-c/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/g-a-c/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/g-a-c"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "In v1 `.env` files were supported through `-envfile` switch, will this be ported on to v2?\r\n\r\nI have been able to workaround this by using `set -a` before sourcing the env file, and there are also tools that enable this like [ruby's dotenv](https://github.com/bkeepers/dotenv), [npm's dotenv-cli](https://www.npmjs.com/package/dotenv-cli) or [godotenv](https://github.com/joho/godotenv)\r\n\r\nReference links:\r\n- Original v1 issue: https://github.com/caddyserver/caddy/issues/1941\r\n- https://caddy.community/t/caddy-v2-environment-variables/6736 ",
    "closed_at": null,
    "comments": 0,
    "comments_url": "https://api.github.com/repos/caddyserver/caddy/issues/3009/comments",
    "created_at": "2020-01-30T07:41:46Z",
    "events_url": "https://api.github.com/repos/caddyserver/caddy/issues/3009/events",
    "html_url": "https://github.com/caddyserver/caddy/issues/3009",
    "id": 557318995,
    "labels": [
      {
        "color": "c7def8",
        "default": false,
        "description": null,
        "id": 204890680,
        "name": "feature request",
        "node_id": "MDU6TGFiZWwyMDQ4OTA2ODA=",
        "url": "https://api.github.com/repos/caddyserver/caddy/labels/feature%20request"
      },
      {
        "color": "dbd523",
        "default": false,
        "description": "Specifically applies to Caddy 2",
        "id": 1436036184,
        "name": "v2",
        "node_id": "MDU6TGFiZWwxNDM2MDM2MTg0",
        "url": "https://api.github.com/repos/caddyserver/caddy/labels/v2"
      }
    ],
    "labels_url": "https://api.github.com/repos/caddyserver/caddy/issues/3009/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1NTczMTg5OTU=",
    "number": 3009,
    "repository_url": "https://api.github.com/repos/caddyserver/caddy",
    "state": "open",
    "title": "v2: Support for .env files",
    "updated_at": "2020-01-30T07:53:09Z",
    "url": "https://api.github.com/repos/caddyserver/caddy/issues/3009",
    "user": {
      "avatar_url": "https://avatars1.githubusercontent.com/u/7302877?v=4",
      "events_url": "https://api.github.com/users/RecuencoJones/events{/privacy}",
      "followers_url": "https://api.github.com/users/RecuencoJones/followers",
      "following_url": "https://api.github.com/users/RecuencoJones/following{/other_user}",
      "gists_url": "https://api.github.com/users/RecuencoJones/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/RecuencoJones",
      "id": 7302877,
      "login": "RecuencoJones",
      "node_id": "MDQ6VXNlcjczMDI4Nzc=",
      "organizations_url": "https://api.github.com/users/RecuencoJones/orgs",
      "received_events_url": "https://api.github.com/users/RecuencoJones/received_events",
      "repos_url": "https://api.github.com/users/RecuencoJones/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/RecuencoJones/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RecuencoJones/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/RecuencoJones"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "This would make Caddy's pull requests and commits indicate whether the specified minimum code coverage is satisfied by using GitHub Actions (no external service required).\r\n\r\nI created ci-go-cover.yml and put it on [github.com/x448/workflows](https://github.com/x448/workflows) because codecov.io asked permission to read private project boards and private email addresses:\r\n\r\n* their \"application will be able to read your organization, team membership, and private project boards.\"\r\n* their \"application will be able to read your private email addresses.\"\r\n\r\nBy comparison, nothing is uploaded or downloaded by ci-go-cover.yml. All the code in ci-go-cover.yml is embedded and easy-to-read with MIT License. The only external \"action\" script is provided by GitHub Inc. (actions/checkout@v2). It runs `go test -short -cover` -> `grep` -> `python`.\r\n\r\nExample project using this for code coverage badge is [fxamacker/cbor](https://github.com/fxamacker/cbor).\r\n\r\nI hope you find this useful.  Cheers!",
    "closed_at": null,
    "comments": 3,
    "comments_url": "https://api.github.com/repos/caddyserver/caddy/issues/3008/comments",
    "created_at": "2020-01-29T02:53:56Z",
    "events_url": "https://api.github.com/repos/caddyserver/caddy/issues/3008/events",
    "html_url": "https://github.com/caddyserver/caddy/issues/3008",
    "id": 556606360,
    "labels": [],
    "labels_url": "https://api.github.com/repos/caddyserver/caddy/issues/3008/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1NTY2MDYzNjA=",
    "number": 3008,
    "repository_url": "https://api.github.com/repos/caddyserver/caddy",
    "state": "open",
    "title": "Add code coverage badge and enforce min coverage (without sacrificing privacy)",
    "updated_at": "2020-02-15T18:05:14Z",
    "url": "https://api.github.com/repos/caddyserver/caddy/issues/3008",
    "user": {
      "avatar_url": "https://avatars0.githubusercontent.com/u/57072051?v=4",
      "events_url": "https://api.github.com/users/x448/events{/privacy}",
      "followers_url": "https://api.github.com/users/x448/followers",
      "following_url": "https://api.github.com/users/x448/following{/other_user}",
      "gists_url": "https://api.github.com/users/x448/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/x448",
      "id": 57072051,
      "login": "x448",
      "node_id": "MDQ6VXNlcjU3MDcyMDUx",
      "organizations_url": "https://api.github.com/users/x448/orgs",
      "received_events_url": "https://api.github.com/users/x448/received_events",
      "repos_url": "https://api.github.com/users/x448/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/x448/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/x448/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/x448"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "## What's expected to happen\r\n\r\ngo get github.com/caddyserver/caddy/caddy \r\n\r\nShould compile and produce a binary in `GOPATH:/bin/`\r\n\r\n## What happens\r\n\r\nSimilarly to what happens here: https://github.com/caddyserver/caddy/issues/3003. Here's the output:\r\n\r\n```\r\n$ go get github.com/caddyserver/caddy/caddy\r\n# github.com/caddyserver/caddy/caddytls\r\ngo/src/github.com/caddyserver/caddy/caddytls/tls.go:80:42: not enough arguments in call to certmagic.NewDefault().RevokeCert\r\n        have (string, bool)\r\n        want (context.Context, string, bool)\r\n```\r\n\r\nI managed to fix it by regressing `certmagic`. How I did it below:\r\n\r\n```\r\n$ cd go/src/github.com/mholt/certmagic/\r\n$ git checkout 32e52d625259ceb3254d291a3d0ba78ff1a7ac9b\r\nNote: switching to '32e52d625259ceb3254d291a3d0ba78ff1a7ac9b'.\r\n\r\nYou are in 'detached HEAD' state. You can look around, make experimental\r\nchanges and commit them, and you can discard any commits you make in this\r\nstate without impacting any branches by switching back to a branch.\r\n\r\nIf you want to create a new branch to retain commits you create, you may\r\ndo so (now or later) by using -c with the switch command. Example:\r\n\r\n  git switch -c <new-branch-name>\r\n\r\nOr undo this operation with:\r\n\r\n  git switch -\r\n\r\nTurn off this advice by setting config variable advice.detachedHead to false\r\n\r\nHEAD is now at 32e52d6 Create FUNDING.yml\r\n$ cd ~\r\n$ go get github.com/caddyserver/caddy/caddy\r\n```\r\n\r\nWhen it did build, I went to run it and here was the output:\r\n\r\n\r\n```\r\n$ go/bin/caddy \r\npanic: qtls.ConnectionState not compatible with tls.ConnectionState\r\n\r\ngoroutine 1 [running]:\r\ngithub.com/lucas-clemente/quic-go/internal/handshake.init.2()\r\n        /usr/home/freebsd/go/src/github.com/lucas-clemente/quic-go/internal/handshake/unsafe.go:17 +0x1aa\r\n```\r\n\r\n## System info\r\n\r\n```\r\n$ uname\r\nFreeBSD\r\n$ uname -r\r\n12.1-RELEASE-p1\r\n```\r\n\r\n```\r\n$ go version\r\ngo version go1.13.5 freebsd/amd64\r\n```",
    "closed_at": null,
    "comments": 7,
    "comments_url": "https://api.github.com/repos/caddyserver/caddy/issues/3007/comments",
    "created_at": "2020-01-27T18:58:02Z",
    "events_url": "https://api.github.com/repos/caddyserver/caddy/issues/3007/events",
    "html_url": "https://github.com/caddyserver/caddy/issues/3007",
    "id": 555768145,
    "labels": [],
    "labels_url": "https://api.github.com/repos/caddyserver/caddy/issues/3007/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1NTU3NjgxNDU=",
    "number": 3007,
    "repository_url": "https://api.github.com/repos/caddyserver/caddy",
    "state": "open",
    "title": "FreeBSD build fails to run after go get",
    "updated_at": "2020-02-22T16:18:51Z",
    "url": "https://api.github.com/repos/caddyserver/caddy/issues/3007",
    "user": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/1015795?v=4",
      "events_url": "https://api.github.com/users/jaredwolff/events{/privacy}",
      "followers_url": "https://api.github.com/users/jaredwolff/followers",
      "following_url": "https://api.github.com/users/jaredwolff/following{/other_user}",
      "gists_url": "https://api.github.com/users/jaredwolff/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jaredwolff",
      "id": 1015795,
      "login": "jaredwolff",
      "node_id": "MDQ6VXNlcjEwMTU3OTU=",
      "organizations_url": "https://api.github.com/users/jaredwolff/orgs",
      "received_events_url": "https://api.github.com/users/jaredwolff/received_events",
      "repos_url": "https://api.github.com/users/jaredwolff/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jaredwolff/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jaredwolff/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jaredwolff"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Hey,\r\nAt the moment Caddy uses GO's _listen_ function from the _net_ library which takes care of everything until, and including, the TCP handshake, and enables reading the TCP data from the socket.\r\nSo the \"lowest\" I can get to is the raw data from the TCP socket.\r\n\r\nI'd like to know it'd be possible for Caddy to use another function\\library that would enable access to the raw socket itself, and to the IP and TCP level, including the TCP SYN packets for example.\r\n\r\nThis would enable implementation of IP\\TCP fingerprinting, which can be performed by accessing values such as ip.ttl and tcp.window_size.\r\nMoreover, it can potentially be used for implementing defenses for some DoS\\DDoS attacks such as SYN flood.\r\n",
    "closed_at": null,
    "comments": 3,
    "comments_url": "https://api.github.com/repos/caddyserver/caddy/issues/3006/comments",
    "created_at": "2020-01-26T12:35:02Z",
    "events_url": "https://api.github.com/repos/caddyserver/caddy/issues/3006/events",
    "html_url": "https://github.com/caddyserver/caddy/issues/3006",
    "id": 555222208,
    "labels": [
      {
        "color": "c7def8",
        "default": false,
        "description": null,
        "id": 204890680,
        "name": "feature request",
        "node_id": "MDU6TGFiZWwyMDQ4OTA2ODA=",
        "url": "https://api.github.com/repos/caddyserver/caddy/labels/feature%20request"
      },
      {
        "color": "dbd523",
        "default": false,
        "description": "Specifically applies to Caddy 2",
        "id": 1436036184,
        "name": "v2",
        "node_id": "MDU6TGFiZWwxNDM2MDM2MTg0",
        "url": "https://api.github.com/repos/caddyserver/caddy/labels/v2"
      }
    ],
    "labels_url": "https://api.github.com/repos/caddyserver/caddy/issues/3006/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1NTUyMjIyMDg=",
    "number": 3006,
    "repository_url": "https://api.github.com/repos/caddyserver/caddy",
    "state": "open",
    "title": "v2: Expose IP and TCP layer",
    "updated_at": "2020-02-04T18:18:13Z",
    "url": "https://api.github.com/repos/caddyserver/caddy/issues/3006",
    "user": {
      "avatar_url": "https://avatars1.githubusercontent.com/u/52703696?v=4",
      "events_url": "https://api.github.com/users/kjiregt845gj/events{/privacy}",
      "followers_url": "https://api.github.com/users/kjiregt845gj/followers",
      "following_url": "https://api.github.com/users/kjiregt845gj/following{/other_user}",
      "gists_url": "https://api.github.com/users/kjiregt845gj/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/kjiregt845gj",
      "id": 52703696,
      "login": "kjiregt845gj",
      "node_id": "MDQ6VXNlcjUyNzAzNjk2",
      "organizations_url": "https://api.github.com/users/kjiregt845gj/orgs",
      "received_events_url": "https://api.github.com/users/kjiregt845gj/received_events",
      "repos_url": "https://api.github.com/users/kjiregt845gj/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/kjiregt845gj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kjiregt845gj/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/kjiregt845gj"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Installation via `go get` is failing for me:\r\n\r\n```\r\n$ go get -u github.com/caddyserver/caddy/caddy\r\n# github.com/caddyserver/caddy/caddytls\r\n../go/src/github.com/caddyserver/caddy/caddytls/tls.go:80:42: not enough arguments in call to certmagic.NewDefault().RevokeCert\r\n        have (string, bool)\r\n        want (context.Context, string, bool)\r\n\r\n```\r\n\r\nSame result for me with `go version go1.13.6 linux/amd64` and `go version go1.13.5 darwin/amd64`",
    "closed_at": null,
    "comments": 11,
    "comments_url": "https://api.github.com/repos/caddyserver/caddy/issues/3003/comments",
    "created_at": "2020-01-25T20:27:52Z",
    "events_url": "https://api.github.com/repos/caddyserver/caddy/issues/3003/events",
    "html_url": "https://github.com/caddyserver/caddy/issues/3003",
    "id": 555134259,
    "labels": [],
    "labels_url": "https://api.github.com/repos/caddyserver/caddy/issues/3003/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1NTUxMzQyNTk=",
    "number": 3003,
    "repository_url": "https://api.github.com/repos/caddyserver/caddy",
    "state": "open",
    "title": "go get installation failing",
    "updated_at": "2020-02-10T22:23:11Z",
    "url": "https://api.github.com/repos/caddyserver/caddy/issues/3003",
    "user": {
      "avatar_url": "https://avatars3.githubusercontent.com/u/6276?v=4",
      "events_url": "https://api.github.com/users/jkriss/events{/privacy}",
      "followers_url": "https://api.github.com/users/jkriss/followers",
      "following_url": "https://api.github.com/users/jkriss/following{/other_user}",
      "gists_url": "https://api.github.com/users/jkriss/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jkriss",
      "id": 6276,
      "login": "jkriss",
      "node_id": "MDQ6VXNlcjYyNzY=",
      "organizations_url": "https://api.github.com/users/jkriss/orgs",
      "received_events_url": "https://api.github.com/users/jkriss/received_events",
      "repos_url": "https://api.github.com/users/jkriss/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jkriss/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jkriss/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jkriss"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Hi,\r\n\r\nJust to let you know that [this documentation page](https://caddyserver.com/docs/json/apps/http/) indicates that the request's original URI placeholder is `{http.request.orig.uri}`, but it happens to be wrong. It is actually `{http.request.orig_uri}`.\r\n\r\nThanks for the amazing work :pray: .",
    "closed_at": null,
    "comments": 3,
    "comments_url": "https://api.github.com/repos/caddyserver/caddy/issues/3001/comments",
    "created_at": "2020-01-25T19:05:05Z",
    "events_url": "https://api.github.com/repos/caddyserver/caddy/issues/3001/events",
    "html_url": "https://github.com/caddyserver/caddy/issues/3001",
    "id": 555124280,
    "labels": [
      {
        "color": "bfe5bf",
        "default": true,
        "description": null,
        "id": 222799031,
        "name": "documentation",
        "node_id": "MDU6TGFiZWwyMjI3OTkwMzE=",
        "url": "https://api.github.com/repos/caddyserver/caddy/labels/documentation"
      },
      {
        "color": "dbd523",
        "default": false,
        "description": "Specifically applies to Caddy 2",
        "id": 1436036184,
        "name": "v2",
        "node_id": "MDU6TGFiZWwxNDM2MDM2MTg0",
        "url": "https://api.github.com/repos/caddyserver/caddy/labels/v2"
      }
    ],
    "labels_url": "https://api.github.com/repos/caddyserver/caddy/issues/3001/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1NTUxMjQyODA=",
    "number": 3001,
    "repository_url": "https://api.github.com/repos/caddyserver/caddy",
    "state": "open",
    "title": "V2: incorrect documentation for original uri placeholders",
    "updated_at": "2020-02-22T11:04:10Z",
    "url": "https://api.github.com/repos/caddyserver/caddy/issues/3001",
    "user": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/3407667?v=4",
      "events_url": "https://api.github.com/users/gilbsgilbs/events{/privacy}",
      "followers_url": "https://api.github.com/users/gilbsgilbs/followers",
      "following_url": "https://api.github.com/users/gilbsgilbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/gilbsgilbs/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/gilbsgilbs",
      "id": 3407667,
      "login": "gilbsgilbs",
      "node_id": "MDQ6VXNlcjM0MDc2Njc=",
      "organizations_url": "https://api.github.com/users/gilbsgilbs/orgs",
      "received_events_url": "https://api.github.com/users/gilbsgilbs/received_events",
      "repos_url": "https://api.github.com/users/gilbsgilbs/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/gilbsgilbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gilbsgilbs/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/gilbsgilbs"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "I am trying with the docker image caddy/caddy:alpine to host a reverse proxy\r\nfrom a unix domain socket to an unix domain socket.\r\n\r\nThe whole purpose is to overwrite the http2 \":authority\" header with \"localhost\".\r\nheader \":authority: /tmp/caddy.sock\"  should be header \":authority: localhost\"\r\n\r\nthe connection is comming from an gRPC golang client (h2, no tls). \r\nthis does not support ALPN and need to be in http/2 \r\n\r\nTest Caddyfile\r\n```\r\nhttp://localhost\r\n\r\nbind unix//tmp/caddy.sock\r\n\r\nreverse_proxy unix//tmp/upstream.sock {\r\n    header_up :authority localhost\r\n}\r\n```\r\n\r\nQuestions / Bugs:\r\n-- How to create a catch to any hostname or a section with an socket name like \"/tmp/caddy.sock\"? \r\n-- How to force to http2 ? \r\n-- If caddy is binding to an UDS, it will create a file but including the port \"/tmp/caddy.sock:80\"\r\n\r\n\r\n",
    "closed_at": null,
    "comments": 1,
    "comments_url": "https://api.github.com/repos/caddyserver/caddy/issues/2999/comments",
    "created_at": "2020-01-24T14:23:58Z",
    "events_url": "https://api.github.com/repos/caddyserver/caddy/issues/2999/events",
    "html_url": "https://github.com/caddyserver/caddy/issues/2999",
    "id": 554764881,
    "labels": [
      {
        "color": "dbd523",
        "default": false,
        "description": "Specifically applies to Caddy 2",
        "id": 1436036184,
        "name": "v2",
        "node_id": "MDU6TGFiZWwxNDM2MDM2MTg0",
        "url": "https://api.github.com/repos/caddyserver/caddy/labels/v2"
      }
    ],
    "labels_url": "https://api.github.com/repos/caddyserver/caddy/issues/2999/labels{/name}",
    "locked": false,
    "milestone": {
      "closed_at": null,
      "closed_issues": 81,
      "created_at": "2017-03-07T02:57:47Z",
      "creator": {
        "avatar_url": "https://avatars2.githubusercontent.com/u/1128849?v=4",
        "events_url": "https://api.github.com/users/mholt/events{/privacy}",
        "followers_url": "https://api.github.com/users/mholt/followers",
        "following_url": "https://api.github.com/users/mholt/following{/other_user}",
        "gists_url": "https://api.github.com/users/mholt/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/mholt",
        "id": 1128849,
        "login": "mholt",
        "node_id": "MDQ6VXNlcjExMjg4NDk=",
        "organizations_url": "https://api.github.com/users/mholt/orgs",
        "received_events_url": "https://api.github.com/users/mholt/received_events",
        "repos_url": "https://api.github.com/users/mholt/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/mholt/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mholt/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/mholt"
      },
      "description": "2.0 is the next generation of Caddy, and it's AWESOME. This milestone is for things planned for version 2, but not sure at what point in the dev tree it will happen yet.",
      "due_on": null,
      "html_url": "https://github.com/caddyserver/caddy/milestone/4",
      "id": 2367944,
      "labels_url": "https://api.github.com/repos/caddyserver/caddy/milestones/4/labels",
      "node_id": "MDk6TWlsZXN0b25lMjM2Nzk0NA==",
      "number": 4,
      "open_issues": 65,
      "state": "open",
      "title": "2.0",
      "updated_at": "2020-02-29T20:23:21Z",
      "url": "https://api.github.com/repos/caddyserver/caddy/milestones/4"
    },
    "node_id": "MDU6SXNzdWU1NTQ3NjQ4ODE=",
    "number": 2999,
    "repository_url": "https://api.github.com/repos/caddyserver/caddy",
    "state": "open",
    "title": "Bind caddy on a Unix Domain Socket UDS with http/2 only",
    "updated_at": "2020-01-24T19:28:19Z",
    "url": "https://api.github.com/repos/caddyserver/caddy/issues/2999",
    "user": {
      "avatar_url": "https://avatars0.githubusercontent.com/u/1385312?v=4",
      "events_url": "https://api.github.com/users/Zetanova/events{/privacy}",
      "followers_url": "https://api.github.com/users/Zetanova/followers",
      "following_url": "https://api.github.com/users/Zetanova/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zetanova/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/Zetanova",
      "id": 1385312,
      "login": "Zetanova",
      "node_id": "MDQ6VXNlcjEzODUzMTI=",
      "organizations_url": "https://api.github.com/users/Zetanova/orgs",
      "received_events_url": "https://api.github.com/users/Zetanova/received_events",
      "repos_url": "https://api.github.com/users/Zetanova/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/Zetanova/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zetanova/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/Zetanova"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Binding on port 0 means the kernel will select an unused port.\r\nIt seems Caddy does not support it.\r\nDo you have plan to support it?\r\nThanks.",
    "closed_at": null,
    "comments": 6,
    "comments_url": "https://api.github.com/repos/caddyserver/caddy/issues/2992/comments",
    "created_at": "2020-01-20T07:01:37Z",
    "events_url": "https://api.github.com/repos/caddyserver/caddy/issues/2992/events",
    "html_url": "https://github.com/caddyserver/caddy/issues/2992",
    "id": 552105717,
    "labels": [
      {
        "color": "c7def8",
        "default": false,
        "description": null,
        "id": 204890680,
        "name": "feature request",
        "node_id": "MDU6TGFiZWwyMDQ4OTA2ODA=",
        "url": "https://api.github.com/repos/caddyserver/caddy/labels/feature%20request"
      }
    ],
    "labels_url": "https://api.github.com/repos/caddyserver/caddy/issues/2992/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1NTIxMDU3MTc=",
    "number": 2992,
    "repository_url": "https://api.github.com/repos/caddyserver/caddy",
    "state": "open",
    "title": "Support binding on port 0",
    "updated_at": "2020-01-22T00:21:42Z",
    "url": "https://api.github.com/repos/caddyserver/caddy/issues/2992",
    "user": {
      "avatar_url": "https://avatars1.githubusercontent.com/u/7183265?v=4",
      "events_url": "https://api.github.com/users/allentian/events{/privacy}",
      "followers_url": "https://api.github.com/users/allentian/followers",
      "following_url": "https://api.github.com/users/allentian/following{/other_user}",
      "gists_url": "https://api.github.com/users/allentian/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/allentian",
      "id": 7183265,
      "login": "allentian",
      "node_id": "MDQ6VXNlcjcxODMyNjU=",
      "organizations_url": "https://api.github.com/users/allentian/orgs",
      "received_events_url": "https://api.github.com/users/allentian/received_events",
      "repos_url": "https://api.github.com/users/allentian/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/allentian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/allentian/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/allentian"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Caddyfile:\r\n\r\n```\r\ntest.menci.moe:1001 {\r\n    proxy / http://127.0.0.1:80\r\n    log / /var/log/caddy/access.log\r\n    tls /etc/ssl/caddy/ssl.crt /etc/ssl/caddy/ssl.key\r\n}\r\n```\r\n\r\nStart with `-log stdout -agree=true -conf=/etc/caddy/Caddyfile -root=/var/tmp -quic`, test HTTP/3 with:\r\n\r\n```\r\n$ curl++ --resolve test.menci.moe:1001:112.74.181.51 https://test.menci.moe:1001/http3-test -vvvv\r\n* Added test.menci.moe:1001:112.74.181.51 to DNS cache\r\n* Hostname test.menci.moe was found in DNS cache\r\n*   Trying 112.74.181.51:1001...\r\n* Sent QUIC client Initial, ALPN: h3-23\r\n* h3 [:method: GET]\r\n* h3 [:path: /http3-test]\r\n* h3 [:scheme: https]\r\n* h3 [:authority: test.menci.moe:1001]\r\n* h3 [user-agent: curl/7.68.0]\r\n* h3 [accept: */*]\r\n* Using HTTP/3 Stream ID: 0 (easy handle 0x555e6af72890)\r\n> GET /http3-test HTTP/3\r\n> Host: test.menci.moe:1001\r\n> user-agent: curl/7.68.0\r\n> accept: */*\r\n> \r\n< HTTP/3 500\r\n< alt-svc: h3-23=\":1001\"; ma=2592000\r\n< server: Caddy\r\n< content-type: text/plain; charset=utf-8\r\n< x-content-type-options: nosniff\r\n< \r\n500 Internal Server Error\r\n* Connection #0 to host test.menci.moe left intact\r\n```\r\n\r\nWhile HTTP/2 works:\r\n\r\n```\r\ncurl++ --http2 --resolve test.menci.moe:1001:112.74.181.51 https://test.menci.moe:1001/http3-test -vvvv\r\n* Added test.menci.moe:1001:112.74.181.51 to DNS cache\r\n* Hostname test.menci.moe was found in DNS cache\r\n*   Trying 112.74.181.51:1001...\r\n* TCP_NODELAY set\r\n* Connected to test.menci.moe (112.74.181.51) port 1001 (#0)\r\n* ALPN, offering h2\r\n* ALPN, offering http/1.1\r\n* successfully set certificate verify locations:\r\n*   CAfile: /etc/ssl/certs/ca-certificates.crt\r\n  CApath: none\r\n* TLSv1.2 (OUT), TLS handshake, Client hello (1):\r\n* TLSv1.2 (IN), TLS handshake, Server hello (2):\r\n* TLSv1.2 (IN), TLS handshake, Certificate (11):\r\n* TLSv1.2 (IN), TLS handshake, Server key exchange (12):\r\n* TLSv1.2 (IN), TLS handshake, Server finished (14):\r\n* TLSv1.2 (OUT), TLS handshake, Client key exchange (16):\r\n* TLSv1.2 (OUT), TLS change cipher, Change cipher spec (1):\r\n* TLSv1.2 (OUT), TLS handshake, Finished (20):\r\n* TLSv1.2 (IN), TLS change cipher, Change cipher spec (1):\r\n* TLSv1.2 (IN), TLS handshake, Finished (20):\r\n* SSL connection using TLSv1.2 / ECDHE-RSA-AES256-GCM-SHA384\r\n* ALPN, server accepted to use h2\r\n* Server certificate:\r\n*  subject: CN=menci.moe\r\n*  start date: Jan 13 15:37:09 2020 GMT\r\n*  expire date: Apr 12 15:37:09 2020 GMT\r\n*  subjectAltName: host \"test.menci.moe\" matched cert's \"*.menci.moe\"\r\n*  issuer: C=US; O=Let's Encrypt; CN=Let's Encrypt Authority X3\r\n*  SSL certificate verify ok.\r\n* Using HTTP2, server supports multi-use\r\n* Connection state changed (HTTP/2 confirmed)\r\n* Copying HTTP/2 data in stream buffer to connection buffer after upgrade: len=0\r\n* Using Stream ID: 1 (easy handle 0x562a9b029890)\r\n> GET /http3-test HTTP/2\r\n> Host: test.menci.moe:1001\r\n> user-agent: curl/7.68.0\r\n> accept: */*\r\n> \r\n* Connection state changed (MAX_CONCURRENT_STREAMS == 250)!\r\n< HTTP/2 301 \r\n< alt-svc: h3-23=\":1001\"; ma=2592000\r\n< content-type: text/html\r\n< date: Fri, 17 Jan 2020 14:42:01 GMT\r\n< location: https://127.0.0.1/http3-test\r\n< server: Caddy\r\n< server: nginx/1.14.0 (Ubuntu)\r\n< strict-transport-security: max-age=0; includeSubDomains\r\n< content-length: 194\r\n< \r\n<html>\r\n<head><title>301 Moved Permanently</title></head>\r\n<body bgcolor=\"white\">\r\n<center><h1>301 Moved Permanently</h1></center>\r\n<hr><center>nginx/1.14.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n* Connection #0 to host test.menci.moe left intact\r\n```\r\n\r\nRemoving the \"log\" line solves the problem. But logging is working (for HTTP/2). Changing the \"proxy\" line to a \"root\" line also works. An \"error\" line doesn't involve the problem and give me these error log:\r\n\r\n```\r\n2020/01/17 22:32:34 [PANIC /http3-test] caddyhttp/httpserver/responsewriterwrapper.go:55 - *http3.responseWriter is not a closeNotifier\r\n```",
    "closed_at": null,
    "comments": 0,
    "comments_url": "https://api.github.com/repos/caddyserver/caddy/issues/2984/comments",
    "created_at": "2020-01-17T14:44:34Z",
    "events_url": "https://api.github.com/repos/caddyserver/caddy/issues/2984/events",
    "html_url": "https://github.com/caddyserver/caddy/issues/2984",
    "id": 551454784,
    "labels": [],
    "labels_url": "https://api.github.com/repos/caddyserver/caddy/issues/2984/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1NTE0NTQ3ODQ=",
    "number": 2984,
    "repository_url": "https://api.github.com/repos/caddyserver/caddy",
    "state": "open",
    "title": "v1: \"log\" with \"proxy\" breaks HTTP/3",
    "updated_at": "2020-01-17T15:02:11Z",
    "url": "https://api.github.com/repos/caddyserver/caddy/issues/2984",
    "user": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/11341955?v=4",
      "events_url": "https://api.github.com/users/Menci/events{/privacy}",
      "followers_url": "https://api.github.com/users/Menci/followers",
      "following_url": "https://api.github.com/users/Menci/following{/other_user}",
      "gists_url": "https://api.github.com/users/Menci/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/Menci",
      "id": 11341955,
      "login": "Menci",
      "node_id": "MDQ6VXNlcjExMzQxOTU1",
      "organizations_url": "https://api.github.com/users/Menci/orgs",
      "received_events_url": "https://api.github.com/users/Menci/received_events",
      "repos_url": "https://api.github.com/users/Menci/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/Menci/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Menci/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/Menci"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "system: macos\r\ncaddy version: caddy2-beta12\r\n\r\nI use caddy start to start caddy, then use `POST /load` to update the config. My config is here:\r\n```json\r\n{\r\n  \"apps\": {\r\n    \"http\": {\r\n      \"servers\": {\r\n        \"client-local.test.api\": {\r\n          \"listen\": [\":8088\"],\r\n          \"routes\": [\r\n            {\r\n              \"handle\": [\r\n                {\r\n                  \"handler\": \"subroute\",\r\n                  \"routes\": [\r\n                    {\r\n                      \"handle\": [\r\n                        {\r\n                          \"handler\": \"rewrite\",\r\n                          \"uri\": \"/{http.matchers.path_regexp.api.1}\"\r\n                        },\r\n                        {\r\n                          \"handler\": \"reverse_proxy\",\r\n                          \"transport\": {\r\n                            \"protocol\": \"http\",\r\n                            \"read_buffer_size\": 4096\r\n                          },\r\n                          \"upstreams\": [{ \"dial\": \"localhost:8080\" }]\r\n                        }\r\n                      ],\r\n                      \"match\": [\r\n                        {\r\n                          \"path_regexp\": {\r\n                            \"name\": \"api\",\r\n                            \"pattern\": \"^/api/(.*)$\"\r\n                          }\r\n                        }\r\n                      ]\r\n                    }\r\n                  ]\r\n                }\r\n              ],\r\n              \"match\": [{ \"host\": [\"localhost\", \"127.0.0.1\"] }]\r\n            }\r\n          ]\r\n        },\r\n        \"client.test.com\": {\r\n          \"listen\": [\":80\"],\r\n          \"routes\": [\r\n            {\r\n              \"handle\": [\r\n                {\r\n                  \"handler\": \"subroute\",\r\n                  \"routes\": [\r\n                    {\r\n                      \"handle\": [\r\n                        {\r\n                          \"handler\": \"rewrite\",\r\n                          \"uri\": \"{http.matchers.path_regexp.api.1}\"\r\n                        },\r\n                        {\r\n                          \"handler\": \"reverse_proxy\",\r\n                          \"transport\": {\r\n                            \"protocol\": \"http\",\r\n                            \"read_buffer_size\": 4096\r\n                          },\r\n                          \"upstreams\": [{ \"dial\": \"localhost:8080\" }]\r\n                        }\r\n                      ],\r\n                      \"match\": [\r\n                        {\r\n                          \"path_regexp\": {\r\n                            \"name\": \"api\",\r\n                            \"pattern\": \"^/api/(.*)$\"\r\n                          }\r\n                        }\r\n                      ]\r\n                    },\r\n                    {\r\n                      \"handle\": [\r\n                        {\r\n                          \"handler\": \"reverse_proxy\",\r\n                          \"transport\": {\r\n                            \"protocol\": \"http\",\r\n                            \"read_buffer_size\": 4096\r\n                          },\r\n                          \"upstreams\": [{ \"dial\": \"localhost:3000\" }]\r\n                        }\r\n                      ],\r\n                      \"match\": [{ \"path\": [\"/\"] }]\r\n                    }\r\n                  ]\r\n                }\r\n              ],\r\n              \"match\": [{ \"host\": [\"client.test.com\"] }]\r\n            }\r\n          ]\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n```\r\n\r\nThe no matter what change I do to the config, I `POST /load` again, caddy will throw error:\r\n\r\n```\r\nERROR\tadmin\tstopping current admin endpoint\t{\"error\": \"shutting down admin server: context deadline exceeded\"}\r\n```\r\n\r\nThen caddy dead, I can't even `caddy stop` it.",
    "closed_at": null,
    "comments": 1,
    "comments_url": "https://api.github.com/repos/caddyserver/caddy/issues/2978/comments",
    "created_at": "2020-01-16T08:02:16Z",
    "events_url": "https://api.github.com/repos/caddyserver/caddy/issues/2978/events",
    "html_url": "https://github.com/caddyserver/caddy/issues/2978",
    "id": 550639250,
    "labels": [],
    "labels_url": "https://api.github.com/repos/caddyserver/caddy/issues/2978/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1NTA2MzkyNTA=",
    "number": 2978,
    "repository_url": "https://api.github.com/repos/caddyserver/caddy",
    "state": "open",
    "title": "stopping current admin endpoint\t{\"error\": \"shutting down admin server: context deadline exceeded\"}",
    "updated_at": "2020-01-16T16:58:42Z",
    "url": "https://api.github.com/repos/caddyserver/caddy/issues/2978",
    "user": {
      "avatar_url": "https://avatars3.githubusercontent.com/u/2088642?v=4",
      "events_url": "https://api.github.com/users/Jokcy/events{/privacy}",
      "followers_url": "https://api.github.com/users/Jokcy/followers",
      "following_url": "https://api.github.com/users/Jokcy/following{/other_user}",
      "gists_url": "https://api.github.com/users/Jokcy/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/Jokcy",
      "id": 2088642,
      "login": "Jokcy",
      "node_id": "MDQ6VXNlcjIwODg2NDI=",
      "organizations_url": "https://api.github.com/users/Jokcy/orgs",
      "received_events_url": "https://api.github.com/users/Jokcy/received_events",
      "repos_url": "https://api.github.com/users/Jokcy/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/Jokcy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Jokcy/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/Jokcy"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "As requested in [this forum thread](https://caddy.community/t/proxy-cache-with-redis-storage-and-serving-stale/6689/2), I want to be able to use caddy as a reverse caching proxy which makes an service more resilient to outages of the origin server, so that if the origin goes down or responds with errors, caddy serves old content.\r\n\r\nSpecifically:\r\n\r\n1. I only want http 200 responses to be cached \r\n2. If an origin server responds with http 5xx, I want to serve stale content from the cache.\r\n\r\nAlso attaching a corresponding nginx.conf which achieves what I want for reference.\r\n\r\n[nginx.conf.gz](https://github.com/caddyserver/caddy/files/4006859/nginx.conf.gz)",
    "closed_at": null,
    "comments": 1,
    "comments_url": "https://api.github.com/repos/caddyserver/caddy/issues/2951/comments",
    "created_at": "2019-12-28T08:22:23Z",
    "events_url": "https://api.github.com/repos/caddyserver/caddy/issues/2951/events",
    "html_url": "https://github.com/caddyserver/caddy/issues/2951",
    "id": 543094839,
    "labels": [
      {
        "color": "c7def8",
        "default": false,
        "description": null,
        "id": 204890680,
        "name": "feature request",
        "node_id": "MDU6TGFiZWwyMDQ4OTA2ODA=",
        "url": "https://api.github.com/repos/caddyserver/caddy/labels/feature%20request"
      },
      {
        "color": "dbd523",
        "default": false,
        "description": "Specifically applies to Caddy 2",
        "id": 1436036184,
        "name": "v2",
        "node_id": "MDU6TGFiZWwxNDM2MDM2MTg0",
        "url": "https://api.github.com/repos/caddyserver/caddy/labels/v2"
      }
    ],
    "labels_url": "https://api.github.com/repos/caddyserver/caddy/issues/2951/labels{/name}",
    "locked": false,
    "milestone": {
      "closed_at": null,
      "closed_issues": 81,
      "created_at": "2017-03-07T02:57:47Z",
      "creator": {
        "avatar_url": "https://avatars2.githubusercontent.com/u/1128849?v=4",
        "events_url": "https://api.github.com/users/mholt/events{/privacy}",
        "followers_url": "https://api.github.com/users/mholt/followers",
        "following_url": "https://api.github.com/users/mholt/following{/other_user}",
        "gists_url": "https://api.github.com/users/mholt/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/mholt",
        "id": 1128849,
        "login": "mholt",
        "node_id": "MDQ6VXNlcjExMjg4NDk=",
        "organizations_url": "https://api.github.com/users/mholt/orgs",
        "received_events_url": "https://api.github.com/users/mholt/received_events",
        "repos_url": "https://api.github.com/users/mholt/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/mholt/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mholt/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/mholt"
      },
      "description": "2.0 is the next generation of Caddy, and it's AWESOME. This milestone is for things planned for version 2, but not sure at what point in the dev tree it will happen yet.",
      "due_on": null,
      "html_url": "https://github.com/caddyserver/caddy/milestone/4",
      "id": 2367944,
      "labels_url": "https://api.github.com/repos/caddyserver/caddy/milestones/4/labels",
      "node_id": "MDk6TWlsZXN0b25lMjM2Nzk0NA==",
      "number": 4,
      "open_issues": 65,
      "state": "open",
      "title": "2.0",
      "updated_at": "2020-02-29T20:23:21Z",
      "url": "https://api.github.com/repos/caddyserver/caddy/milestones/4"
    },
    "node_id": "MDU6SXNzdWU1NDMwOTQ4Mzk=",
    "number": 2951,
    "repository_url": "https://api.github.com/repos/caddyserver/caddy",
    "state": "open",
    "title": "Serve stale content from cache if origin responds with 5xx",
    "updated_at": "2019-12-29T20:00:49Z",
    "url": "https://api.github.com/repos/caddyserver/caddy/issues/2951",
    "user": {
      "avatar_url": "https://avatars0.githubusercontent.com/u/887132?v=4",
      "events_url": "https://api.github.com/users/rrva/events{/privacy}",
      "followers_url": "https://api.github.com/users/rrva/followers",
      "following_url": "https://api.github.com/users/rrva/following{/other_user}",
      "gists_url": "https://api.github.com/users/rrva/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rrva",
      "id": 887132,
      "login": "rrva",
      "node_id": "MDQ6VXNlcjg4NzEzMg==",
      "organizations_url": "https://api.github.com/users/rrva/orgs",
      "received_events_url": "https://api.github.com/users/rrva/received_events",
      "repos_url": "https://api.github.com/users/rrva/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rrva/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rrva/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rrva"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "I use `reverse_proxy` and `rewrite` handle to proxy admin rest api endpoint `localhost:2019` as path `localhost:2020/caddy2-api`, then I use the endpoint `'localhost:2020/caddy2-api` to add route for other server and will wait the connection reply forover\r\n\r\nthe step to report\r\nsave the below content to `caddy.json`, and `caddy2 run -config caddy.json`, then use the last section curl code check this problem\r\n```json\r\n{\r\n\"admin\": {\r\n  \"disabled\": false,\r\n  \"listen\": \"localhost:2019\",\r\n  \"enforce_origin\": false,\r\n  \"origins\": []\r\n},\r\n\"apps\": { \"http\": { \"servers\": {\r\n    \"caddy2-admin-webui\": {\r\n      \"listen\": [\"localhost:2020\"],\r\n      \"routes\": [\r\n        {\r\n          \"match\": [{ \"path\": [\"/caddy-api\"] }],\r\n          \"handle\": [\r\n            { \"handler\": \"rewrite\", \"strip_path_prefix\": \"/caddy-api\" },\r\n            { \"handler\": \"reverse_proxy\", \"upstreams\": [{ \"dial\": \"localhost:2019\" }] }\r\n          ],\r\n          \"terminal\": true\r\n        }\r\n      ],\r\n      \"automatic_https\": { \"disable\": true }\r\n    },\r\n    \"example-server\": {\r\n      \"listen\": [\"localhost:2021\"],\r\n      \"routes\": [\r\n        {\r\n          \"handle\": [\r\n            { \"handler\": \"static_response\", \"body\": \"response\" }\r\n          ]\r\n        }\r\n      ],\r\n      \"automatic_https\": { \"disable\": true }\r\n    }\r\n  }\r\n} } \r\n}\r\n``` \r\nGet the first route from `example-sever`\r\n```sh\r\ncurl -i -X GET http://localhost:2019/config/apps/http/servers/example-server/routes\r\n```\r\nAdd Route to `example-sever`\r\n```sh\r\n# Add Route through reverse proxy api. if without -m timeout param the connection will wait for forever\r\ncurl -i -m 5 -H \"Content-Type: application/json\" -d '{\"handle\": [{ \"handler\": \"static_response\", \"body\": \"response\" }]}' -X POST http://localhost:2020/caddy-api/config/apps/http/servers/example-server/routes\r\n# Check routes and found the route had been added\r\ncurl -i -X GET http://localhost:2020/caddy-api/config/apps/http/servers/example-server/routes\r\n# Add Route through api, this is fine\r\ncurl -i -H \"Content-Type: application/json\" -d '{\"handle\": [{ \"handler\": \"static_response\", \"body\": \"response\" }]}' -X POST http://localhost:2019/config/apps/http/servers/example-server/routes\r\n# cehck routes and this is fine\r\ncurl -i -X GET http://localhost:2019/config/apps/http/servers/example-server/routes\r\n```\r\nDel Route from `example-sever`\r\n```sh\r\n# Delete Route through reverse proxy api. if without -m timeout param the connection will wait for forever\r\ncurl -i -m 5 -X DELETE http://localhost:2020/caddy-api/config/apps/http/servers/example-server/routes/2\r\n# Check routes and found the route had been deleted\r\ncurl -i -X GET http://localhost:2020/caddy-api/config/apps/http/servers/example-server/routes\r\n# Delete Route through api, this is fine\r\ncurl -i -X DELETE http://localhost:2019/config/apps/http/servers/example-server/routes/1\r\n# cehck routes and this is fine\r\ncurl -i -X GET http://localhost:2019/config/apps/http/servers/example-server/routes\r\n```\r\n",
    "closed_at": null,
    "comments": 4,
    "comments_url": "https://api.github.com/repos/caddyserver/caddy/issues/2938/comments",
    "created_at": "2019-12-18T08:32:50Z",
    "events_url": "https://api.github.com/repos/caddyserver/caddy/issues/2938/events",
    "html_url": "https://github.com/caddyserver/caddy/issues/2938",
    "id": 539531803,
    "labels": [],
    "labels_url": "https://api.github.com/repos/caddyserver/caddy/issues/2938/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1Mzk1MzE4MDM=",
    "number": 2938,
    "repository_url": "https://api.github.com/repos/caddyserver/caddy",
    "state": "open",
    "title": "v2: add one server route config will effect all server route",
    "updated_at": "2019-12-24T08:00:07Z",
    "url": "https://api.github.com/repos/caddyserver/caddy/issues/2938",
    "user": {
      "avatar_url": "https://avatars1.githubusercontent.com/u/17316043?v=4",
      "events_url": "https://api.github.com/users/shynome/events{/privacy}",
      "followers_url": "https://api.github.com/users/shynome/followers",
      "following_url": "https://api.github.com/users/shynome/following{/other_user}",
      "gists_url": "https://api.github.com/users/shynome/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/shynome",
      "id": 17316043,
      "login": "shynome",
      "node_id": "MDQ6VXNlcjE3MzE2MDQz",
      "organizations_url": "https://api.github.com/users/shynome/orgs",
      "received_events_url": "https://api.github.com/users/shynome/received_events",
      "repos_url": "https://api.github.com/users/shynome/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/shynome/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shynome/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/shynome"
    }
  },
  {
    "assignee": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/1128849?v=4",
      "events_url": "https://api.github.com/users/mholt/events{/privacy}",
      "followers_url": "https://api.github.com/users/mholt/followers",
      "following_url": "https://api.github.com/users/mholt/following{/other_user}",
      "gists_url": "https://api.github.com/users/mholt/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mholt",
      "id": 1128849,
      "login": "mholt",
      "node_id": "MDQ6VXNlcjExMjg4NDk=",
      "organizations_url": "https://api.github.com/users/mholt/orgs",
      "received_events_url": "https://api.github.com/users/mholt/received_events",
      "repos_url": "https://api.github.com/users/mholt/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mholt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mholt/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mholt"
    },
    "assignees": [
      {
        "avatar_url": "https://avatars2.githubusercontent.com/u/1128849?v=4",
        "events_url": "https://api.github.com/users/mholt/events{/privacy}",
        "followers_url": "https://api.github.com/users/mholt/followers",
        "following_url": "https://api.github.com/users/mholt/following{/other_user}",
        "gists_url": "https://api.github.com/users/mholt/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/mholt",
        "id": 1128849,
        "login": "mholt",
        "node_id": "MDQ6VXNlcjExMjg4NDk=",
        "organizations_url": "https://api.github.com/users/mholt/orgs",
        "received_events_url": "https://api.github.com/users/mholt/received_events",
        "repos_url": "https://api.github.com/users/mholt/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/mholt/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mholt/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/mholt"
      }
    ],
    "author_association": "NONE",
    "body": "#2428 implemented imports at the directive level and has been released for a while now, but [current version of the documentation](https://caddyserver.com/v1/docs/import) still states:\r\n\r\n> Like other directives, however, it cannot be used inside of other directives.\r\n\r\nwhich is no longer correct. It should rather be:\r\n\r\n> Unlike other directives, it can be used inside of other directives.\r\n\r\nI wanted to make a PR for such a tiny change but I wasn't able to find the documentation source code. Is it on GitHub?\r\n\r\nThanks.",
    "closed_at": null,
    "comments": 0,
    "comments_url": "https://api.github.com/repos/caddyserver/caddy/issues/2935/comments",
    "created_at": "2019-12-15T12:29:18Z",
    "events_url": "https://api.github.com/repos/caddyserver/caddy/issues/2935/events",
    "html_url": "https://github.com/caddyserver/caddy/issues/2935",
    "id": 538044439,
    "labels": [
      {
        "color": "bfe5bf",
        "default": true,
        "description": null,
        "id": 222799031,
        "name": "documentation",
        "node_id": "MDU6TGFiZWwyMjI3OTkwMzE=",
        "url": "https://api.github.com/repos/caddyserver/caddy/labels/documentation"
      }
    ],
    "labels_url": "https://api.github.com/repos/caddyserver/caddy/issues/2935/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1MzgwNDQ0Mzk=",
    "number": 2935,
    "repository_url": "https://api.github.com/repos/caddyserver/caddy",
    "state": "open",
    "title": "Documentation request: import directive can now be used within other directives",
    "updated_at": "2020-02-22T11:06:07Z",
    "url": "https://api.github.com/repos/caddyserver/caddy/issues/2935",
    "user": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/3407667?v=4",
      "events_url": "https://api.github.com/users/gilbsgilbs/events{/privacy}",
      "followers_url": "https://api.github.com/users/gilbsgilbs/followers",
      "following_url": "https://api.github.com/users/gilbsgilbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/gilbsgilbs/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/gilbsgilbs",
      "id": 3407667,
      "login": "gilbsgilbs",
      "node_id": "MDQ6VXNlcjM0MDc2Njc=",
      "organizations_url": "https://api.github.com/users/gilbsgilbs/orgs",
      "received_events_url": "https://api.github.com/users/gilbsgilbs/received_events",
      "repos_url": "https://api.github.com/users/gilbsgilbs/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/gilbsgilbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gilbsgilbs/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/gilbsgilbs"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Hello,\r\n\r\nas discussed over Twitter: https://twitter.com/mholt6/status/1203790630880600065 my idea would be to introduce [GoReleaser](https://goreleaser.com/) into the project. Currently as far as I've seen for CI is Azure Pipelines in use. In this issue I would:\r\n- Migrate to GitHub Actions, so CI functionality is moved fully to GitHub Actions (so everything is at a central place)\r\n- Add CD functionality with GoReleaser over GitHub Actions to automatically attach the binaries for the different architectures to the GitHub Release once a new Tag was published.\r\n- Configure GoReleaser that way, that deb packages were created. We have to discuss also where we want to publish / release them\r\n\r\nInitial goal: Provide deb/rem packages to the end users, so `apt install caddy` is possible.\r\n\r\n```bash\r\nroot@eea4381d15b1:/# apt install caddy\r\nReading package lists... Done\r\nBuilding dependency tree       \r\nReading state information... Done\r\nE: Unable to locate package caddy\r\n\r\n```\r\n\r\ncc @caarlos0 (Creator of GoReleaser)",
    "closed_at": null,
    "comments": 4,
    "comments_url": "https://api.github.com/repos/caddyserver/caddy/issues/2931/comments",
    "created_at": "2019-12-14T11:12:46Z",
    "events_url": "https://api.github.com/repos/caddyserver/caddy/issues/2931/events",
    "html_url": "https://github.com/caddyserver/caddy/issues/2931",
    "id": 537900472,
    "labels": [],
    "labels_url": "https://api.github.com/repos/caddyserver/caddy/issues/2931/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1Mzc5MDA0NzI=",
    "number": 2931,
    "repository_url": "https://api.github.com/repos/caddyserver/caddy",
    "state": "open",
    "title": "Move CI process to GitHub Actions and add CD pipelines",
    "updated_at": "2019-12-15T16:05:22Z",
    "url": "https://api.github.com/repos/caddyserver/caddy/issues/2931",
    "user": {
      "avatar_url": "https://avatars0.githubusercontent.com/u/17984549?v=4",
      "events_url": "https://api.github.com/users/mxschmitt/events{/privacy}",
      "followers_url": "https://api.github.com/users/mxschmitt/followers",
      "following_url": "https://api.github.com/users/mxschmitt/following{/other_user}",
      "gists_url": "https://api.github.com/users/mxschmitt/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mxschmitt",
      "id": 17984549,
      "login": "mxschmitt",
      "node_id": "MDQ6VXNlcjE3OTg0NTQ5",
      "organizations_url": "https://api.github.com/users/mxschmitt/orgs",
      "received_events_url": "https://api.github.com/users/mxschmitt/received_events",
      "repos_url": "https://api.github.com/users/mxschmitt/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mxschmitt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mxschmitt/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mxschmitt"
    }
  },
  {
    "assignee": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/1128849?v=4",
      "events_url": "https://api.github.com/users/mholt/events{/privacy}",
      "followers_url": "https://api.github.com/users/mholt/followers",
      "following_url": "https://api.github.com/users/mholt/following{/other_user}",
      "gists_url": "https://api.github.com/users/mholt/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mholt",
      "id": 1128849,
      "login": "mholt",
      "node_id": "MDQ6VXNlcjExMjg4NDk=",
      "organizations_url": "https://api.github.com/users/mholt/orgs",
      "received_events_url": "https://api.github.com/users/mholt/received_events",
      "repos_url": "https://api.github.com/users/mholt/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mholt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mholt/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mholt"
    },
    "assignees": [
      {
        "avatar_url": "https://avatars2.githubusercontent.com/u/1128849?v=4",
        "events_url": "https://api.github.com/users/mholt/events{/privacy}",
        "followers_url": "https://api.github.com/users/mholt/followers",
        "following_url": "https://api.github.com/users/mholt/following{/other_user}",
        "gists_url": "https://api.github.com/users/mholt/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/mholt",
        "id": 1128849,
        "login": "mholt",
        "node_id": "MDQ6VXNlcjExMjg4NDk=",
        "organizations_url": "https://api.github.com/users/mholt/orgs",
        "received_events_url": "https://api.github.com/users/mholt/received_events",
        "repos_url": "https://api.github.com/users/mholt/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/mholt/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mholt/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/mholt"
      }
    ],
    "author_association": "NONE",
    "body": "Wondering about the expectations that plugin writers should have around testing.\r\n\r\nCurrently looking at porting a cors library to v2. It has a bunch of nice tests to validate the caddyfile parsing.\r\n\r\nI can appreciate keeping a bunch of implementation details hidden but access perhaps to this function would be a nice compromise?\r\n\r\n```\r\nfunc newTestDispenser(input string) *Dispenser {\r\n\ttokens, err := allTokens(\"Testfile\", strings.NewReader(input))\r\n\tif err != nil && err != io.EOF {\r\n\t\tlog.Fatalf(\"getting all tokens from input: %v\", err)\r\n\t}\r\n\treturn NewDispenser(tokens)\r\n}\r\n```",
    "closed_at": null,
    "comments": 1,
    "comments_url": "https://api.github.com/repos/caddyserver/caddy/issues/2930/comments",
    "created_at": "2019-12-14T01:23:54Z",
    "events_url": "https://api.github.com/repos/caddyserver/caddy/issues/2930/events",
    "html_url": "https://github.com/caddyserver/caddy/issues/2930",
    "id": 537845149,
    "labels": [
      {
        "color": "dbd523",
        "default": false,
        "description": "Specifically applies to Caddy 2",
        "id": 1436036184,
        "name": "v2",
        "node_id": "MDU6TGFiZWwxNDM2MDM2MTg0",
        "url": "https://api.github.com/repos/caddyserver/caddy/labels/v2"
      }
    ],
    "labels_url": "https://api.github.com/repos/caddyserver/caddy/issues/2930/labels{/name}",
    "locked": false,
    "milestone": {
      "closed_at": null,
      "closed_issues": 81,
      "created_at": "2017-03-07T02:57:47Z",
      "creator": {
        "avatar_url": "https://avatars2.githubusercontent.com/u/1128849?v=4",
        "events_url": "https://api.github.com/users/mholt/events{/privacy}",
        "followers_url": "https://api.github.com/users/mholt/followers",
        "following_url": "https://api.github.com/users/mholt/following{/other_user}",
        "gists_url": "https://api.github.com/users/mholt/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/mholt",
        "id": 1128849,
        "login": "mholt",
        "node_id": "MDQ6VXNlcjExMjg4NDk=",
        "organizations_url": "https://api.github.com/users/mholt/orgs",
        "received_events_url": "https://api.github.com/users/mholt/received_events",
        "repos_url": "https://api.github.com/users/mholt/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/mholt/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mholt/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/mholt"
      },
      "description": "2.0 is the next generation of Caddy, and it's AWESOME. This milestone is for things planned for version 2, but not sure at what point in the dev tree it will happen yet.",
      "due_on": null,
      "html_url": "https://github.com/caddyserver/caddy/milestone/4",
      "id": 2367944,
      "labels_url": "https://api.github.com/repos/caddyserver/caddy/milestones/4/labels",
      "node_id": "MDk6TWlsZXN0b25lMjM2Nzk0NA==",
      "number": 4,
      "open_issues": 65,
      "state": "open",
      "title": "2.0",
      "updated_at": "2020-02-29T20:23:21Z",
      "url": "https://api.github.com/repos/caddyserver/caddy/milestones/4"
    },
    "node_id": "MDU6SXNzdWU1Mzc4NDUxNDk=",
    "number": 2930,
    "repository_url": "https://api.github.com/repos/caddyserver/caddy",
    "state": "open",
    "title": "v2: Testing Parsing",
    "updated_at": "2019-12-17T23:35:14Z",
    "url": "https://api.github.com/repos/caddyserver/caddy/issues/2930",
    "user": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/99003?v=4",
      "events_url": "https://api.github.com/users/sarge/events{/privacy}",
      "followers_url": "https://api.github.com/users/sarge/followers",
      "following_url": "https://api.github.com/users/sarge/following{/other_user}",
      "gists_url": "https://api.github.com/users/sarge/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/sarge",
      "id": 99003,
      "login": "sarge",
      "node_id": "MDQ6VXNlcjk5MDAz",
      "organizations_url": "https://api.github.com/users/sarge/orgs",
      "received_events_url": "https://api.github.com/users/sarge/received_events",
      "repos_url": "https://api.github.com/users/sarge/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/sarge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sarge/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/sarge"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Could it be done by only config?\r\nAnd are there reverse_proxy response placeholders? Such as headers, status_code, body etc.",
    "closed_at": null,
    "comments": 7,
    "comments_url": "https://api.github.com/repos/caddyserver/caddy/issues/2920/comments",
    "created_at": "2019-12-09T17:57:11Z",
    "events_url": "https://api.github.com/repos/caddyserver/caddy/issues/2920/events",
    "html_url": "https://github.com/caddyserver/caddy/issues/2920",
    "id": 535090156,
    "labels": [
      {
        "color": "c7def8",
        "default": false,
        "description": null,
        "id": 204890680,
        "name": "feature request",
        "node_id": "MDU6TGFiZWwyMDQ4OTA2ODA=",
        "url": "https://api.github.com/repos/caddyserver/caddy/labels/feature%20request"
      }
    ],
    "labels_url": "https://api.github.com/repos/caddyserver/caddy/issues/2920/labels{/name}",
    "locked": false,
    "milestone": {
      "closed_at": null,
      "closed_issues": 81,
      "created_at": "2017-03-07T02:57:47Z",
      "creator": {
        "avatar_url": "https://avatars2.githubusercontent.com/u/1128849?v=4",
        "events_url": "https://api.github.com/users/mholt/events{/privacy}",
        "followers_url": "https://api.github.com/users/mholt/followers",
        "following_url": "https://api.github.com/users/mholt/following{/other_user}",
        "gists_url": "https://api.github.com/users/mholt/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/mholt",
        "id": 1128849,
        "login": "mholt",
        "node_id": "MDQ6VXNlcjExMjg4NDk=",
        "organizations_url": "https://api.github.com/users/mholt/orgs",
        "received_events_url": "https://api.github.com/users/mholt/received_events",
        "repos_url": "https://api.github.com/users/mholt/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/mholt/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mholt/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/mholt"
      },
      "description": "2.0 is the next generation of Caddy, and it's AWESOME. This milestone is for things planned for version 2, but not sure at what point in the dev tree it will happen yet.",
      "due_on": null,
      "html_url": "https://github.com/caddyserver/caddy/milestone/4",
      "id": 2367944,
      "labels_url": "https://api.github.com/repos/caddyserver/caddy/milestones/4/labels",
      "node_id": "MDk6TWlsZXN0b25lMjM2Nzk0NA==",
      "number": 4,
      "open_issues": 65,
      "state": "open",
      "title": "2.0",
      "updated_at": "2020-02-29T20:23:21Z",
      "url": "https://api.github.com/repos/caddyserver/caddy/milestones/4"
    },
    "node_id": "MDU6SXNzdWU1MzUwOTAxNTY=",
    "number": 2920,
    "repository_url": "https://api.github.com/repos/caddyserver/caddy",
    "state": "open",
    "title": "Modify status code of reverse proxy response ",
    "updated_at": "2019-12-29T19:59:20Z",
    "url": "https://api.github.com/repos/caddyserver/caddy/issues/2920",
    "user": {
      "avatar_url": "https://avatars3.githubusercontent.com/u/540298?v=4",
      "events_url": "https://api.github.com/users/hackwaly/events{/privacy}",
      "followers_url": "https://api.github.com/users/hackwaly/followers",
      "following_url": "https://api.github.com/users/hackwaly/following{/other_user}",
      "gists_url": "https://api.github.com/users/hackwaly/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/hackwaly",
      "id": 540298,
      "login": "hackwaly",
      "node_id": "MDQ6VXNlcjU0MDI5OA==",
      "organizations_url": "https://api.github.com/users/hackwaly/orgs",
      "received_events_url": "https://api.github.com/users/hackwaly/received_events",
      "repos_url": "https://api.github.com/users/hackwaly/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/hackwaly/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hackwaly/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/hackwaly"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "I've seen this in v1, but it looks that in v2, there's no log directive for Caddyfile style configuration.\r\n\r\nThis directive could be used to define a path to a logfile, output location (stderr, etc.), the specific logwriter, and some other things.",
    "closed_at": null,
    "comments": 0,
    "comments_url": "https://api.github.com/repos/caddyserver/caddy/issues/2919/comments",
    "created_at": "2019-12-07T21:42:11Z",
    "events_url": "https://api.github.com/repos/caddyserver/caddy/issues/2919/events",
    "html_url": "https://github.com/caddyserver/caddy/issues/2919",
    "id": 534456451,
    "labels": [
      {
        "color": "c7def8",
        "default": false,
        "description": null,
        "id": 204890680,
        "name": "feature request",
        "node_id": "MDU6TGFiZWwyMDQ4OTA2ODA=",
        "url": "https://api.github.com/repos/caddyserver/caddy/labels/feature%20request"
      },
      {
        "color": "dbd523",
        "default": false,
        "description": "Specifically applies to Caddy 2",
        "id": 1436036184,
        "name": "v2",
        "node_id": "MDU6TGFiZWwxNDM2MDM2MTg0",
        "url": "https://api.github.com/repos/caddyserver/caddy/labels/v2"
      }
    ],
    "labels_url": "https://api.github.com/repos/caddyserver/caddy/issues/2919/labels{/name}",
    "locked": false,
    "milestone": {
      "closed_at": null,
      "closed_issues": 81,
      "created_at": "2017-03-07T02:57:47Z",
      "creator": {
        "avatar_url": "https://avatars2.githubusercontent.com/u/1128849?v=4",
        "events_url": "https://api.github.com/users/mholt/events{/privacy}",
        "followers_url": "https://api.github.com/users/mholt/followers",
        "following_url": "https://api.github.com/users/mholt/following{/other_user}",
        "gists_url": "https://api.github.com/users/mholt/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/mholt",
        "id": 1128849,
        "login": "mholt",
        "node_id": "MDQ6VXNlcjExMjg4NDk=",
        "organizations_url": "https://api.github.com/users/mholt/orgs",
        "received_events_url": "https://api.github.com/users/mholt/received_events",
        "repos_url": "https://api.github.com/users/mholt/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/mholt/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mholt/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/mholt"
      },
      "description": "2.0 is the next generation of Caddy, and it's AWESOME. This milestone is for things planned for version 2, but not sure at what point in the dev tree it will happen yet.",
      "due_on": null,
      "html_url": "https://github.com/caddyserver/caddy/milestone/4",
      "id": 2367944,
      "labels_url": "https://api.github.com/repos/caddyserver/caddy/milestones/4/labels",
      "node_id": "MDk6TWlsZXN0b25lMjM2Nzk0NA==",
      "number": 4,
      "open_issues": 65,
      "state": "open",
      "title": "2.0",
      "updated_at": "2020-02-29T20:23:21Z",
      "url": "https://api.github.com/repos/caddyserver/caddy/milestones/4"
    },
    "node_id": "MDU6SXNzdWU1MzQ0NTY0NTE=",
    "number": 2919,
    "repository_url": "https://api.github.com/repos/caddyserver/caddy",
    "state": "open",
    "title": "v2: Caddyfile log directive",
    "updated_at": "2019-12-08T03:15:57Z",
    "url": "https://api.github.com/repos/caddyserver/caddy/issues/2919",
    "user": {
      "avatar_url": "https://avatars1.githubusercontent.com/u/15855905?v=4",
      "events_url": "https://api.github.com/users/Henrocker/events{/privacy}",
      "followers_url": "https://api.github.com/users/Henrocker/followers",
      "following_url": "https://api.github.com/users/Henrocker/following{/other_user}",
      "gists_url": "https://api.github.com/users/Henrocker/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/Henrocker",
      "id": 15855905,
      "login": "Henrocker",
      "node_id": "MDQ6VXNlcjE1ODU1OTA1",
      "organizations_url": "https://api.github.com/users/Henrocker/orgs",
      "received_events_url": "https://api.github.com/users/Henrocker/received_events",
      "repos_url": "https://api.github.com/users/Henrocker/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/Henrocker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Henrocker/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/Henrocker"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "---\r\nname: Pull request\r\nabout: Propose changes to the code\r\ntitle: ''\r\nlabels: ''\r\nassignees: ''\r\n---\r\n\r\n<!--\r\nThank you for contributing to Caddy! Please fill this out to help us make the most of your pull request.\r\n\r\nWas this change discussed in an issue first? That can help save time in case the change is not a good fit for the project. Not all pull requests get merged.\r\n\r\nIt is not uncommon for pull requests to go through several, iterative reviews. Please be patient with us! Every reviewer is a volunteer, and each has their own style.\r\n-->\r\n\r\n## 1. What does this change do, exactly?\r\nAbility to specify in tls connection policy that a client SSL cert be present.\r\n\r\n## 2. Please link to the relevant issues.\r\nhttps://caddy.community/t/v2-client-auth/6581/2\r\n\r\n\r\n\r\n## 3. Which documentation changes (if any) need to be made because of this PR?\r\nhttps://github.com/caddyserver/caddy/wiki/v2:-Documentation#httpserverstls_connection_policies need to be updated to include\r\n\"require\" boolean \"requires a client certificate, but will not verify it\"\r\n\r\n\r\n\r\n## 4. Checklist\r\n\r\n- [x ] I have written tests and verified that they fail without my change\r\n- [ x] I have squashed any insignificant commits\r\n- [ x] This change has comments explaining package types, values, functions, and non-obvious lines of code\r\n- [ x] I am willing to help maintain this change if there are issues with it later\r\n",
    "closed_at": null,
    "comments": 6,
    "comments_url": "https://api.github.com/repos/caddyserver/caddy/issues/2913/comments",
    "created_at": "2019-12-02T22:28:26Z",
    "events_url": "https://api.github.com/repos/caddyserver/caddy/issues/2913/events",
    "html_url": "https://github.com/caddyserver/caddy/pull/2913",
    "id": 531580256,
    "labels": [
      {
        "color": "dbd523",
        "default": false,
        "description": "Specifically applies to Caddy 2",
        "id": 1436036184,
        "name": "v2",
        "node_id": "MDU6TGFiZWwxNDM2MDM2MTg0",
        "url": "https://api.github.com/repos/caddyserver/caddy/labels/v2"
      }
    ],
    "labels_url": "https://api.github.com/repos/caddyserver/caddy/issues/2913/labels{/name}",
    "locked": false,
    "milestone": {
      "closed_at": null,
      "closed_issues": 81,
      "created_at": "2017-03-07T02:57:47Z",
      "creator": {
        "avatar_url": "https://avatars2.githubusercontent.com/u/1128849?v=4",
        "events_url": "https://api.github.com/users/mholt/events{/privacy}",
        "followers_url": "https://api.github.com/users/mholt/followers",
        "following_url": "https://api.github.com/users/mholt/following{/other_user}",
        "gists_url": "https://api.github.com/users/mholt/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/mholt",
        "id": 1128849,
        "login": "mholt",
        "node_id": "MDQ6VXNlcjExMjg4NDk=",
        "organizations_url": "https://api.github.com/users/mholt/orgs",
        "received_events_url": "https://api.github.com/users/mholt/received_events",
        "repos_url": "https://api.github.com/users/mholt/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/mholt/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mholt/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/mholt"
      },
      "description": "2.0 is the next generation of Caddy, and it's AWESOME. This milestone is for things planned for version 2, but not sure at what point in the dev tree it will happen yet.",
      "due_on": null,
      "html_url": "https://github.com/caddyserver/caddy/milestone/4",
      "id": 2367944,
      "labels_url": "https://api.github.com/repos/caddyserver/caddy/milestones/4/labels",
      "node_id": "MDk6TWlsZXN0b25lMjM2Nzk0NA==",
      "number": 4,
      "open_issues": 65,
      "state": "open",
      "title": "2.0",
      "updated_at": "2020-02-29T20:23:21Z",
      "url": "https://api.github.com/repos/caddyserver/caddy/milestones/4"
    },
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzQ4MDExMDA1",
    "number": 2913,
    "pull_request": {
      "diff_url": "https://github.com/caddyserver/caddy/pull/2913.diff",
      "html_url": "https://github.com/caddyserver/caddy/pull/2913",
      "patch_url": "https://github.com/caddyserver/caddy/pull/2913.patch",
      "url": "https://api.github.com/repos/caddyserver/caddy/pulls/2913"
    },
    "repository_url": "https://api.github.com/repos/caddyserver/caddy",
    "state": "open",
    "title": "ability to specify that client cert must be present in SSL",
    "updated_at": "2020-02-28T19:59:58Z",
    "url": "https://api.github.com/repos/caddyserver/caddy/issues/2913",
    "user": {
      "avatar_url": "https://avatars3.githubusercontent.com/u/7136243?v=4",
      "events_url": "https://api.github.com/users/evtr/events{/privacy}",
      "followers_url": "https://api.github.com/users/evtr/followers",
      "following_url": "https://api.github.com/users/evtr/following{/other_user}",
      "gists_url": "https://api.github.com/users/evtr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/evtr",
      "id": 7136243,
      "login": "evtr",
      "node_id": "MDQ6VXNlcjcxMzYyNDM=",
      "organizations_url": "https://api.github.com/users/evtr/orgs",
      "received_events_url": "https://api.github.com/users/evtr/received_events",
      "repos_url": "https://api.github.com/users/evtr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/evtr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/evtr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/evtr"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "## 1. What would you like to have changed?\r\n<!-- Fully describe the feature or enhancement you are requesting; examples can be helpful too -->\r\nCurrently, it's possible to overwrite [`appVersion`](https://github.com/caddyserver/caddy/blob/c0190a3460f7188db6ed2dc580fdf524b99261d0/caddy/caddymain/run.go#L588) using `-ldflags` but since [appName](https://github.com/caddyserver/caddy/blob/c0190a3460f7188db6ed2dc580fdf524b99261d0/caddy/caddymain/run.go#L567) is a const, it's not possible to overwrite it.\r\n\r\n\r\n\r\n## 2. Why is this feature a useful, necessary, and/or important addition to this project?\r\n<!-- Please justify why this change adds value to the project, considering the added maintenance burden and complexity the change introduces -->\r\nLetting the modules to have their own name and version instead of inheriting them from Caddy.\r\n\r\n\r\n\r\n## 3. What alternatives are there, or what are you doing in the meantime to work around the lack of this feature?\r\n<!-- We want to get an idea of what is being done in practice, or how other projects support your feature -->\r\nNo alternatives\r\n\r\n\r\n\r\n## 4. Please link to any relevant issues, pull requests, or other discussions.\r\n<!-- This adds crucial context to your feature request and can speed things up -->\r\nNone",
    "closed_at": null,
    "comments": 0,
    "comments_url": "https://api.github.com/repos/caddyserver/caddy/issues/2910/comments",
    "created_at": "2019-12-02T17:04:55Z",
    "events_url": "https://api.github.com/repos/caddyserver/caddy/issues/2910/events",
    "html_url": "https://github.com/caddyserver/caddy/issues/2910",
    "id": 531303322,
    "labels": [
      {
        "color": "c7def8",
        "default": false,
        "description": null,
        "id": 204890680,
        "name": "feature request",
        "node_id": "MDU6TGFiZWwyMDQ4OTA2ODA=",
        "url": "https://api.github.com/repos/caddyserver/caddy/labels/feature%20request"
      }
    ],
    "labels_url": "https://api.github.com/repos/caddyserver/caddy/issues/2910/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1MzEzMDMzMjI=",
    "number": 2910,
    "repository_url": "https://api.github.com/repos/caddyserver/caddy",
    "state": "open",
    "title": "Add ability to overwrite Caddy's name and version in modules",
    "updated_at": "2019-12-02T17:04:55Z",
    "url": "https://api.github.com/repos/caddyserver/caddy/issues/2910",
    "user": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/7544732?v=4",
      "events_url": "https://api.github.com/users/erbesharat/events{/privacy}",
      "followers_url": "https://api.github.com/users/erbesharat/followers",
      "following_url": "https://api.github.com/users/erbesharat/following{/other_user}",
      "gists_url": "https://api.github.com/users/erbesharat/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/erbesharat",
      "id": 7544732,
      "login": "erbesharat",
      "node_id": "MDQ6VXNlcjc1NDQ3MzI=",
      "organizations_url": "https://api.github.com/users/erbesharat/orgs",
      "received_events_url": "https://api.github.com/users/erbesharat/received_events",
      "repos_url": "https://api.github.com/users/erbesharat/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/erbesharat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/erbesharat/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/erbesharat"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "## 1. What would you like to have changed?\r\n<!-- Fully describe the feature or enhancement you are requesting; examples can be helpful too -->\r\n\r\nRight now caddy2 has two config adapters: Caddyfile and JSON.\r\nI have to admit, that I am not a big fan of json, because it's not possible to insert comments and it's difficult to write manual.\r\n\r\nJSON is a format that should be used only from one computer to another.\r\n\r\nI know that there is caddyfile config support, but the documentation says that the caddyfile support is not complete (there are certain options that will be only configurable via JSON).\r\n\r\nSo how to resolve this problem?\r\n\r\nThe answer for this could be the CUE language. CUE is a superset of JSON, can be transformed into JSON, and brings certain other benefits like validation with schemes (could be very useful for config files).\r\n\r\n## 2. Why is this feature a useful, necessary, and/or important addition to this project?\r\n<!-- Please justify why this change adds value to the project, considering the added maintenance burden and complexity the change introduces -->\r\n\r\nCUE would make the configuration a lot easier. People would be able to use all features in the json config adapter and the config file would still be readable + it would be possible to insert comments.\r\n\r\nThe project would benefit of CUE in other parts as well (validation with schemes and fixed datatypes could be a lot more easier with CUE).\r\n\r\nI really recommend this short CUE tutorial:\r\n\r\nhttps://cuelang.org/docs/tutorials/tour/\r\n\r\nI can imagine this as third-party config adapter package. CUE is a superset of json, therefore somebody could just parse CUE and pipe all the output into the caddy2 JSON config adapter and this should be fine. (Although the best part is the validation via schemes in CUE etc).\r\n\r\nHere is a short example from YAML to CUE with a kubernetes deployment file:\r\n\r\n```yaml\r\napiVersion: apps/v1\r\nkind: Deployment\r\nmetadata:\r\n  name: hello-kubernetes\r\nspec:\r\n  replicas: 3\r\n  selector:\r\n    matchLabels:\r\n      app: hello-kubernetes\r\n  template:\r\n    metadata:\r\n      labels:\r\n        app: hello-kubernetes\r\n    spec:\r\n      containers:\r\n      - name: hello-kubernetes\r\n        image: paulbouwer/hello-kubernetes:1.5\r\n        ports:\r\n        - containerPort: 8080\r\n```\r\nSame in JSON:\r\n```json\r\n{\r\n  \"apiVersion\": \"apps/v1\",\r\n  \"kind\": \"Deployment\",\r\n  \"metadata\": {\r\n    \"name\": \"hello-kubernetes\"\r\n  },\r\n  \"spec\": {\r\n    \"replicas\": 3,\r\n    \"selector\": {\r\n      \"matchLabels\": {\r\n        \"app\": \"hello-kubernetes\"\r\n      }\r\n    },\r\n    \"template\": {\r\n      \"metadata\": {\r\n        \"labels\": {\r\n          \"app\": \"hello-kubernetes\"\r\n        }\r\n      },\r\n      \"spec\": {\r\n        \"containers\": [\r\n          {\r\n            \"name\": \"hello-kubernetes\",\r\n            \"image\": \"paulbouwer/hello-kubernetes:1.5\",\r\n            \"ports\": [\r\n              {\r\n                \"containerPort\": 8080\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n\r\nHere is the equivalent in CUE:\r\n```cue\r\n// This is a comment\r\napiVersion: \"apps/v1\"\r\nkind:       \"Deployment\"\r\nmetadata name: \"hello-kubernetes\"\r\nspec: {\r\n  replicas: 3\r\n  selector matchLabels app: \"hello-kubernetes\"\r\n  template: {\r\n    metadata labels app: \"hello-kubernetes\"\r\n    spec containers: [{\r\n      name:  \"hello-kubernetes\"\r\n      image: \"paulbouwer/hello-kubernetes:1.5\"\r\n      ports: [{\r\n        containerPort: 8080\r\n      }]\r\n    }]\r\n  }\r\n}\r\n```\r\n\r\n",
    "closed_at": null,
    "comments": 2,
    "comments_url": "https://api.github.com/repos/caddyserver/caddy/issues/2907/comments",
    "created_at": "2019-11-30T13:13:45Z",
    "events_url": "https://api.github.com/repos/caddyserver/caddy/issues/2907/events",
    "html_url": "https://github.com/caddyserver/caddy/issues/2907",
    "id": 530577468,
    "labels": [
      {
        "color": "c7def8",
        "default": false,
        "description": null,
        "id": 204890680,
        "name": "feature request",
        "node_id": "MDU6TGFiZWwyMDQ4OTA2ODA=",
        "url": "https://api.github.com/repos/caddyserver/caddy/labels/feature%20request"
      },
      {
        "color": "651f9e",
        "default": true,
        "description": null,
        "id": 297256336,
        "name": "good first issue",
        "node_id": "MDU6TGFiZWwyOTcyNTYzMzY=",
        "url": "https://api.github.com/repos/caddyserver/caddy/labels/good%20first%20issue"
      },
      {
        "color": "dbd523",
        "default": false,
        "description": "Specifically applies to Caddy 2",
        "id": 1436036184,
        "name": "v2",
        "node_id": "MDU6TGFiZWwxNDM2MDM2MTg0",
        "url": "https://api.github.com/repos/caddyserver/caddy/labels/v2"
      }
    ],
    "labels_url": "https://api.github.com/repos/caddyserver/caddy/issues/2907/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1MzA1Nzc0Njg=",
    "number": 2907,
    "repository_url": "https://api.github.com/repos/caddyserver/caddy",
    "state": "open",
    "title": "v2: Support CUE language as config file format",
    "updated_at": "2019-12-01T00:16:48Z",
    "url": "https://api.github.com/repos/caddyserver/caddy/issues/2907",
    "user": {
      "avatar_url": "https://avatars3.githubusercontent.com/u/3833685?v=4",
      "events_url": "https://api.github.com/users/shibumi/events{/privacy}",
      "followers_url": "https://api.github.com/users/shibumi/followers",
      "following_url": "https://api.github.com/users/shibumi/following{/other_user}",
      "gists_url": "https://api.github.com/users/shibumi/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/shibumi",
      "id": 3833685,
      "login": "shibumi",
      "node_id": "MDQ6VXNlcjM4MzM2ODU=",
      "organizations_url": "https://api.github.com/users/shibumi/orgs",
      "received_events_url": "https://api.github.com/users/shibumi/received_events",
      "repos_url": "https://api.github.com/users/shibumi/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/shibumi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shibumi/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/shibumi"
    }
  }
]