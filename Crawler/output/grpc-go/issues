[
  {
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Hullo! I'm working with a system that talks to some things via grpc and some things not via grpc. (actually, talking over a UNIX domain socket via grpc :grimacing:).\r\n\r\nThe non-grpc things are mostly HTTP requests that we do need to proxy. The grpc things, as noted, as via local sockets, which _can't_ and shouldn't be proxied.\r\n\r\nProviding our own dialer is an option, but this seems a little cleaner and like other folks might also find it useful.",
    "closed_at": null,
    "comments": 1,
    "comments_url": "https://api.github.com/repos/grpc/grpc-go/issues/3411/comments",
    "created_at": "2020-02-28T23:52:49Z",
    "events_url": "https://api.github.com/repos/grpc/grpc-go/issues/3411/events",
    "html_url": "https://github.com/grpc/grpc-go/pull/3411",
    "id": 573070168,
    "labels": [],
    "labels_url": "https://api.github.com/repos/grpc/grpc-go/issues/3411/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzgxNjUwODE2",
    "number": 3411,
    "pull_request": {
      "diff_url": "https://github.com/grpc/grpc-go/pull/3411.diff",
      "html_url": "https://github.com/grpc/grpc-go/pull/3411",
      "patch_url": "https://github.com/grpc/grpc-go/pull/3411.patch",
      "url": "https://api.github.com/repos/grpc/grpc-go/pulls/3411"
    },
    "repository_url": "https://api.github.com/repos/grpc/grpc-go",
    "state": "open",
    "title": "add a WithoutProxy dialoption",
    "updated_at": "2020-02-28T23:55:35Z",
    "url": "https://api.github.com/repos/grpc/grpc-go/issues/3411",
    "user": {
      "avatar_url": "https://avatars3.githubusercontent.com/u/321591?v=4",
      "events_url": "https://api.github.com/users/pdbogen/events{/privacy}",
      "followers_url": "https://api.github.com/users/pdbogen/followers",
      "following_url": "https://api.github.com/users/pdbogen/following{/other_user}",
      "gists_url": "https://api.github.com/users/pdbogen/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/pdbogen",
      "id": 321591,
      "login": "pdbogen",
      "node_id": "MDQ6VXNlcjMyMTU5MQ==",
      "organizations_url": "https://api.github.com/users/pdbogen/orgs",
      "received_events_url": "https://api.github.com/users/pdbogen/received_events",
      "repos_url": "https://api.github.com/users/pdbogen/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/pdbogen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pdbogen/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/pdbogen"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "This commit allows blocking clients to receive a more informative error\r\nmessage than \"context deadline exceeded\", which is especially helpful in\r\ntracking down persistent client misconfiguration (such as an invalid TLS\r\ncertificate, an invalid server that's refusing connections, etc.)\r\n\r\nSee: https://github.com/grpc/grpc-go/issues/3406",
    "closed_at": null,
    "comments": 1,
    "comments_url": "https://api.github.com/repos/grpc/grpc-go/issues/3410/comments",
    "created_at": "2020-02-28T21:48:43Z",
    "events_url": "https://api.github.com/repos/grpc/grpc-go/issues/3410/events",
    "html_url": "https://github.com/grpc/grpc-go/pull/3410",
    "id": 573023311,
    "labels": [],
    "labels_url": "https://api.github.com/repos/grpc/grpc-go/issues/3410/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzgxNjEwODA5",
    "number": 3410,
    "pull_request": {
      "diff_url": "https://github.com/grpc/grpc-go/pull/3410.diff",
      "html_url": "https://github.com/grpc/grpc-go/pull/3410",
      "patch_url": "https://github.com/grpc/grpc-go/pull/3410.patch",
      "url": "https://api.github.com/repos/grpc/grpc-go/pulls/3410"
    },
    "repository_url": "https://api.github.com/repos/grpc/grpc-go",
    "state": "open",
    "title": "client: surface connection errors to callers",
    "updated_at": "2020-02-28T21:49:21Z",
    "url": "https://api.github.com/repos/grpc/grpc-go/issues/3410",
    "user": {
      "avatar_url": "https://avatars0.githubusercontent.com/u/30441101?v=4",
      "events_url": "https://api.github.com/users/sethp-nr/events{/privacy}",
      "followers_url": "https://api.github.com/users/sethp-nr/followers",
      "following_url": "https://api.github.com/users/sethp-nr/following{/other_user}",
      "gists_url": "https://api.github.com/users/sethp-nr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/sethp-nr",
      "id": 30441101,
      "login": "sethp-nr",
      "node_id": "MDQ6VXNlcjMwNDQxMTAx",
      "organizations_url": "https://api.github.com/users/sethp-nr/orgs",
      "received_events_url": "https://api.github.com/users/sethp-nr/received_events",
      "repos_url": "https://api.github.com/users/sethp-nr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/sethp-nr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sethp-nr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/sethp-nr"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "I was trying to debug why the `OutTrailer.WireLength` field was always zero and I discovered that it was never set. This is because Header and Trailer WireLengths are difficult to calculate. They are compressed with hpack after the stats handler is called.\r\n\r\nI looked into attaching them but couldn't find a good way to defer these calls until after the headers are encoded and the lengths are known so instead, I opted for comments and deprecation.\r\n\r\nThis pr should make it easier for the next reader to understand what's going on.\r\n\r\n- I added comments to the struct initializations to make it more clear to the next reader wire we don't have WireLength fields.\r\n- I marked the `OutTrailer.WireLength` field as deprecated because it is never set. Happy to remove the field if that's preferred. Wanted to err on the side of not making a breaking change but given that the field is never set, it might be nicer to just remove it. The header one was just removed with no deprecation warning: https://github.com/grpc/grpc-go/pull/1536/files#diff-6aa7b5bbbe0875c6ad9d048ced4e456fL138-L139",
    "closed_at": null,
    "comments": 0,
    "comments_url": "https://api.github.com/repos/grpc/grpc-go/issues/3408/comments",
    "created_at": "2020-02-28T17:19:23Z",
    "events_url": "https://api.github.com/repos/grpc/grpc-go/issues/3408/events",
    "html_url": "https://github.com/grpc/grpc-go/pull/3408",
    "id": 572891951,
    "labels": [],
    "labels_url": "https://api.github.com/repos/grpc/grpc-go/issues/3408/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzgxNTAwODEz",
    "number": 3408,
    "pull_request": {
      "diff_url": "https://github.com/grpc/grpc-go/pull/3408.diff",
      "html_url": "https://github.com/grpc/grpc-go/pull/3408",
      "patch_url": "https://github.com/grpc/grpc-go/pull/3408.patch",
      "url": "https://api.github.com/repos/grpc/grpc-go/pulls/3408"
    },
    "repository_url": "https://api.github.com/repos/grpc/grpc-go",
    "state": "open",
    "title": "stats: add comments about why out headers and out trailers have no wire length",
    "updated_at": "2020-02-28T17:37:23Z",
    "url": "https://api.github.com/repos/grpc/grpc-go/issues/3408",
    "user": {
      "avatar_url": "https://avatars1.githubusercontent.com/u/1056326?v=4",
      "events_url": "https://api.github.com/users/MatthewDolan/events{/privacy}",
      "followers_url": "https://api.github.com/users/MatthewDolan/followers",
      "following_url": "https://api.github.com/users/MatthewDolan/following{/other_user}",
      "gists_url": "https://api.github.com/users/MatthewDolan/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/MatthewDolan",
      "id": 1056326,
      "login": "MatthewDolan",
      "node_id": "MDQ6VXNlcjEwNTYzMjY=",
      "organizations_url": "https://api.github.com/users/MatthewDolan/orgs",
      "received_events_url": "https://api.github.com/users/MatthewDolan/received_events",
      "repos_url": "https://api.github.com/users/MatthewDolan/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/MatthewDolan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MatthewDolan/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/MatthewDolan"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### What version of gRPC are you using?\r\n\r\nv1.23.1, but am open to other versions\r\n\r\n### What version of Go are you using (`go version`)?\r\n\r\n```\r\ngo version go1.13.5 darwin/amd64\r\n```\r\n\r\n### What operating system (Linux, Windows, \u2026) and version?\r\n\r\nMacOS and Linux\r\n\r\n### What did you do?\r\n\r\nI misconfigured my client to expect a certificate that matched in content but not in key with the CA that signed my server's certificate. The error I got back from grpc-go was:\r\n\r\n> context deadline exceeded\r\n\r\n### What did you expect to see?\r\n\r\nWhen I modified the very end of DialContext to return any connection errors that occurred:\r\n\r\n```\r\n// A blocking dial blocks until the clientConn is ready.\r\nif cc.dopts.block {\r\n\tfor {\r\n\t\ts := cc.GetState()\r\n\t\tif s == connectivity.Ready {\r\n\t\t\tbreak\r\n\t\t} else if cc.dopts.copts.FailOnNonTempDialError && s == connectivity.TransientFailure {\r\n\t\t\tif err = cc.blockingpicker.connectionError(); err != nil {\r\n\t\t\t\tterr, ok := err.(interface {\r\n\t\t\t\t\tTemporary() bool\r\n\t\t\t\t})\r\n\t\t\t\tif ok && !terr.Temporary() {\r\n\t\t\t\t\treturn nil, err\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif err = cc.blockingpicker.connectionError(); err != nil {\r\n\t\t\treturn nil, err\r\n\t\t}\r\n\r\n\t\tif !cc.WaitForStateChange(ctx, s) {\r\n\t\t\t// ctx got timeout or canceled.\r\n\t\t\tif err = cc.blockingpicker.connectionError(); err != nil {\r\n\t\t\t\treturn nil, err\r\n\t\t\t}\r\n\t\t\treturn nil, ctx.Err()\r\n\t\t}\r\n\t}\r\n}\r\n```\r\n\r\nI got the much more helpful error message:\r\n\r\n> connection error: desc = \"transport: authentication handshake failed: x509: certificate signed by unknown authority (possibly because of \\\"crypto/rsa: verification error\\\" while trying to verify candidate authority certificate \\\"kubernetes\\\")\"\r\n\r\nBut, that breaks retries. Is there some other way that I could be retrieving the underlying connection error after my timeout occurs?",
    "closed_at": null,
    "comments": 1,
    "comments_url": "https://api.github.com/repos/grpc/grpc-go/issues/3406/comments",
    "created_at": "2020-02-28T00:29:04Z",
    "events_url": "https://api.github.com/repos/grpc/grpc-go/issues/3406/events",
    "html_url": "https://github.com/grpc/grpc-go/issues/3406",
    "id": 572444433,
    "labels": [
      {
        "color": "bfdadc",
        "default": false,
        "description": null,
        "id": 586671344,
        "name": "Type: Bug",
        "node_id": "MDU6TGFiZWw1ODY2NzEzNDQ=",
        "url": "https://api.github.com/repos/grpc/grpc-go/labels/Type:%20Bug"
      }
    ],
    "labels_url": "https://api.github.com/repos/grpc/grpc-go/issues/3406/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1NzI0NDQ0MzM=",
    "number": 3406,
    "repository_url": "https://api.github.com/repos/grpc/grpc-go",
    "state": "open",
    "title": "grpc provides uninformative error messages, even when set to \"block\"",
    "updated_at": "2020-02-28T00:29:41Z",
    "url": "https://api.github.com/repos/grpc/grpc-go/issues/3406",
    "user": {
      "avatar_url": "https://avatars0.githubusercontent.com/u/30441101?v=4",
      "events_url": "https://api.github.com/users/sethp-nr/events{/privacy}",
      "followers_url": "https://api.github.com/users/sethp-nr/followers",
      "following_url": "https://api.github.com/users/sethp-nr/following{/other_user}",
      "gists_url": "https://api.github.com/users/sethp-nr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/sethp-nr",
      "id": 30441101,
      "login": "sethp-nr",
      "node_id": "MDQ6VXNlcjMwNDQxMTAx",
      "organizations_url": "https://api.github.com/users/sethp-nr/orgs",
      "received_events_url": "https://api.github.com/users/sethp-nr/received_events",
      "repos_url": "https://api.github.com/users/sethp-nr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/sethp-nr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sethp-nr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/sethp-nr"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### What version of gRPC are you using?\r\nv1.23.0\r\n\r\n### What version of Go are you using (`go version`)?\r\ngo version go1.13.6 linux/amd64\r\n\r\n### What operating system (Linux, Windows, \u2026) and version?\r\nPRETTY_NAME=\"Debian GNU/Linux 10 (buster)\", actuall it is the docker image `golang:1.13.6-buster`.\r\n\r\n### What did you do?\r\nIn my Kubernetes cluster, I set the env `HTTP_PROXY` to an HTTP proxy (a [tinyproxy](http://tinyproxy.github.io) pod) and set `NO_PROXY` with the domain name in Kubernetes to bypass these traffics on gRPC clients.\r\n\r\nFor example, I set up a service `not-proxied` in the `default` namespace, and if I set `NO_PROXY` to `.default.svc.local.cluster` or `not-proxied.default.svc.local.cluster`, the dial address in client is `not-proxied.default.svc.local.cluster`, the gRPC call to these services still uses the HTTP proxy. Only If I set the `NO_PROXY` to the cluster IP of that service, these gRPC traffics will not use the HTTP proxy.\r\n\r\n### What did you expect to see?\r\nThe gRPC call to those services in `NO_PROXY` should not use the HTTP proxy.\r\n\r\n### What did you see instead?\r\nThe gRPC call to those services in `NO_PROXY` still uses HTTP proxy for I can get proxied logs from my HTTP proxy.\r\n",
    "closed_at": null,
    "comments": 1,
    "comments_url": "https://api.github.com/repos/grpc/grpc-go/issues/3401/comments",
    "created_at": "2020-02-26T09:50:11Z",
    "events_url": "https://api.github.com/repos/grpc/grpc-go/issues/3401/events",
    "html_url": "https://github.com/grpc/grpc-go/issues/3401",
    "id": 571203075,
    "labels": [
      {
        "color": "610B0B",
        "default": false,
        "description": null,
        "id": 528927681,
        "name": "P2",
        "node_id": "MDU6TGFiZWw1Mjg5Mjc2ODE=",
        "url": "https://api.github.com/repos/grpc/grpc-go/labels/P2"
      },
      {
        "color": "bfdadc",
        "default": false,
        "description": null,
        "id": 586671344,
        "name": "Type: Bug",
        "node_id": "MDU6TGFiZWw1ODY2NzEzNDQ=",
        "url": "https://api.github.com/repos/grpc/grpc-go/labels/Type:%20Bug"
      }
    ],
    "labels_url": "https://api.github.com/repos/grpc/grpc-go/issues/3401/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1NzEyMDMwNzU=",
    "number": 3401,
    "repository_url": "https://api.github.com/repos/grpc/grpc-go",
    "state": "open",
    "title": "NO_PROXY does not work with DNS name but with IP",
    "updated_at": "2020-02-27T21:43:47Z",
    "url": "https://api.github.com/repos/grpc/grpc-go/issues/3401",
    "user": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/15179503?v=4",
      "events_url": "https://api.github.com/users/LSChyi/events{/privacy}",
      "followers_url": "https://api.github.com/users/LSChyi/followers",
      "following_url": "https://api.github.com/users/LSChyi/following{/other_user}",
      "gists_url": "https://api.github.com/users/LSChyi/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/LSChyi",
      "id": 15179503,
      "login": "LSChyi",
      "node_id": "MDQ6VXNlcjE1MTc5NTAz",
      "organizations_url": "https://api.github.com/users/LSChyi/orgs",
      "received_events_url": "https://api.github.com/users/LSChyi/received_events",
      "repos_url": "https://api.github.com/users/LSChyi/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/LSChyi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LSChyi/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/LSChyi"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "I happened to be looking at how gRPC interacts with the protobuf implementation, and noticed that the encoding/proto package is significantly more complicated than it needs to be in ways that probably have a small performance impact.\r\n\r\n* This package uses the `proto.Buffer` type. To avoid allocations, it keeps a pool of buffers.\r\n   * For unmarshal, there's never any reason to use a `proto.Buffer` instead of `proto.Unmarshal`.\r\n   * For marshal, you might want to use a `proto.Buffer` if you're keeping a pool of `[]byte`s around to marshal into. However, this package doesn't do that (it pools the `Buffer` struct, but not the `[]byte`), so there's again no reason not to just use `proto.Marshal`.\r\n* This package does a type assertion to see if the type being (un)marshaled has a `Marshal`/`Unmarshal` method. If it does, it calls it directly. However, `proto.Marshal` and `proto.Unmarshal` will do this for you. For types which don't have this method, you're incurring the cost of an extra interface->interface type assertion for no benefit.\r\n* This package preallocates an output `[]byte` to marshal into, using the size of the last message encoded with the caches `proto.Buffer`. However, the `Marshal` call will start out by computing the size of the message and allocating enough space for it. In the case where the last message happened to be smaller than the current one, this means throwing away the unused `[]byte` and allocating a new one. In the case where the preallocated `[]byte` can be used, there's still no benefit to preallocating it rather than allowing `Marshal` to do it for you.\r\n\r\nTo summarize, I think you can replace all the logic in `encoding/proto` with calls to `proto.Marshal` and `proto.Unmarshal`.\r\n\r\nTo test this hypothesis, I ran the benchmark in that directory with exactly that change.\r\n\r\n```\r\nname                                                     old time/op    new time/op    delta\r\nProtoCodec/MinPayloadSize:1/SetParallelism(1)-12           79.9ns \u00b1 5%    58.5ns \u00b1 5%  -26.80%  (p=0.000 n=8+8)\r\nProtoCodec/MinPayloadSize:1/SetParallelism(16)-12          80.5ns \u00b1 3%    63.8ns \u00b1 3%  -20.65%  (p=0.000 n=8+8)\r\nProtoCodec/MinPayloadSize:1/SetParallelism(256)-12          127ns \u00b115%     116ns \u00b114%   -9.06%  (p=0.041 n=8+8)\r\nProtoCodec/MinPayloadSize:1/SetParallelism(4096)-12         127ns \u00b115%     121ns \u00b133%     ~     (p=0.398 n=8+8)\r\nProtoCodec/MinPayloadSize:1/SetParallelism(65536)-12        361ms \u00b1 5%     347ms \u00b1 2%   -3.74%  (p=0.004 n=8+7)\r\nProtoCodec/MinPayloadSize:16/SetParallelism(1)-12          98.5ns \u00b1 9%    76.5ns \u00b1 6%  -22.38%  (p=0.000 n=8+8)\r\nProtoCodec/MinPayloadSize:16/SetParallelism(16)-12         97.7ns \u00b1 3%    76.8ns \u00b1 3%  -21.42%  (p=0.000 n=8+8)\r\nProtoCodec/MinPayloadSize:16/SetParallelism(256)-12         114ns \u00b110%     103ns \u00b116%  -10.07%  (p=0.029 n=8+8)\r\nProtoCodec/MinPayloadSize:16/SetParallelism(4096)-12        156ns \u00b115%     148ns \u00b114%     ~     (p=0.313 n=8+8)\r\nProtoCodec/MinPayloadSize:16/SetParallelism(65536)-12       358ms \u00b1 6%     349ms \u00b1 1%   -2.46%  (p=0.021 n=8+7)\r\nProtoCodec/MinPayloadSize:256/SetParallelism(1)-12          190ns \u00b1 7%     163ns \u00b1 3%  -13.96%  (p=0.000 n=8+8)\r\nProtoCodec/MinPayloadSize:256/SetParallelism(16)-12         189ns \u00b1 2%     175ns \u00b1 2%   -7.58%  (p=0.000 n=8+7)\r\nProtoCodec/MinPayloadSize:256/SetParallelism(256)-12        264ns \u00b1 4%     279ns \u00b110%     ~     (p=0.123 n=8+8)\r\nProtoCodec/MinPayloadSize:256/SetParallelism(4096)-12       566ns \u00b119%     490ns \u00b110%  -13.30%  (p=0.019 n=8+8)\r\nProtoCodec/MinPayloadSize:256/SetParallelism(65536)-12      356ms \u00b1 3%     349ms \u00b1 2%   -1.87%  (p=0.050 n=8+8)\r\nProtoCodec/MinPayloadSize:4096/SetParallelism(1)-12        1.64\u00b5s \u00b1 2%    1.52\u00b5s \u00b1 1%   -7.36%  (p=0.000 n=8+8)\r\nProtoCodec/MinPayloadSize:4096/SetParallelism(16)-12       1.89\u00b5s \u00b1 1%    1.71\u00b5s \u00b1 2%   -9.30%  (p=0.000 n=8+8)\r\nProtoCodec/MinPayloadSize:4096/SetParallelism(256)-12      3.14\u00b5s \u00b1 7%    3.07\u00b5s \u00b1 3%     ~     (p=0.161 n=8+8)\r\nProtoCodec/MinPayloadSize:4096/SetParallelism(4096)-12     4.23\u00b5s \u00b110%    3.68\u00b5s \u00b1 6%  -13.11%  (p=0.001 n=8+7)\r\nProtoCodec/MinPayloadSize:4096/SetParallelism(65536)-12     351ms \u00b1 9%     350ms \u00b1 2%     ~     (p=0.165 n=7+7)\r\n\r\nname                                                     old alloc/op   new alloc/op   delta\r\nProtoCodec/MinPayloadSize:1/SetParallelism(1)-12            81.0B \u00b1 0%     80.0B \u00b1 0%   -1.23%  (p=0.000 n=8+8)\r\nProtoCodec/MinPayloadSize:1/SetParallelism(16)-12           81.0B \u00b1 0%     80.0B \u00b1 0%   -1.23%  (p=0.000 n=8+8)\r\nProtoCodec/MinPayloadSize:1/SetParallelism(256)-12          81.0B \u00b1 0%     80.0B \u00b1 0%   -1.23%  (p=0.000 n=8+8)\r\nProtoCodec/MinPayloadSize:1/SetParallelism(4096)-12         82.4B \u00b1 1%     80.6B \u00b1 1%   -2.19%  (p=0.000 n=8+7)\r\nProtoCodec/MinPayloadSize:1/SetParallelism(65536)-12       25.2MB \u00b1 0%    25.2MB \u00b1 0%   -0.01%  (p=0.004 n=7+7)\r\nProtoCodec/MinPayloadSize:16/SetParallelism(1)-12            134B \u00b1 0%      128B \u00b1 0%   -4.48%  (p=0.000 n=8+8)\r\nProtoCodec/MinPayloadSize:16/SetParallelism(16)-12           134B \u00b1 0%      128B \u00b1 0%   -4.48%  (p=0.000 n=8+8)\r\nProtoCodec/MinPayloadSize:16/SetParallelism(256)-12          134B \u00b1 0%      128B \u00b1 0%   -4.48%  (p=0.000 n=8+8)\r\nProtoCodec/MinPayloadSize:16/SetParallelism(4096)-12         135B \u00b1 0%      129B \u00b1 1%   -4.63%  (p=0.000 n=7+8)\r\nProtoCodec/MinPayloadSize:16/SetParallelism(65536)-12      25.2MB \u00b1 0%    25.2MB \u00b1 0%   -0.01%  (p=0.000 n=7+8)\r\nProtoCodec/MinPayloadSize:256/SetParallelism(1)-12           697B \u00b1 0%      640B \u00b1 0%   -8.18%  (p=0.000 n=8+8)\r\nProtoCodec/MinPayloadSize:256/SetParallelism(16)-12          697B \u00b1 0%      640B \u00b1 0%   -8.18%  (p=0.000 n=8+8)\r\nProtoCodec/MinPayloadSize:256/SetParallelism(256)-12         698B \u00b1 0%      640B \u00b1 0%   -8.31%  (p=0.000 n=8+8)\r\nProtoCodec/MinPayloadSize:256/SetParallelism(4096)-12        703B \u00b1 0%      644B \u00b1 0%   -8.45%  (p=0.000 n=8+8)\r\nProtoCodec/MinPayloadSize:256/SetParallelism(65536)-12     25.2MB \u00b1 0%    25.2MB \u00b1 0%   -0.01%  (p=0.000 n=8+7)\r\nProtoCodec/MinPayloadSize:4096/SetParallelism(1)-12        10.8kB \u00b1 0%     9.8kB \u00b1 0%   -9.04%  (p=0.000 n=8+8)\r\nProtoCodec/MinPayloadSize:4096/SetParallelism(16)-12       10.8kB \u00b1 0%     9.8kB \u00b1 0%   -9.11%  (p=0.000 n=8+8)\r\nProtoCodec/MinPayloadSize:4096/SetParallelism(256)-12      10.8kB \u00b1 0%     9.8kB \u00b1 0%   -9.64%  (p=0.000 n=8+8)\r\nProtoCodec/MinPayloadSize:4096/SetParallelism(4096)-12     10.9kB \u00b1 0%     9.8kB \u00b1 0%   -9.89%  (p=0.000 n=8+7)\r\nProtoCodec/MinPayloadSize:4096/SetParallelism(65536)-12    25.2MB \u00b1 0%    25.2MB \u00b1 0%   -0.01%  (p=0.000 n=7+8)\r\n\r\nname                                                     old allocs/op  new allocs/op  delta\r\nProtoCodec/MinPayloadSize:1/SetParallelism(1)-12             3.00 \u00b1 0%      3.00 \u00b1 0%     ~     (all equal)\r\nProtoCodec/MinPayloadSize:1/SetParallelism(16)-12            3.00 \u00b1 0%      3.00 \u00b1 0%     ~     (all equal)\r\nProtoCodec/MinPayloadSize:1/SetParallelism(256)-12           3.00 \u00b1 0%      3.00 \u00b1 0%     ~     (all equal)\r\nProtoCodec/MinPayloadSize:1/SetParallelism(4096)-12          3.00 \u00b1 0%      3.00 \u00b1 0%     ~     (all equal)\r\nProtoCodec/MinPayloadSize:1/SetParallelism(65536)-12         786k \u00b1 0%      786k \u00b1 0%   -0.00%  (p=0.004 n=7+7)\r\nProtoCodec/MinPayloadSize:16/SetParallelism(1)-12            3.00 \u00b1 0%      3.00 \u00b1 0%     ~     (all equal)\r\nProtoCodec/MinPayloadSize:16/SetParallelism(16)-12           3.00 \u00b1 0%      3.00 \u00b1 0%     ~     (all equal)\r\nProtoCodec/MinPayloadSize:16/SetParallelism(256)-12          3.00 \u00b1 0%      3.00 \u00b1 0%     ~     (all equal)\r\nProtoCodec/MinPayloadSize:16/SetParallelism(4096)-12         3.00 \u00b1 0%      3.00 \u00b1 0%     ~     (all equal)\r\nProtoCodec/MinPayloadSize:16/SetParallelism(65536)-12        786k \u00b1 0%      786k \u00b1 0%   -0.00%  (p=0.000 n=7+8)\r\nProtoCodec/MinPayloadSize:256/SetParallelism(1)-12           3.00 \u00b1 0%      3.00 \u00b1 0%     ~     (all equal)\r\nProtoCodec/MinPayloadSize:256/SetParallelism(16)-12          3.00 \u00b1 0%      3.00 \u00b1 0%     ~     (all equal)\r\nProtoCodec/MinPayloadSize:256/SetParallelism(256)-12         3.00 \u00b1 0%      3.00 \u00b1 0%     ~     (all equal)\r\nProtoCodec/MinPayloadSize:256/SetParallelism(4096)-12        3.00 \u00b1 0%      3.00 \u00b1 0%     ~     (all equal)\r\nProtoCodec/MinPayloadSize:256/SetParallelism(65536)-12       786k \u00b1 0%      786k \u00b1 0%   -0.00%  (p=0.000 n=8+7)\r\nProtoCodec/MinPayloadSize:4096/SetParallelism(1)-12          3.00 \u00b1 0%      3.00 \u00b1 0%     ~     (all equal)\r\nProtoCodec/MinPayloadSize:4096/SetParallelism(16)-12         3.00 \u00b1 0%      3.00 \u00b1 0%     ~     (all equal)\r\nProtoCodec/MinPayloadSize:4096/SetParallelism(256)-12        3.00 \u00b1 0%      3.00 \u00b1 0%     ~     (all equal)\r\nProtoCodec/MinPayloadSize:4096/SetParallelism(4096)-12       4.00 \u00b1 0%      3.00 \u00b1 0%  -25.00%  (p=0.000 n=8+8)\r\nProtoCodec/MinPayloadSize:4096/SetParallelism(65536)-12      786k \u00b1 0%      786k \u00b1 0%   -0.00%  (p=0.000 n=7+8)\r\n```\r\n\r\nThe impact outside of microbenchmarks is probably much smaller.",
    "closed_at": null,
    "comments": 2,
    "comments_url": "https://api.github.com/repos/grpc/grpc-go/issues/3400/comments",
    "created_at": "2020-02-26T07:31:24Z",
    "events_url": "https://api.github.com/repos/grpc/grpc-go/issues/3400/events",
    "html_url": "https://github.com/grpc/grpc-go/issues/3400",
    "id": 571124108,
    "labels": [
      {
        "color": "bfdadc",
        "default": false,
        "description": null,
        "id": 586671344,
        "name": "Type: Bug",
        "node_id": "MDU6TGFiZWw1ODY2NzEzNDQ=",
        "url": "https://api.github.com/repos/grpc/grpc-go/labels/Type:%20Bug"
      }
    ],
    "labels_url": "https://api.github.com/repos/grpc/grpc-go/issues/3400/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1NzExMjQxMDg=",
    "number": 3400,
    "repository_url": "https://api.github.com/repos/grpc/grpc-go",
    "state": "open",
    "title": "encoding/proto: inefficiencies in proto encoding/decoding",
    "updated_at": "2020-02-27T21:41:47Z",
    "url": "https://api.github.com/repos/grpc/grpc-go/issues/3400",
    "user": {
      "avatar_url": "https://avatars1.githubusercontent.com/u/52544?v=4",
      "events_url": "https://api.github.com/users/neild/events{/privacy}",
      "followers_url": "https://api.github.com/users/neild/followers",
      "following_url": "https://api.github.com/users/neild/following{/other_user}",
      "gists_url": "https://api.github.com/users/neild/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/neild",
      "id": 52544,
      "login": "neild",
      "node_id": "MDQ6VXNlcjUyNTQ0",
      "organizations_url": "https://api.github.com/users/neild/orgs",
      "received_events_url": "https://api.github.com/users/neild/received_events",
      "repos_url": "https://api.github.com/users/neild/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/neild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/neild/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/neild"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "Currently, the request compression codec is set on `stats.OutHeader` client-side and `stats.InHeader` server-side, but the response compression codec is never recorded. This is documented in the comments of the code:\r\n\r\nhttps://github.com/grpc/grpc-go/blob/v1.27.1/stats/stats.go#L85-L95\r\nhttps://github.com/grpc/grpc-go/blob/v1.27.1/stats/stats.go#L145-L155\r\n\r\nIt should be possible to also record the compression used on the response bytes. According to the gRPC compression specification (https://github.com/grpc/grpc/blob/master/doc/compression.md), there can be asymmetric compression where the request and response payloads are compressed with different codec.\r\n\r\n",
    "closed_at": null,
    "comments": 1,
    "comments_url": "https://api.github.com/repos/grpc/grpc-go/issues/3391/comments",
    "created_at": "2020-02-24T21:53:26Z",
    "events_url": "https://api.github.com/repos/grpc/grpc-go/issues/3391/events",
    "html_url": "https://github.com/grpc/grpc-go/issues/3391",
    "id": 570170464,
    "labels": [
      {
        "color": "bfdadc",
        "default": false,
        "description": null,
        "id": 586671344,
        "name": "Type: Bug",
        "node_id": "MDU6TGFiZWw1ODY2NzEzNDQ=",
        "url": "https://api.github.com/repos/grpc/grpc-go/labels/Type:%20Bug"
      }
    ],
    "labels_url": "https://api.github.com/repos/grpc/grpc-go/issues/3391/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1NzAxNzA0NjQ=",
    "number": 3391,
    "repository_url": "https://api.github.com/repos/grpc/grpc-go",
    "state": "open",
    "title": "Set response compression codec on stats.InHeader and stats.OutHeader",
    "updated_at": "2020-02-28T15:42:05Z",
    "url": "https://api.github.com/repos/grpc/grpc-go/issues/3391",
    "user": {
      "avatar_url": "https://avatars1.githubusercontent.com/u/1056326?v=4",
      "events_url": "https://api.github.com/users/MatthewDolan/events{/privacy}",
      "followers_url": "https://api.github.com/users/MatthewDolan/followers",
      "following_url": "https://api.github.com/users/MatthewDolan/following{/other_user}",
      "gists_url": "https://api.github.com/users/MatthewDolan/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/MatthewDolan",
      "id": 1056326,
      "login": "MatthewDolan",
      "node_id": "MDQ6VXNlcjEwNTYzMjY=",
      "organizations_url": "https://api.github.com/users/MatthewDolan/orgs",
      "received_events_url": "https://api.github.com/users/MatthewDolan/received_events",
      "repos_url": "https://api.github.com/users/MatthewDolan/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/MatthewDolan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MatthewDolan/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/MatthewDolan"
    }
  },
  {
    "assignee": {
      "avatar_url": "https://avatars1.githubusercontent.com/u/26072277?v=4",
      "events_url": "https://api.github.com/users/dfawley/events{/privacy}",
      "followers_url": "https://api.github.com/users/dfawley/followers",
      "following_url": "https://api.github.com/users/dfawley/following{/other_user}",
      "gists_url": "https://api.github.com/users/dfawley/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/dfawley",
      "id": 26072277,
      "login": "dfawley",
      "node_id": "MDQ6VXNlcjI2MDcyMjc3",
      "organizations_url": "https://api.github.com/users/dfawley/orgs",
      "received_events_url": "https://api.github.com/users/dfawley/received_events",
      "repos_url": "https://api.github.com/users/dfawley/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/dfawley/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dfawley/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/dfawley"
    },
    "assignees": [
      {
        "avatar_url": "https://avatars1.githubusercontent.com/u/26072277?v=4",
        "events_url": "https://api.github.com/users/dfawley/events{/privacy}",
        "followers_url": "https://api.github.com/users/dfawley/followers",
        "following_url": "https://api.github.com/users/dfawley/following{/other_user}",
        "gists_url": "https://api.github.com/users/dfawley/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/dfawley",
        "id": 26072277,
        "login": "dfawley",
        "node_id": "MDQ6VXNlcjI2MDcyMjc3",
        "organizations_url": "https://api.github.com/users/dfawley/orgs",
        "received_events_url": "https://api.github.com/users/dfawley/received_events",
        "repos_url": "https://api.github.com/users/dfawley/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/dfawley/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dfawley/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/dfawley"
      }
    ],
    "author_association": "CONTRIBUTOR",
    "body": "Currently, the request compression is recorded (on `stats.OutHeader` client-side and `stats.InHeader` server-side), but the response compression is never recorded. Although these compression codecs are often the same, the gRPC compression specification (https://github.com/grpc/grpc/blob/master/doc/compression.md) states that it's valid for them to be different.\r\n\r\n- The pull request captures the response compression (on `stats.InHeader` client-side and `stats.OutHeader` server-side).\r\n- This pull request moves the two fields (`Compression` and `Header`) above the comment `The following fields are valid only if Client is true.` because they are now both valid on the server-side and client-side.\r\n\r\n",
    "closed_at": null,
    "comments": 0,
    "comments_url": "https://api.github.com/repos/grpc/grpc-go/issues/3390/comments",
    "created_at": "2020-02-24T21:53:12Z",
    "events_url": "https://api.github.com/repos/grpc/grpc-go/issues/3390/events",
    "html_url": "https://github.com/grpc/grpc-go/pull/3390",
    "id": 570170357,
    "labels": [
      {
        "color": "bfdadc",
        "default": false,
        "description": null,
        "id": 586671344,
        "name": "Type: Bug",
        "node_id": "MDU6TGFiZWw1ODY2NzEzNDQ=",
        "url": "https://api.github.com/repos/grpc/grpc-go/labels/Type:%20Bug"
      }
    ],
    "labels_url": "https://api.github.com/repos/grpc/grpc-go/issues/3390/labels{/name}",
    "locked": false,
    "milestone": {
      "closed_at": null,
      "closed_issues": 17,
      "created_at": "2020-01-28T20:38:17Z",
      "creator": {
        "avatar_url": "https://avatars2.githubusercontent.com/u/960845?v=4",
        "events_url": "https://api.github.com/users/menghanl/events{/privacy}",
        "followers_url": "https://api.github.com/users/menghanl/followers",
        "following_url": "https://api.github.com/users/menghanl/following{/other_user}",
        "gists_url": "https://api.github.com/users/menghanl/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/menghanl",
        "id": 960845,
        "login": "menghanl",
        "node_id": "MDQ6VXNlcjk2MDg0NQ==",
        "organizations_url": "https://api.github.com/users/menghanl/orgs",
        "received_events_url": "https://api.github.com/users/menghanl/received_events",
        "repos_url": "https://api.github.com/users/menghanl/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/menghanl/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/menghanl/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/menghanl"
      },
      "description": "",
      "due_on": "2020-03-10T07:00:00Z",
      "html_url": "https://github.com/grpc/grpc-go/milestone/26",
      "id": 5050649,
      "labels_url": "https://api.github.com/repos/grpc/grpc-go/milestones/26/labels",
      "node_id": "MDk6TWlsZXN0b25lNTA1MDY0OQ==",
      "number": 26,
      "open_issues": 6,
      "state": "open",
      "title": "1.28 Release",
      "updated_at": "2020-02-27T21:14:35Z",
      "url": "https://api.github.com/repos/grpc/grpc-go/milestones/26"
    },
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mzc5MjUwMjEw",
    "number": 3390,
    "pull_request": {
      "diff_url": "https://github.com/grpc/grpc-go/pull/3390.diff",
      "html_url": "https://github.com/grpc/grpc-go/pull/3390",
      "patch_url": "https://github.com/grpc/grpc-go/pull/3390.patch",
      "url": "https://api.github.com/repos/grpc/grpc-go/pulls/3390"
    },
    "repository_url": "https://api.github.com/repos/grpc/grpc-go",
    "state": "open",
    "title": "Set response compression codec on stats.InHeader and stats.OutHeader",
    "updated_at": "2020-02-27T21:14:35Z",
    "url": "https://api.github.com/repos/grpc/grpc-go/issues/3390",
    "user": {
      "avatar_url": "https://avatars1.githubusercontent.com/u/1056326?v=4",
      "events_url": "https://api.github.com/users/MatthewDolan/events{/privacy}",
      "followers_url": "https://api.github.com/users/MatthewDolan/followers",
      "following_url": "https://api.github.com/users/MatthewDolan/following{/other_user}",
      "gists_url": "https://api.github.com/users/MatthewDolan/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/MatthewDolan",
      "id": 1056326,
      "login": "MatthewDolan",
      "node_id": "MDQ6VXNlcjEwNTYzMjY=",
      "organizations_url": "https://api.github.com/users/MatthewDolan/orgs",
      "received_events_url": "https://api.github.com/users/MatthewDolan/received_events",
      "repos_url": "https://api.github.com/users/MatthewDolan/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/MatthewDolan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MatthewDolan/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/MatthewDolan"
    }
  },
  {
    "assignee": {
      "avatar_url": "https://avatars0.githubusercontent.com/u/4115646?v=4",
      "events_url": "https://api.github.com/users/yang1992/events{/privacy}",
      "followers_url": "https://api.github.com/users/yang1992/followers",
      "following_url": "https://api.github.com/users/yang1992/following{/other_user}",
      "gists_url": "https://api.github.com/users/yang1992/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/yang1992",
      "id": 4115646,
      "login": "yang1992",
      "node_id": "MDQ6VXNlcjQxMTU2NDY=",
      "organizations_url": "https://api.github.com/users/yang1992/orgs",
      "received_events_url": "https://api.github.com/users/yang1992/received_events",
      "repos_url": "https://api.github.com/users/yang1992/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/yang1992/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yang1992/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/yang1992"
    },
    "assignees": [
      {
        "avatar_url": "https://avatars0.githubusercontent.com/u/4115646?v=4",
        "events_url": "https://api.github.com/users/yang1992/events{/privacy}",
        "followers_url": "https://api.github.com/users/yang1992/followers",
        "following_url": "https://api.github.com/users/yang1992/following{/other_user}",
        "gists_url": "https://api.github.com/users/yang1992/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/yang1992",
        "id": 4115646,
        "login": "yang1992",
        "node_id": "MDQ6VXNlcjQxMTU2NDY=",
        "organizations_url": "https://api.github.com/users/yang1992/orgs",
        "received_events_url": "https://api.github.com/users/yang1992/received_events",
        "repos_url": "https://api.github.com/users/yang1992/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/yang1992/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/yang1992/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/yang1992"
      }
    ],
    "author_association": "NONE",
    "body": "UseCompressor function is missing \"s\" with myclient",
    "closed_at": null,
    "comments": 1,
    "comments_url": "https://api.github.com/repos/grpc/grpc-go/issues/3387/comments",
    "created_at": "2020-02-23T05:15:01Z",
    "events_url": "https://api.github.com/repos/grpc/grpc-go/issues/3387/events",
    "html_url": "https://github.com/grpc/grpc-go/pull/3387",
    "id": 569439829,
    "labels": [
      {
        "color": "fbca04",
        "default": false,
        "description": null,
        "id": 559851193,
        "name": "Status: Requires Reporter Clarification",
        "node_id": "MDU6TGFiZWw1NTk4NTExOTM=",
        "url": "https://api.github.com/repos/grpc/grpc-go/labels/Status:%20Requires%20Reporter%20Clarification"
      },
      {
        "color": "bfdadc",
        "default": false,
        "description": null,
        "id": 245453852,
        "name": "Type: Documentation",
        "node_id": "MDU6TGFiZWwyNDU0NTM4NTI=",
        "url": "https://api.github.com/repos/grpc/grpc-go/labels/Type:%20Documentation"
      },
      {
        "color": "ffffff",
        "default": false,
        "description": "",
        "id": 983168016,
        "name": "no release notes",
        "node_id": "MDU6TGFiZWw5ODMxNjgwMTY=",
        "url": "https://api.github.com/repos/grpc/grpc-go/labels/no%20release%20notes"
      }
    ],
    "labels_url": "https://api.github.com/repos/grpc/grpc-go/issues/3387/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mzc4NjY0NzIw",
    "number": 3387,
    "pull_request": {
      "diff_url": "https://github.com/grpc/grpc-go/pull/3387.diff",
      "html_url": "https://github.com/grpc/grpc-go/pull/3387",
      "patch_url": "https://github.com/grpc/grpc-go/pull/3387.patch",
      "url": "https://api.github.com/repos/grpc/grpc-go/pulls/3387"
    },
    "repository_url": "https://api.github.com/repos/grpc/grpc-go",
    "state": "open",
    "title": "fix function name error",
    "updated_at": "2020-02-27T21:13:31Z",
    "url": "https://api.github.com/repos/grpc/grpc-go/issues/3387",
    "user": {
      "avatar_url": "https://avatars0.githubusercontent.com/u/4115646?v=4",
      "events_url": "https://api.github.com/users/yang1992/events{/privacy}",
      "followers_url": "https://api.github.com/users/yang1992/followers",
      "following_url": "https://api.github.com/users/yang1992/following{/other_user}",
      "gists_url": "https://api.github.com/users/yang1992/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/yang1992",
      "id": 4115646,
      "login": "yang1992",
      "node_id": "MDQ6VXNlcjQxMTU2NDY=",
      "organizations_url": "https://api.github.com/users/yang1992/orgs",
      "received_events_url": "https://api.github.com/users/yang1992/received_events",
      "repos_url": "https://api.github.com/users/yang1992/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/yang1992/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yang1992/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/yang1992"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "```\r\n--- FAIL: Test (61.15s)\r\n    --- FAIL: Test/CZTraceOverwriteChannelDeletion (10.19s)\r\n    \ttlogger.go:97: clientconn.go:164: Channel Created\r\n    \ttlogger.go:97: clientconn.go:242: parsed scheme: \"c0pjmx7gnfxw\"\r\n    \ttlogger.go:97: resolver_conn_wrapper.go:143: ccResolverWrapper: sending update to cc: {[{127.0.0.1:0 grpclb.server <nil> 1 <nil>}] <nil> <nil>}\r\n    \ttlogger.go:97: resolver_conn_wrapper.go:218: Resolver state updated: {Addresses:[{Addr:127.0.0.1:0 ServerName:grpclb.server Attributes:<nil> Type:1 Metadata:<nil>}] ServiceConfig:<nil> Attributes:<nil>} (resolver returned new addresses)\r\n    \ttlogger.go:97: clientconn.go:666: ClientConn switching balancer to \"grpclb\"\r\n    \ttlogger.go:97: clientconn.go:681: Channel switches to new LB policy \"grpclb\"\r\n    \ttlogger.go:97: clientconn.go:154: Channel Created\r\n    \ttlogger.go:97: clientconn.go:154: Nested Channel(id:2) created\r\n    \ttlogger.go:97: clientconn.go:242: parsed scheme: \"grpclb-internal\"\r\n    \ttlogger.go:97: resolver_conn_wrapper.go:143: ccResolverWrapper: sending update to cc: {[{127.0.0.1:0 grpclb.server <nil> 0 <nil>}] <nil> <nil>}\r\n    \ttlogger.go:97: resolver_conn_wrapper.go:218: Resolver state updated: {Addresses:[{Addr:127.0.0.1:0 ServerName:grpclb.server Attributes:<nil> Type:0 Metadata:<nil>}] ServiceConfig:<nil> Attributes:<nil>} (resolver returned new addresses)\r\n    \ttlogger.go:97: clientconn.go:666: ClientConn switching balancer to \"pick_first\"\r\n    \ttlogger.go:97: clientconn.go:681: Channel switches to new LB policy \"pick_first\"\r\n    \ttlogger.go:97: clientconn.go:722: Subchannel Created\r\n    \ttlogger.go:97: clientconn.go:722: Subchannel(id:3) created\r\n    \ttlogger.go:97: clientconn.go:1055: Subchannel Connectivity change to CONNECTING\r\n    \ttlogger.go:97: clientconn.go:1192: Subchannel picks a new address \"127.0.0.1:0\" to connect\r\n    \ttlogger.go:97: clientconn.go:416: Channel Connectivity change to CONNECTING\r\n    \ttlogger.go:97: resolver_conn_wrapper.go:143: ccResolverWrapper: sending update to cc: {[{127.0.0.1:0  <nil> 0 <nil>}] 0xc420baef00 <nil>}\r\n    \ttlogger.go:97: resolver_conn_wrapper.go:218: Resolver state updated: {Addresses:[{Addr:127.0.0.1:0 ServerName: Attributes:<nil> Type:0 Metadata:<nil>}] ServiceConfig:0xc420baef00 Attributes:<nil>} (service config updated)\r\n    \ttlogger.go:97: clientconn.go:666: ClientConn switching balancer to \"round_robin\"\r\n    \ttlogger.go:97: clientconn.go:681: Channel switches to new LB policy \"round_robin\"\r\n    \ttlogger.go:97: clientconn.go:722: Subchannel Created\r\n    \ttlogger.go:97: clientconn.go:722: Subchannel(id:4) created\r\n    \ttlogger.go:97: clientconn.go:1055: Subchannel Connectivity change to CONNECTING\r\n    \ttlogger.go:97: clientconn.go:1192: Subchannel picks a new address \"127.0.0.1:0\" to connect\r\n    \ttlogger.go:97: clientconn.go:416: Channel Connectivity change to SHUTDOWN\r\n    \ttlogger.go:97: clientconn.go:416: Channel Connectivity change to CONNECTING\r\n    \ttlogger.go:97: clientconn.go:1055: Subchannel Connectivity change to SHUTDOWN\r\n    \ttlogger.go:97: clientconn.go:1426: Subchannel Deleted\r\n    \ttlogger.go:97: clientconn.go:1426: Subchanel(id:3) deleted\r\n    \ttlogger.go:97: clientconn.go:1011: Channel Deleted\r\n    \ttlogger.go:97: clientconn.go:1274: grpc: addrConn.createTransport failed to connect to {127.0.0.1:0  <nil> 0 <nil>}. Err: connection error: desc = \"transport: Error while dialing dial tcp 127.0.0.1:0: getsockopt: connection refused\". Reconnecting...\r\n    \ttlogger.go:97: clientconn.go:1274: grpc: addrConn.createTransport failed to connect to {127.0.0.1:0 grpclb.server <nil> 0 <nil>}. Err: connection error: desc = \"transport: Error while dialing dial tcp 127.0.0.1:0: getsockopt: connection refused\". Reconnecting...\r\n    \ttlogger.go:97: clientconn.go:1055: Subchannel Connectivity change to TRANSIENT_FAILURE\r\n    \ttlogger.go:97: clientconn.go:416: Channel Connectivity change to TRANSIENT_FAILURE\r\n    \ttlogger.go:97: clientconn.go:1011: Nested channel(id:2) deleted\r\n    \ttlogger.go:97: clientconn.go:1055: Subchannel Connectivity change to CONNECTING\r\n    \ttlogger.go:97: clientconn.go:1192: Subchannel picks a new address \"127.0.0.1:0\" to connect\r\n    \ttlogger.go:97: clientconn.go:1274: grpc: addrConn.createTransport failed to connect to {127.0.0.1:0  <nil> 0 <nil>}. Err: connection error: desc = \"transport: Error while dialing dial tcp 127.0.0.1:0: getsockopt: connection refused\". Reconnecting...\r\n    \ttlogger.go:97: clientconn.go:1055: Subchannel Connectivity change to TRANSIENT_FAILURE\r\n    \ttlogger.go:97: clientconn.go:1055: Subchannel Connectivity change to CONNECTING\r\n    \ttlogger.go:97: clientconn.go:1192: Subchannel picks a new address \"127.0.0.1:0\" to connect\r\n    \ttlogger.go:97: clientconn.go:1274: grpc: addrConn.createTransport failed to connect to {127.0.0.1:0  <nil> 0 <nil>}. Err: connection error: desc = \"transport: Error while dialing dial tcp 127.0.0.1:0: getsockopt: connection refused\". Reconnecting...\r\n    \ttlogger.go:97: clientconn.go:1055: Subchannel Connectivity change to TRANSIENT_FAILURE\r\n    \ttlogger.go:97: clientconn.go:1055: Subchannel Connectivity change to CONNECTING\r\n    \ttlogger.go:97: clientconn.go:1192: Subchannel picks a new address \"127.0.0.1:0\" to connect\r\n    \ttlogger.go:97: clientconn.go:1274: grpc: addrConn.createTransport failed to connect to {127.0.0.1:0  <nil> 0 <nil>}. Err: connection error: desc = \"transport: Error while dialing dial tcp 127.0.0.1:0: getsockopt: connection refused\". Reconnecting...\r\n    \ttlogger.go:97: clientconn.go:1055: Subchannel Connectivity change to TRANSIENT_FAILURE\r\n    \ttlogger.go:97: clientconn.go:1055: Subchannel Connectivity change to CONNECTING\r\n    \ttlogger.go:97: clientconn.go:1192: Subchannel picks a new address \"127.0.0.1:0\" to connect\r\n    \ttlogger.go:97: clientconn.go:1274: grpc: addrConn.createTransport failed to connect to {127.0.0.1:0  <nil> 0 <nil>}. Err: connection error: desc = \"transport: Error while dialing dial tcp 127.0.0.1:0: getsockopt: connection refused\". Reconnecting...\r\n    \ttlogger.go:97: clientconn.go:1055: Subchannel Connectivity change to TRANSIENT_FAILURE\r\n    \tchannelz_test.go:1936: nested channel should have been deleted since its parent's trace should not contain any reference to it anymore\r\n    \ttlogger.go:97: clientconn.go:416: Channel Connectivity change to SHUTDOWN\r\n    \ttlogger.go:97: clientconn.go:1055: Subchannel Connectivity change to SHUTDOWN\r\n    \ttlogger.go:97: clientconn.go:1426: Subchannel Deleted\r\n    \ttlogger.go:97: clientconn.go:1426: Subchanel(id:4) deleted\r\n    \ttlogger.go:97: clientconn.go:1011: Channel Deleted\r\n    \ttlogger.go:111: types.go:69: attempt to delete child with id 4 from a parent (id=1) that doesn't currently exist\r\nFAIL\r\nFAIL\tgoogle.golang.org/grpc/test\t140.850s\r\n```",
    "closed_at": null,
    "comments": 2,
    "comments_url": "https://api.github.com/repos/grpc/grpc-go/issues/3383/comments",
    "created_at": "2020-02-18T19:48:04Z",
    "events_url": "https://api.github.com/repos/grpc/grpc-go/issues/3383/events",
    "html_url": "https://github.com/grpc/grpc-go/issues/3383",
    "id": 567118843,
    "labels": [
      {
        "color": "bfdadc",
        "default": false,
        "description": null,
        "id": 586671344,
        "name": "Type: Bug",
        "node_id": "MDU6TGFiZWw1ODY2NzEzNDQ=",
        "url": "https://api.github.com/repos/grpc/grpc-go/labels/Type:%20Bug"
      }
    ],
    "labels_url": "https://api.github.com/repos/grpc/grpc-go/issues/3383/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1NjcxMTg4NDM=",
    "number": 3383,
    "repository_url": "https://api.github.com/repos/grpc/grpc-go",
    "state": "open",
    "title": "Flaky test: Test/CZTraceOverwriteChannelDeletion",
    "updated_at": "2020-02-20T23:56:32Z",
    "url": "https://api.github.com/repos/grpc/grpc-go/issues/3383",
    "user": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/1638487?v=4",
      "events_url": "https://api.github.com/users/easwars/events{/privacy}",
      "followers_url": "https://api.github.com/users/easwars/followers",
      "following_url": "https://api.github.com/users/easwars/following{/other_user}",
      "gists_url": "https://api.github.com/users/easwars/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/easwars",
      "id": 1638487,
      "login": "easwars",
      "node_id": "MDQ6VXNlcjE2Mzg0ODc=",
      "organizations_url": "https://api.github.com/users/easwars/orgs",
      "received_events_url": "https://api.github.com/users/easwars/received_events",
      "repos_url": "https://api.github.com/users/easwars/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/easwars/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/easwars/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/easwars"
    }
  },
  {
    "assignee": {
      "avatar_url": "https://avatars1.githubusercontent.com/u/26072277?v=4",
      "events_url": "https://api.github.com/users/dfawley/events{/privacy}",
      "followers_url": "https://api.github.com/users/dfawley/followers",
      "following_url": "https://api.github.com/users/dfawley/following{/other_user}",
      "gists_url": "https://api.github.com/users/dfawley/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/dfawley",
      "id": 26072277,
      "login": "dfawley",
      "node_id": "MDQ6VXNlcjI2MDcyMjc3",
      "organizations_url": "https://api.github.com/users/dfawley/orgs",
      "received_events_url": "https://api.github.com/users/dfawley/received_events",
      "repos_url": "https://api.github.com/users/dfawley/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/dfawley/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dfawley/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/dfawley"
    },
    "assignees": [
      {
        "avatar_url": "https://avatars1.githubusercontent.com/u/26072277?v=4",
        "events_url": "https://api.github.com/users/dfawley/events{/privacy}",
        "followers_url": "https://api.github.com/users/dfawley/followers",
        "following_url": "https://api.github.com/users/dfawley/following{/other_user}",
        "gists_url": "https://api.github.com/users/dfawley/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/dfawley",
        "id": 26072277,
        "login": "dfawley",
        "node_id": "MDQ6VXNlcjI2MDcyMjc3",
        "organizations_url": "https://api.github.com/users/dfawley/orgs",
        "received_events_url": "https://api.github.com/users/dfawley/received_events",
        "repos_url": "https://api.github.com/users/dfawley/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/dfawley/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dfawley/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/dfawley"
      }
    ],
    "author_association": "NONE",
    "body": "Resolves #2770 ",
    "closed_at": null,
    "comments": 1,
    "comments_url": "https://api.github.com/repos/grpc/grpc-go/issues/3381/comments",
    "created_at": "2020-02-15T01:58:36Z",
    "events_url": "https://api.github.com/repos/grpc/grpc-go/issues/3381/events",
    "html_url": "https://github.com/grpc/grpc-go/pull/3381",
    "id": 565640607,
    "labels": [
      {
        "color": "bfdadc",
        "default": false,
        "description": null,
        "id": 245453852,
        "name": "Type: Documentation",
        "node_id": "MDU6TGFiZWwyNDU0NTM4NTI=",
        "url": "https://api.github.com/repos/grpc/grpc-go/labels/Type:%20Documentation"
      }
    ],
    "labels_url": "https://api.github.com/repos/grpc/grpc-go/issues/3381/labels{/name}",
    "locked": false,
    "milestone": {
      "closed_at": null,
      "closed_issues": 17,
      "created_at": "2020-01-28T20:38:17Z",
      "creator": {
        "avatar_url": "https://avatars2.githubusercontent.com/u/960845?v=4",
        "events_url": "https://api.github.com/users/menghanl/events{/privacy}",
        "followers_url": "https://api.github.com/users/menghanl/followers",
        "following_url": "https://api.github.com/users/menghanl/following{/other_user}",
        "gists_url": "https://api.github.com/users/menghanl/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/menghanl",
        "id": 960845,
        "login": "menghanl",
        "node_id": "MDQ6VXNlcjk2MDg0NQ==",
        "organizations_url": "https://api.github.com/users/menghanl/orgs",
        "received_events_url": "https://api.github.com/users/menghanl/received_events",
        "repos_url": "https://api.github.com/users/menghanl/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/menghanl/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/menghanl/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/menghanl"
      },
      "description": "",
      "due_on": "2020-03-10T07:00:00Z",
      "html_url": "https://github.com/grpc/grpc-go/milestone/26",
      "id": 5050649,
      "labels_url": "https://api.github.com/repos/grpc/grpc-go/milestones/26/labels",
      "node_id": "MDk6TWlsZXN0b25lNTA1MDY0OQ==",
      "number": 26,
      "open_issues": 6,
      "state": "open",
      "title": "1.28 Release",
      "updated_at": "2020-02-27T21:14:35Z",
      "url": "https://api.github.com/repos/grpc/grpc-go/milestones/26"
    },
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mzc1NjQ0MjQ4",
    "number": 3381,
    "pull_request": {
      "diff_url": "https://github.com/grpc/grpc-go/pull/3381.diff",
      "html_url": "https://github.com/grpc/grpc-go/pull/3381",
      "patch_url": "https://github.com/grpc/grpc-go/pull/3381.patch",
      "url": "https://api.github.com/repos/grpc/grpc-go/pulls/3381"
    },
    "repository_url": "https://api.github.com/repos/grpc/grpc-go",
    "state": "open",
    "title": "gh-2770: add documentation around use of the health API",
    "updated_at": "2020-02-20T21:13:44Z",
    "url": "https://api.github.com/repos/grpc/grpc-go/issues/3381",
    "user": {
      "avatar_url": "https://avatars1.githubusercontent.com/u/690578?v=4",
      "events_url": "https://api.github.com/users/mjpitz/events{/privacy}",
      "followers_url": "https://api.github.com/users/mjpitz/followers",
      "following_url": "https://api.github.com/users/mjpitz/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjpitz/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mjpitz",
      "id": 690578,
      "login": "mjpitz",
      "node_id": "MDQ6VXNlcjY5MDU3OA==",
      "organizations_url": "https://api.github.com/users/mjpitz/orgs",
      "received_events_url": "https://api.github.com/users/mjpitz/received_events",
      "repos_url": "https://api.github.com/users/mjpitz/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mjpitz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjpitz/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mjpitz"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "In many tests, `manual.GenerateAndRegisterManualResolver` registers a testing resolver, which is removed after the test.\r\n\r\n`grpc.WithResolvers` should have the same effect, but in a much cleaner way.\r\nExample:\r\nhttps://github.com/grpc/grpc-go/blob/6b9bf4296edc5fae722a5dff887a954ffc599b12/clientconn_test.go#L537-L546",
    "closed_at": null,
    "comments": 0,
    "comments_url": "https://api.github.com/repos/grpc/grpc-go/issues/3380/comments",
    "created_at": "2020-02-14T18:03:33Z",
    "events_url": "https://api.github.com/repos/grpc/grpc-go/issues/3380/events",
    "html_url": "https://github.com/grpc/grpc-go/issues/3380",
    "id": 565476500,
    "labels": [
      {
        "color": "61380B",
        "default": false,
        "description": null,
        "id": 675961835,
        "name": "P3",
        "node_id": "MDU6TGFiZWw2NzU5NjE4MzU=",
        "url": "https://api.github.com/repos/grpc/grpc-go/labels/P3"
      },
      {
        "color": "bfdadc",
        "default": false,
        "description": null,
        "id": 687192383,
        "name": "Type: Internal Cleanup",
        "node_id": "MDU6TGFiZWw2ODcxOTIzODM=",
        "url": "https://api.github.com/repos/grpc/grpc-go/labels/Type:%20Internal%20Cleanup"
      },
      {
        "color": "ecef4c",
        "default": false,
        "description": "",
        "id": 1336038010,
        "name": "fixit",
        "node_id": "MDU6TGFiZWwxMzM2MDM4MDEw",
        "url": "https://api.github.com/repos/grpc/grpc-go/labels/fixit"
      }
    ],
    "labels_url": "https://api.github.com/repos/grpc/grpc-go/issues/3380/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1NjU0NzY1MDA=",
    "number": 3380,
    "repository_url": "https://api.github.com/repos/grpc/grpc-go",
    "state": "open",
    "title": "cleanup: replace manual.GenerateAndRegisterManualResolver with grpc.WithResolvers",
    "updated_at": "2020-02-14T18:03:33Z",
    "url": "https://api.github.com/repos/grpc/grpc-go/issues/3380",
    "user": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/960845?v=4",
      "events_url": "https://api.github.com/users/menghanl/events{/privacy}",
      "followers_url": "https://api.github.com/users/menghanl/followers",
      "following_url": "https://api.github.com/users/menghanl/following{/other_user}",
      "gists_url": "https://api.github.com/users/menghanl/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/menghanl",
      "id": 960845,
      "login": "menghanl",
      "node_id": "MDQ6VXNlcjk2MDg0NQ==",
      "organizations_url": "https://api.github.com/users/menghanl/orgs",
      "received_events_url": "https://api.github.com/users/menghanl/received_events",
      "repos_url": "https://api.github.com/users/menghanl/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/menghanl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/menghanl/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/menghanl"
    }
  },
  {
    "assignee": {
      "avatar_url": "https://avatars1.githubusercontent.com/u/26072277?v=4",
      "events_url": "https://api.github.com/users/dfawley/events{/privacy}",
      "followers_url": "https://api.github.com/users/dfawley/followers",
      "following_url": "https://api.github.com/users/dfawley/following{/other_user}",
      "gists_url": "https://api.github.com/users/dfawley/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/dfawley",
      "id": 26072277,
      "login": "dfawley",
      "node_id": "MDQ6VXNlcjI2MDcyMjc3",
      "organizations_url": "https://api.github.com/users/dfawley/orgs",
      "received_events_url": "https://api.github.com/users/dfawley/received_events",
      "repos_url": "https://api.github.com/users/dfawley/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/dfawley/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dfawley/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/dfawley"
    },
    "assignees": [
      {
        "avatar_url": "https://avatars1.githubusercontent.com/u/26072277?v=4",
        "events_url": "https://api.github.com/users/dfawley/events{/privacy}",
        "followers_url": "https://api.github.com/users/dfawley/followers",
        "following_url": "https://api.github.com/users/dfawley/following{/other_user}",
        "gists_url": "https://api.github.com/users/dfawley/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/dfawley",
        "id": 26072277,
        "login": "dfawley",
        "node_id": "MDQ6VXNlcjI2MDcyMjc3",
        "organizations_url": "https://api.github.com/users/dfawley/orgs",
        "received_events_url": "https://api.github.com/users/dfawley/received_events",
        "repos_url": "https://api.github.com/users/dfawley/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/dfawley/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dfawley/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/dfawley"
      }
    ],
    "author_association": "CONTRIBUTOR",
    "body": "",
    "closed_at": null,
    "comments": 0,
    "comments_url": "https://api.github.com/repos/grpc/grpc-go/issues/3379/comments",
    "created_at": "2020-02-14T11:48:47Z",
    "events_url": "https://api.github.com/repos/grpc/grpc-go/issues/3379/events",
    "html_url": "https://github.com/grpc/grpc-go/pull/3379",
    "id": 565279211,
    "labels": [
      {
        "color": "bfdadc",
        "default": false,
        "description": null,
        "id": 586671104,
        "name": "Type: Feature",
        "node_id": "MDU6TGFiZWw1ODY2NzExMDQ=",
        "url": "https://api.github.com/repos/grpc/grpc-go/labels/Type:%20Feature"
      },
      {
        "color": "ffffff",
        "default": false,
        "description": "",
        "id": 983168016,
        "name": "no release notes",
        "node_id": "MDU6TGFiZWw5ODMxNjgwMTY=",
        "url": "https://api.github.com/repos/grpc/grpc-go/labels/no%20release%20notes"
      }
    ],
    "labels_url": "https://api.github.com/repos/grpc/grpc-go/issues/3379/labels{/name}",
    "locked": false,
    "milestone": {
      "closed_at": null,
      "closed_issues": 17,
      "created_at": "2020-01-28T20:38:17Z",
      "creator": {
        "avatar_url": "https://avatars2.githubusercontent.com/u/960845?v=4",
        "events_url": "https://api.github.com/users/menghanl/events{/privacy}",
        "followers_url": "https://api.github.com/users/menghanl/followers",
        "following_url": "https://api.github.com/users/menghanl/following{/other_user}",
        "gists_url": "https://api.github.com/users/menghanl/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/menghanl",
        "id": 960845,
        "login": "menghanl",
        "node_id": "MDQ6VXNlcjk2MDg0NQ==",
        "organizations_url": "https://api.github.com/users/menghanl/orgs",
        "received_events_url": "https://api.github.com/users/menghanl/received_events",
        "repos_url": "https://api.github.com/users/menghanl/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/menghanl/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/menghanl/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/menghanl"
      },
      "description": "",
      "due_on": "2020-03-10T07:00:00Z",
      "html_url": "https://github.com/grpc/grpc-go/milestone/26",
      "id": 5050649,
      "labels_url": "https://api.github.com/repos/grpc/grpc-go/milestones/26/labels",
      "node_id": "MDk6TWlsZXN0b25lNTA1MDY0OQ==",
      "number": 26,
      "open_issues": 6,
      "state": "open",
      "title": "1.28 Release",
      "updated_at": "2020-02-27T21:14:35Z",
      "url": "https://api.github.com/repos/grpc/grpc-go/milestones/26"
    },
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mzc1MzUwNTY3",
    "number": 3379,
    "pull_request": {
      "diff_url": "https://github.com/grpc/grpc-go/pull/3379.diff",
      "html_url": "https://github.com/grpc/grpc-go/pull/3379",
      "patch_url": "https://github.com/grpc/grpc-go/pull/3379.patch",
      "url": "https://api.github.com/repos/grpc/grpc-go/pulls/3379"
    },
    "repository_url": "https://api.github.com/repos/grpc/grpc-go",
    "state": "open",
    "title": "rls: Implementation of lb config parse functionality.",
    "updated_at": "2020-02-29T00:24:53Z",
    "url": "https://api.github.com/repos/grpc/grpc-go/issues/3379",
    "user": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/1638487?v=4",
      "events_url": "https://api.github.com/users/easwars/events{/privacy}",
      "followers_url": "https://api.github.com/users/easwars/followers",
      "following_url": "https://api.github.com/users/easwars/following{/other_user}",
      "gists_url": "https://api.github.com/users/easwars/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/easwars",
      "id": 1638487,
      "login": "easwars",
      "node_id": "MDQ6VXNlcjE2Mzg0ODc=",
      "organizations_url": "https://api.github.com/users/easwars/orgs",
      "received_events_url": "https://api.github.com/users/easwars/received_events",
      "repos_url": "https://api.github.com/users/easwars/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/easwars/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/easwars/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/easwars"
    }
  },
  {
    "assignee": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/960845?v=4",
      "events_url": "https://api.github.com/users/menghanl/events{/privacy}",
      "followers_url": "https://api.github.com/users/menghanl/followers",
      "following_url": "https://api.github.com/users/menghanl/following{/other_user}",
      "gists_url": "https://api.github.com/users/menghanl/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/menghanl",
      "id": 960845,
      "login": "menghanl",
      "node_id": "MDQ6VXNlcjk2MDg0NQ==",
      "organizations_url": "https://api.github.com/users/menghanl/orgs",
      "received_events_url": "https://api.github.com/users/menghanl/received_events",
      "repos_url": "https://api.github.com/users/menghanl/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/menghanl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/menghanl/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/menghanl"
    },
    "assignees": [
      {
        "avatar_url": "https://avatars2.githubusercontent.com/u/960845?v=4",
        "events_url": "https://api.github.com/users/menghanl/events{/privacy}",
        "followers_url": "https://api.github.com/users/menghanl/followers",
        "following_url": "https://api.github.com/users/menghanl/following{/other_user}",
        "gists_url": "https://api.github.com/users/menghanl/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/menghanl",
        "id": 960845,
        "login": "menghanl",
        "node_id": "MDQ6VXNlcjk2MDg0NQ==",
        "organizations_url": "https://api.github.com/users/menghanl/orgs",
        "received_events_url": "https://api.github.com/users/menghanl/received_events",
        "repos_url": "https://api.github.com/users/menghanl/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/menghanl/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/menghanl/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/menghanl"
      }
    ],
    "author_association": "NONE",
    "body": "About some LB ways mentioned in the [md](https://github.com/grpc/grpc/blob/master/doc/load-balancing.md)\r\n\r\n- Proxy Model\r\n- Balancing-aware Client\r\n- External Load Balancing Service\r\n\r\nWhich one has grcp-go implemented already?\r\n\r\nAs I understand, only some parts of balancing feathers are implemented, but not all,Some has implement a full [demo](https://github.com/liyue201/grpc-lb) for Balancing-aware Client using etcd3/consul. And External Load Balancing Service is not yet implemented ? that's right?\r\n\r\nWhat's your plan?\r\n",
    "closed_at": null,
    "comments": 0,
    "comments_url": "https://api.github.com/repos/grpc/grpc-go/issues/3367/comments",
    "created_at": "2020-02-09T02:48:08Z",
    "events_url": "https://api.github.com/repos/grpc/grpc-go/issues/3367/events",
    "html_url": "https://github.com/grpc/grpc-go/issues/3367",
    "id": 562112054,
    "labels": [
      {
        "color": "bfdadc",
        "default": false,
        "description": null,
        "id": 155505037,
        "name": "Type: Question",
        "node_id": "MDU6TGFiZWwxNTU1MDUwMzc=",
        "url": "https://api.github.com/repos/grpc/grpc-go/labels/Type:%20Question"
      }
    ],
    "labels_url": "https://api.github.com/repos/grpc/grpc-go/issues/3367/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1NjIxMTIwNTQ=",
    "number": 3367,
    "repository_url": "https://api.github.com/repos/grpc/grpc-go",
    "state": "open",
    "title": "Questions about grpc load balance",
    "updated_at": "2020-02-20T21:24:18Z",
    "url": "https://api.github.com/repos/grpc/grpc-go/issues/3367",
    "user": {
      "avatar_url": "https://avatars1.githubusercontent.com/u/10411078?v=4",
      "events_url": "https://api.github.com/users/harlanc/events{/privacy}",
      "followers_url": "https://api.github.com/users/harlanc/followers",
      "following_url": "https://api.github.com/users/harlanc/following{/other_user}",
      "gists_url": "https://api.github.com/users/harlanc/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/harlanc",
      "id": 10411078,
      "login": "harlanc",
      "node_id": "MDQ6VXNlcjEwNDExMDc4",
      "organizations_url": "https://api.github.com/users/harlanc/orgs",
      "received_events_url": "https://api.github.com/users/harlanc/received_events",
      "repos_url": "https://api.github.com/users/harlanc/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/harlanc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/harlanc/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/harlanc"
    }
  },
  {
    "assignee": {
      "avatar_url": "https://avatars1.githubusercontent.com/u/26072277?v=4",
      "events_url": "https://api.github.com/users/dfawley/events{/privacy}",
      "followers_url": "https://api.github.com/users/dfawley/followers",
      "following_url": "https://api.github.com/users/dfawley/following{/other_user}",
      "gists_url": "https://api.github.com/users/dfawley/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/dfawley",
      "id": 26072277,
      "login": "dfawley",
      "node_id": "MDQ6VXNlcjI2MDcyMjc3",
      "organizations_url": "https://api.github.com/users/dfawley/orgs",
      "received_events_url": "https://api.github.com/users/dfawley/received_events",
      "repos_url": "https://api.github.com/users/dfawley/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/dfawley/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dfawley/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/dfawley"
    },
    "assignees": [
      {
        "avatar_url": "https://avatars1.githubusercontent.com/u/26072277?v=4",
        "events_url": "https://api.github.com/users/dfawley/events{/privacy}",
        "followers_url": "https://api.github.com/users/dfawley/followers",
        "following_url": "https://api.github.com/users/dfawley/following{/other_user}",
        "gists_url": "https://api.github.com/users/dfawley/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/dfawley",
        "id": 26072277,
        "login": "dfawley",
        "node_id": "MDQ6VXNlcjI2MDcyMjc3",
        "organizations_url": "https://api.github.com/users/dfawley/orgs",
        "received_events_url": "https://api.github.com/users/dfawley/received_events",
        "repos_url": "https://api.github.com/users/dfawley/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/dfawley/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dfawley/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/dfawley"
      }
    ],
    "author_association": "CONTRIBUTOR",
    "body": "Contains enough functionality to start working on the users of this\r\ncache: the LB policy, picker and cache expiry goroutine.",
    "closed_at": null,
    "comments": 1,
    "comments_url": "https://api.github.com/repos/grpc/grpc-go/issues/3359/comments",
    "created_at": "2020-02-04T09:51:17Z",
    "events_url": "https://api.github.com/repos/grpc/grpc-go/issues/3359/events",
    "html_url": "https://github.com/grpc/grpc-go/pull/3359",
    "id": 559603339,
    "labels": [
      {
        "color": "bfdadc",
        "default": false,
        "description": null,
        "id": 586671104,
        "name": "Type: Feature",
        "node_id": "MDU6TGFiZWw1ODY2NzExMDQ=",
        "url": "https://api.github.com/repos/grpc/grpc-go/labels/Type:%20Feature"
      },
      {
        "color": "ffffff",
        "default": false,
        "description": "",
        "id": 983168016,
        "name": "no release notes",
        "node_id": "MDU6TGFiZWw5ODMxNjgwMTY=",
        "url": "https://api.github.com/repos/grpc/grpc-go/labels/no%20release%20notes"
      }
    ],
    "labels_url": "https://api.github.com/repos/grpc/grpc-go/issues/3359/labels{/name}",
    "locked": false,
    "milestone": {
      "closed_at": null,
      "closed_issues": 17,
      "created_at": "2020-01-28T20:38:17Z",
      "creator": {
        "avatar_url": "https://avatars2.githubusercontent.com/u/960845?v=4",
        "events_url": "https://api.github.com/users/menghanl/events{/privacy}",
        "followers_url": "https://api.github.com/users/menghanl/followers",
        "following_url": "https://api.github.com/users/menghanl/following{/other_user}",
        "gists_url": "https://api.github.com/users/menghanl/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/menghanl",
        "id": 960845,
        "login": "menghanl",
        "node_id": "MDQ6VXNlcjk2MDg0NQ==",
        "organizations_url": "https://api.github.com/users/menghanl/orgs",
        "received_events_url": "https://api.github.com/users/menghanl/received_events",
        "repos_url": "https://api.github.com/users/menghanl/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/menghanl/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/menghanl/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/menghanl"
      },
      "description": "",
      "due_on": "2020-03-10T07:00:00Z",
      "html_url": "https://github.com/grpc/grpc-go/milestone/26",
      "id": 5050649,
      "labels_url": "https://api.github.com/repos/grpc/grpc-go/milestones/26/labels",
      "node_id": "MDk6TWlsZXN0b25lNTA1MDY0OQ==",
      "number": 26,
      "open_issues": 6,
      "state": "open",
      "title": "1.28 Release",
      "updated_at": "2020-02-27T21:14:35Z",
      "url": "https://api.github.com/repos/grpc/grpc-go/milestones/26"
    },
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzcwNzQwNTIy",
    "number": 3359,
    "pull_request": {
      "diff_url": "https://github.com/grpc/grpc-go/pull/3359.diff",
      "html_url": "https://github.com/grpc/grpc-go/pull/3359",
      "patch_url": "https://github.com/grpc/grpc-go/pull/3359.patch",
      "url": "https://api.github.com/repos/grpc/grpc-go/pulls/3359"
    },
    "repository_url": "https://api.github.com/repos/grpc/grpc-go",
    "state": "open",
    "title": "rls: Initial implementation of the LRU cache.",
    "updated_at": "2020-02-29T00:15:43Z",
    "url": "https://api.github.com/repos/grpc/grpc-go/issues/3359",
    "user": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/1638487?v=4",
      "events_url": "https://api.github.com/users/easwars/events{/privacy}",
      "followers_url": "https://api.github.com/users/easwars/followers",
      "following_url": "https://api.github.com/users/easwars/following{/other_user}",
      "gists_url": "https://api.github.com/users/easwars/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/easwars",
      "id": 1638487,
      "login": "easwars",
      "node_id": "MDQ6VXNlcjE2Mzg0ODc=",
      "organizations_url": "https://api.github.com/users/easwars/orgs",
      "received_events_url": "https://api.github.com/users/easwars/received_events",
      "repos_url": "https://api.github.com/users/easwars/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/easwars/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/easwars/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/easwars"
    }
  },
  {
    "assignee": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/960845?v=4",
      "events_url": "https://api.github.com/users/menghanl/events{/privacy}",
      "followers_url": "https://api.github.com/users/menghanl/followers",
      "following_url": "https://api.github.com/users/menghanl/following{/other_user}",
      "gists_url": "https://api.github.com/users/menghanl/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/menghanl",
      "id": 960845,
      "login": "menghanl",
      "node_id": "MDQ6VXNlcjk2MDg0NQ==",
      "organizations_url": "https://api.github.com/users/menghanl/orgs",
      "received_events_url": "https://api.github.com/users/menghanl/received_events",
      "repos_url": "https://api.github.com/users/menghanl/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/menghanl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/menghanl/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/menghanl"
    },
    "assignees": [
      {
        "avatar_url": "https://avatars2.githubusercontent.com/u/960845?v=4",
        "events_url": "https://api.github.com/users/menghanl/events{/privacy}",
        "followers_url": "https://api.github.com/users/menghanl/followers",
        "following_url": "https://api.github.com/users/menghanl/following{/other_user}",
        "gists_url": "https://api.github.com/users/menghanl/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/menghanl",
        "id": 960845,
        "login": "menghanl",
        "node_id": "MDQ6VXNlcjk2MDg0NQ==",
        "organizations_url": "https://api.github.com/users/menghanl/orgs",
        "received_events_url": "https://api.github.com/users/menghanl/received_events",
        "repos_url": "https://api.github.com/users/menghanl/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/menghanl/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/menghanl/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/menghanl"
      }
    ],
    "author_association": "CONTRIBUTOR",
    "body": "fixes #3275",
    "closed_at": null,
    "comments": 2,
    "comments_url": "https://api.github.com/repos/grpc/grpc-go/issues/3333/comments",
    "created_at": "2020-01-23T22:32:13Z",
    "events_url": "https://api.github.com/repos/grpc/grpc-go/issues/3333/events",
    "html_url": "https://github.com/grpc/grpc-go/pull/3333",
    "id": 554445692,
    "labels": [
      {
        "color": "bfdadc",
        "default": false,
        "description": null,
        "id": 586671104,
        "name": "Type: Feature",
        "node_id": "MDU6TGFiZWw1ODY2NzExMDQ=",
        "url": "https://api.github.com/repos/grpc/grpc-go/labels/Type:%20Feature"
      },
      {
        "color": "ffffff",
        "default": false,
        "description": "",
        "id": 983168016,
        "name": "no release notes",
        "node_id": "MDU6TGFiZWw5ODMxNjgwMTY=",
        "url": "https://api.github.com/repos/grpc/grpc-go/labels/no%20release%20notes"
      }
    ],
    "labels_url": "https://api.github.com/repos/grpc/grpc-go/issues/3333/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzY2NTk5NDQ2",
    "number": 3333,
    "pull_request": {
      "diff_url": "https://github.com/grpc/grpc-go/pull/3333.diff",
      "html_url": "https://github.com/grpc/grpc-go/pull/3333",
      "patch_url": "https://github.com/grpc/grpc-go/pull/3333.patch",
      "url": "https://api.github.com/repos/grpc/grpc-go/pulls/3333"
    },
    "repository_url": "https://api.github.com/repos/grpc/grpc-go",
    "state": "open",
    "title": "channelz: move TurnOn from service init to service register",
    "updated_at": "2020-02-06T21:12:53Z",
    "url": "https://api.github.com/repos/grpc/grpc-go/issues/3333",
    "user": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/960845?v=4",
      "events_url": "https://api.github.com/users/menghanl/events{/privacy}",
      "followers_url": "https://api.github.com/users/menghanl/followers",
      "following_url": "https://api.github.com/users/menghanl/following{/other_user}",
      "gists_url": "https://api.github.com/users/menghanl/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/menghanl",
      "id": 960845,
      "login": "menghanl",
      "node_id": "MDQ6VXNlcjk2MDg0NQ==",
      "organizations_url": "https://api.github.com/users/menghanl/orgs",
      "received_events_url": "https://api.github.com/users/menghanl/received_events",
      "repos_url": "https://api.github.com/users/menghanl/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/menghanl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/menghanl/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/menghanl"
    }
  },
  {
    "assignee": {
      "avatar_url": "https://avatars1.githubusercontent.com/u/26072277?v=4",
      "events_url": "https://api.github.com/users/dfawley/events{/privacy}",
      "followers_url": "https://api.github.com/users/dfawley/followers",
      "following_url": "https://api.github.com/users/dfawley/following{/other_user}",
      "gists_url": "https://api.github.com/users/dfawley/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/dfawley",
      "id": 26072277,
      "login": "dfawley",
      "node_id": "MDQ6VXNlcjI2MDcyMjc3",
      "organizations_url": "https://api.github.com/users/dfawley/orgs",
      "received_events_url": "https://api.github.com/users/dfawley/received_events",
      "repos_url": "https://api.github.com/users/dfawley/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/dfawley/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dfawley/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/dfawley"
    },
    "assignees": [
      {
        "avatar_url": "https://avatars1.githubusercontent.com/u/26072277?v=4",
        "events_url": "https://api.github.com/users/dfawley/events{/privacy}",
        "followers_url": "https://api.github.com/users/dfawley/followers",
        "following_url": "https://api.github.com/users/dfawley/following{/other_user}",
        "gists_url": "https://api.github.com/users/dfawley/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/dfawley",
        "id": 26072277,
        "login": "dfawley",
        "node_id": "MDQ6VXNlcjI2MDcyMjc3",
        "organizations_url": "https://api.github.com/users/dfawley/orgs",
        "received_events_url": "https://api.github.com/users/dfawley/received_events",
        "repos_url": "https://api.github.com/users/dfawley/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/dfawley/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dfawley/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/dfawley"
      }
    ],
    "author_association": "NONE",
    "body": "### Use case(s) - what problem will this feature solve?\r\nWe want to perform different telemetry actions (logging, metrics) depending on whether the error was generated by the client or the server.\r\n\r\n### Proposed Solution\r\nOff the top of my head, add a function in `status` that returns different values based on whether the client or server generated the error, e.g. `status.IsClientError(err)` or `status.ErrorSource(err)` or anything else that we can use to distinguish the source of the error.\r\n\r\nThis is basically the same as #319 that was closed without resolution.\r\n\r\n### Alternatives Considered\r\nForcing all servers to include a well-known detail message in all responses. It's pretty impractical to enforce.\r\n\r\n### Additional Context\r\nIn #319 it looks like the argument was along the lines of \"only Unknown can be returned by the client, and you should not return Unknown from the server\". unfortunately this appear to be incorrect, since https://github.com/grpc/grpc/blob/master/doc/statuscodes.md has a big list of examples showing that almost all status codes (Unknown included) can be returned by both client and server for good reasons.\r\n\r\nit would be ideal to further differentiate between errors returned by the server-library and server-application, but this may be done later.",
    "closed_at": null,
    "comments": 3,
    "comments_url": "https://api.github.com/repos/grpc/grpc-go/issues/3328/comments",
    "created_at": "2020-01-20T08:58:25Z",
    "events_url": "https://api.github.com/repos/grpc/grpc-go/issues/3328/events",
    "html_url": "https://github.com/grpc/grpc-go/issues/3328",
    "id": 552159011,
    "labels": [
      {
        "color": "bfdadc",
        "default": false,
        "description": null,
        "id": 586671104,
        "name": "Type: Feature",
        "node_id": "MDU6TGFiZWw1ODY2NzExMDQ=",
        "url": "https://api.github.com/repos/grpc/grpc-go/labels/Type:%20Feature"
      }
    ],
    "labels_url": "https://api.github.com/repos/grpc/grpc-go/issues/3328/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1NTIxNTkwMTE=",
    "number": 3328,
    "repository_url": "https://api.github.com/repos/grpc/grpc-go",
    "state": "open",
    "title": "Add a way to differentiate between server-returned and client-generated errors",
    "updated_at": "2020-01-31T01:18:38Z",
    "url": "https://api.github.com/repos/grpc/grpc-go/issues/3328",
    "user": {
      "avatar_url": "https://avatars0.githubusercontent.com/u/408018?v=4",
      "events_url": "https://api.github.com/users/CAFxX/events{/privacy}",
      "followers_url": "https://api.github.com/users/CAFxX/followers",
      "following_url": "https://api.github.com/users/CAFxX/following{/other_user}",
      "gists_url": "https://api.github.com/users/CAFxX/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/CAFxX",
      "id": 408018,
      "login": "CAFxX",
      "node_id": "MDQ6VXNlcjQwODAxOA==",
      "organizations_url": "https://api.github.com/users/CAFxX/orgs",
      "received_events_url": "https://api.github.com/users/CAFxX/received_events",
      "repos_url": "https://api.github.com/users/CAFxX/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/CAFxX/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CAFxX/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/CAFxX"
    }
  },
  {
    "assignee": {
      "avatar_url": "https://avatars1.githubusercontent.com/u/26072277?v=4",
      "events_url": "https://api.github.com/users/dfawley/events{/privacy}",
      "followers_url": "https://api.github.com/users/dfawley/followers",
      "following_url": "https://api.github.com/users/dfawley/following{/other_user}",
      "gists_url": "https://api.github.com/users/dfawley/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/dfawley",
      "id": 26072277,
      "login": "dfawley",
      "node_id": "MDQ6VXNlcjI2MDcyMjc3",
      "organizations_url": "https://api.github.com/users/dfawley/orgs",
      "received_events_url": "https://api.github.com/users/dfawley/received_events",
      "repos_url": "https://api.github.com/users/dfawley/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/dfawley/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dfawley/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/dfawley"
    },
    "assignees": [
      {
        "avatar_url": "https://avatars1.githubusercontent.com/u/26072277?v=4",
        "events_url": "https://api.github.com/users/dfawley/events{/privacy}",
        "followers_url": "https://api.github.com/users/dfawley/followers",
        "following_url": "https://api.github.com/users/dfawley/following{/other_user}",
        "gists_url": "https://api.github.com/users/dfawley/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/dfawley",
        "id": 26072277,
        "login": "dfawley",
        "node_id": "MDQ6VXNlcjI2MDcyMjc3",
        "organizations_url": "https://api.github.com/users/dfawley/orgs",
        "received_events_url": "https://api.github.com/users/dfawley/received_events",
        "repos_url": "https://api.github.com/users/dfawley/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/dfawley/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dfawley/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/dfawley"
      }
    ],
    "author_association": "CONTRIBUTOR",
    "body": "",
    "closed_at": null,
    "comments": 1,
    "comments_url": "https://api.github.com/repos/grpc/grpc-go/issues/3314/comments",
    "created_at": "2020-01-13T17:52:49Z",
    "events_url": "https://api.github.com/repos/grpc/grpc-go/issues/3314/events",
    "html_url": "https://github.com/grpc/grpc-go/pull/3314",
    "id": 549087890,
    "labels": [
      {
        "color": "fbca04",
        "default": false,
        "description": null,
        "id": 716941268,
        "name": "Status: Blocked",
        "node_id": "MDU6TGFiZWw3MTY5NDEyNjg=",
        "url": "https://api.github.com/repos/grpc/grpc-go/labels/Status:%20Blocked"
      },
      {
        "color": "bfdadc",
        "default": false,
        "description": null,
        "id": 299649128,
        "name": "Type: API Change",
        "node_id": "MDU6TGFiZWwyOTk2NDkxMjg=",
        "url": "https://api.github.com/repos/grpc/grpc-go/labels/Type:%20API%20Change"
      }
    ],
    "labels_url": "https://api.github.com/repos/grpc/grpc-go/issues/3314/labels{/name}",
    "locked": false,
    "milestone": {
      "closed_at": null,
      "closed_issues": 17,
      "created_at": "2020-01-28T20:38:17Z",
      "creator": {
        "avatar_url": "https://avatars2.githubusercontent.com/u/960845?v=4",
        "events_url": "https://api.github.com/users/menghanl/events{/privacy}",
        "followers_url": "https://api.github.com/users/menghanl/followers",
        "following_url": "https://api.github.com/users/menghanl/following{/other_user}",
        "gists_url": "https://api.github.com/users/menghanl/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/menghanl",
        "id": 960845,
        "login": "menghanl",
        "node_id": "MDQ6VXNlcjk2MDg0NQ==",
        "organizations_url": "https://api.github.com/users/menghanl/orgs",
        "received_events_url": "https://api.github.com/users/menghanl/received_events",
        "repos_url": "https://api.github.com/users/menghanl/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/menghanl/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/menghanl/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/menghanl"
      },
      "description": "",
      "due_on": "2020-03-10T07:00:00Z",
      "html_url": "https://github.com/grpc/grpc-go/milestone/26",
      "id": 5050649,
      "labels_url": "https://api.github.com/repos/grpc/grpc-go/milestones/26/labels",
      "node_id": "MDk6TWlsZXN0b25lNTA1MDY0OQ==",
      "number": 26,
      "open_issues": 6,
      "state": "open",
      "title": "1.28 Release",
      "updated_at": "2020-02-27T21:14:35Z",
      "url": "https://api.github.com/repos/grpc/grpc-go/milestones/26"
    },
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzYyMjQ1MDQw",
    "number": 3314,
    "pull_request": {
      "diff_url": "https://github.com/grpc/grpc-go/pull/3314.diff",
      "html_url": "https://github.com/grpc/grpc-go/pull/3314",
      "patch_url": "https://github.com/grpc/grpc-go/pull/3314.patch",
      "url": "https://api.github.com/repos/grpc/grpc-go/pulls/3314"
    },
    "repository_url": "https://api.github.com/repos/grpc/grpc-go",
    "state": "open",
    "title": "naming: remove unreferenced, deprecated package",
    "updated_at": "2020-01-30T18:20:37Z",
    "url": "https://api.github.com/repos/grpc/grpc-go/issues/3314",
    "user": {
      "avatar_url": "https://avatars1.githubusercontent.com/u/26072277?v=4",
      "events_url": "https://api.github.com/users/dfawley/events{/privacy}",
      "followers_url": "https://api.github.com/users/dfawley/followers",
      "following_url": "https://api.github.com/users/dfawley/following{/other_user}",
      "gists_url": "https://api.github.com/users/dfawley/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/dfawley",
      "id": 26072277,
      "login": "dfawley",
      "node_id": "MDQ6VXNlcjI2MDcyMjc3",
      "organizations_url": "https://api.github.com/users/dfawley/orgs",
      "received_events_url": "https://api.github.com/users/dfawley/received_events",
      "repos_url": "https://api.github.com/users/dfawley/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/dfawley/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dfawley/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/dfawley"
    }
  },
  {
    "assignee": {
      "avatar_url": "https://avatars1.githubusercontent.com/u/26072277?v=4",
      "events_url": "https://api.github.com/users/dfawley/events{/privacy}",
      "followers_url": "https://api.github.com/users/dfawley/followers",
      "following_url": "https://api.github.com/users/dfawley/following{/other_user}",
      "gists_url": "https://api.github.com/users/dfawley/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/dfawley",
      "id": 26072277,
      "login": "dfawley",
      "node_id": "MDQ6VXNlcjI2MDcyMjc3",
      "organizations_url": "https://api.github.com/users/dfawley/orgs",
      "received_events_url": "https://api.github.com/users/dfawley/received_events",
      "repos_url": "https://api.github.com/users/dfawley/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/dfawley/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dfawley/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/dfawley"
    },
    "assignees": [
      {
        "avatar_url": "https://avatars1.githubusercontent.com/u/26072277?v=4",
        "events_url": "https://api.github.com/users/dfawley/events{/privacy}",
        "followers_url": "https://api.github.com/users/dfawley/followers",
        "following_url": "https://api.github.com/users/dfawley/following{/other_user}",
        "gists_url": "https://api.github.com/users/dfawley/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/dfawley",
        "id": 26072277,
        "login": "dfawley",
        "node_id": "MDQ6VXNlcjI2MDcyMjc3",
        "organizations_url": "https://api.github.com/users/dfawley/orgs",
        "received_events_url": "https://api.github.com/users/dfawley/received_events",
        "repos_url": "https://api.github.com/users/dfawley/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/dfawley/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dfawley/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/dfawley"
      }
    ],
    "author_association": "CONTRIBUTOR",
    "body": "Remove decodeState from http_client, and decode the header fields within the client. \r\n\r\nThis will fix half of #1457. I can submit a second PR to remove decodeState from http_server, or if it's preferred I can fold it into this PR too.",
    "closed_at": null,
    "comments": 0,
    "comments_url": "https://api.github.com/repos/grpc/grpc-go/issues/3313/comments",
    "created_at": "2020-01-12T02:59:53Z",
    "events_url": "https://api.github.com/repos/grpc/grpc-go/issues/3313/events",
    "html_url": "https://github.com/grpc/grpc-go/pull/3313",
    "id": 548513737,
    "labels": [
      {
        "color": "bfdadc",
        "default": false,
        "description": null,
        "id": 687192383,
        "name": "Type: Internal Cleanup",
        "node_id": "MDU6TGFiZWw2ODcxOTIzODM=",
        "url": "https://api.github.com/repos/grpc/grpc-go/labels/Type:%20Internal%20Cleanup"
      },
      {
        "color": "ffffff",
        "default": false,
        "description": "",
        "id": 983168016,
        "name": "no release notes",
        "node_id": "MDU6TGFiZWw5ODMxNjgwMTY=",
        "url": "https://api.github.com/repos/grpc/grpc-go/labels/no%20release%20notes"
      }
    ],
    "labels_url": "https://api.github.com/repos/grpc/grpc-go/issues/3313/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzYxNzg5MDY4",
    "number": 3313,
    "pull_request": {
      "diff_url": "https://github.com/grpc/grpc-go/pull/3313.diff",
      "html_url": "https://github.com/grpc/grpc-go/pull/3313",
      "patch_url": "https://github.com/grpc/grpc-go/pull/3313.patch",
      "url": "https://api.github.com/repos/grpc/grpc-go/pulls/3313"
    },
    "repository_url": "https://api.github.com/repos/grpc/grpc-go",
    "state": "open",
    "title": "transport: remove decodeState from http_client",
    "updated_at": "2020-02-27T21:09:59Z",
    "url": "https://api.github.com/repos/grpc/grpc-go/issues/3313",
    "user": {
      "avatar_url": "https://avatars0.githubusercontent.com/u/9123431?v=4",
      "events_url": "https://api.github.com/users/JNProtzman/events{/privacy}",
      "followers_url": "https://api.github.com/users/JNProtzman/followers",
      "following_url": "https://api.github.com/users/JNProtzman/following{/other_user}",
      "gists_url": "https://api.github.com/users/JNProtzman/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/JNProtzman",
      "id": 9123431,
      "login": "JNProtzman",
      "node_id": "MDQ6VXNlcjkxMjM0MzE=",
      "organizations_url": "https://api.github.com/users/JNProtzman/orgs",
      "received_events_url": "https://api.github.com/users/JNProtzman/received_events",
      "repos_url": "https://api.github.com/users/JNProtzman/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/JNProtzman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JNProtzman/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/JNProtzman"
    }
  },
  {
    "assignee": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/960845?v=4",
      "events_url": "https://api.github.com/users/menghanl/events{/privacy}",
      "followers_url": "https://api.github.com/users/menghanl/followers",
      "following_url": "https://api.github.com/users/menghanl/following{/other_user}",
      "gists_url": "https://api.github.com/users/menghanl/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/menghanl",
      "id": 960845,
      "login": "menghanl",
      "node_id": "MDQ6VXNlcjk2MDg0NQ==",
      "organizations_url": "https://api.github.com/users/menghanl/orgs",
      "received_events_url": "https://api.github.com/users/menghanl/received_events",
      "repos_url": "https://api.github.com/users/menghanl/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/menghanl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/menghanl/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/menghanl"
    },
    "assignees": [
      {
        "avatar_url": "https://avatars2.githubusercontent.com/u/960845?v=4",
        "events_url": "https://api.github.com/users/menghanl/events{/privacy}",
        "followers_url": "https://api.github.com/users/menghanl/followers",
        "following_url": "https://api.github.com/users/menghanl/following{/other_user}",
        "gists_url": "https://api.github.com/users/menghanl/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/menghanl",
        "id": 960845,
        "login": "menghanl",
        "node_id": "MDQ6VXNlcjk2MDg0NQ==",
        "organizations_url": "https://api.github.com/users/menghanl/orgs",
        "received_events_url": "https://api.github.com/users/menghanl/received_events",
        "repos_url": "https://api.github.com/users/menghanl/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/menghanl/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/menghanl/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/menghanl"
      },
      {
        "avatar_url": "https://avatars1.githubusercontent.com/u/26072277?v=4",
        "events_url": "https://api.github.com/users/dfawley/events{/privacy}",
        "followers_url": "https://api.github.com/users/dfawley/followers",
        "following_url": "https://api.github.com/users/dfawley/following{/other_user}",
        "gists_url": "https://api.github.com/users/dfawley/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/dfawley",
        "id": 26072277,
        "login": "dfawley",
        "node_id": "MDQ6VXNlcjI2MDcyMjc3",
        "organizations_url": "https://api.github.com/users/dfawley/orgs",
        "received_events_url": "https://api.github.com/users/dfawley/received_events",
        "repos_url": "https://api.github.com/users/dfawley/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/dfawley/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dfawley/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/dfawley"
      }
    ],
    "author_association": "CONTRIBUTOR",
    "body": "A data race during proto marshal. Could be related to the buffer reuse.\r\n\r\n<details><summary>Full log</summary>\r\n\r\n```\r\n==================\r\nWARNING: DATA RACE\r\nWrite at 0x00c001ee6ff8 by goroutine 218:\r\n  runtime.slicecopy()\r\n      /home/travis/.gimme/versions/go1.13.6.linux.amd64/src/runtime/slice.go:197 +0x0\r\n  github.com/golang/protobuf/proto.appendBytes3()\r\n      /home/travis/go/pkg/mod/github.com/golang/protobuf@v1.3.2/proto/table_marshal.go:2136 +0x14f\r\n  github.com/golang/protobuf/proto.(*marshalInfo).marshal()\r\n      /home/travis/go/pkg/mod/github.com/golang/protobuf@v1.3.2/proto/table_marshal.go:270 +0x575\r\n  github.com/golang/protobuf/proto.makeMessageMarshaler.func2()\r\n      /home/travis/go/pkg/mod/github.com/golang/protobuf@v1.3.2/proto/table_marshal.go:2234 +0x173\r\n  github.com/golang/protobuf/proto.(*marshalInfo).marshal()\r\n      /home/travis/go/pkg/mod/github.com/golang/protobuf@v1.3.2/proto/table_marshal.go:270 +0x575\r\n  github.com/golang/protobuf/proto.(*InternalMessageInfo).Marshal()\r\n      /home/travis/go/pkg/mod/github.com/golang/protobuf@v1.3.2/proto/table_marshal.go:141 +0xcb\r\n  google.golang.org/grpc/test/grpc_testing.(*SimpleResponse).XXX_Marshal()\r\n      /home/travis/gopath/src/google.golang.org/grpc/test/grpc_testing/test.pb.go:244 +0x9b\r\n  github.com/golang/protobuf/proto.(*Buffer).Marshal()\r\n      /home/travis/go/pkg/mod/github.com/golang/protobuf@v1.3.2/proto/table_marshal.go:2742 +0x190\r\n  google.golang.org/grpc/encoding/proto.marshal()\r\n      /home/travis/gopath/src/google.golang.org/grpc/encoding/proto/proto.go:46 +0x1b5\r\n  google.golang.org/grpc/encoding/proto.codec.Marshal()\r\n      /home/travis/gopath/src/google.golang.org/grpc/encoding/proto/proto.go:60 +0xde\r\n  google.golang.org/grpc/encoding/proto.(*codec).Marshal()\r\n      <autogenerated>:1 +0x62\r\n  google.golang.org/grpc.encode()\r\n      /home/travis/gopath/src/google.golang.org/grpc/rpc_util.go:543 +0x6e\r\n  google.golang.org/grpc.(*Server).sendResponse()\r\n      /home/travis/gopath/src/google.golang.org/grpc/server.go:846 +0x192\r\n  google.golang.org/grpc.(*Server).processUnaryRPC()\r\n      /home/travis/gopath/src/google.golang.org/grpc/server.go:1070 +0xad6\r\n  google.golang.org/grpc.(*Server).handleStream()\r\n      /home/travis/gopath/src/google.golang.org/grpc/server.go:1331 +0x1343\r\n  google.golang.org/grpc.(*Server).serveStreams.func1.1()\r\n      /home/travis/gopath/src/google.golang.org/grpc/server.go:722 +0xc8\r\nPrevious read at 0x00c001ee6fff by goroutine 437:\r\n  runtime.slicecopy()\r\n      /home/travis/.gimme/versions/go1.13.6.linux.amd64/src/runtime/slice.go:197 +0x0\r\n  golang.org/x/net/http2.(*Framer).WriteDataPadded()\r\n      /home/travis/go/pkg/mod/golang.org/x/net@v0.0.0-20190311183353-d8887717615a/http2/frame.go:683 +0x34d\r\n  golang.org/x/net/http2.(*writeData).writeFrame()\r\n      /home/travis/go/pkg/mod/golang.org/x/net@v0.0.0-20190311183353-d8887717615a/http2/frame.go:643 +0x11d\r\n  golang.org/x/net/http2.(*serverConn).writeFrameAsync()\r\n      /home/travis/go/pkg/mod/golang.org/x/net@v0.0.0-20190311183353-d8887717615a/http2/server.go:741 +0x58\r\nGoroutine 218 (running) created at:\r\n  google.golang.org/grpc.(*Server).serveStreams.func1()\r\n      /home/travis/gopath/src/google.golang.org/grpc/server.go:720 +0xb8\r\n  google.golang.org/grpc/internal/transport.(*http2Server).operateHeaders()\r\n      /home/travis/gopath/src/google.golang.org/grpc/internal/transport/http2_server.go:447 +0x16a6\r\n  google.golang.org/grpc/internal/transport.(*http2Server).HandleStreams()\r\n      /home/travis/gopath/src/google.golang.org/grpc/internal/transport/http2_server.go:488 +0x459\r\n  google.golang.org/grpc.(*Server).serveStreams()\r\n      /home/travis/gopath/src/google.golang.org/grpc/server.go:718 +0x19a\r\n  google.golang.org/grpc.(*Server).handleRawConn.func1()\r\n      /home/travis/gopath/src/google.golang.org/grpc/server.go:679 +0x4c\r\nGoroutine 437 (finished) created at:\r\n  golang.org/x/net/http2.(*serverConn).startFrameWrite()\r\n      /home/travis/go/pkg/mod/golang.org/x/net@v0.0.0-20190311183353-d8887717615a/http2/server.go:1119 +0x365\r\n  golang.org/x/net/http2.(*serverConn).scheduleFrameWrite()\r\n      /home/travis/go/pkg/mod/golang.org/x/net@v0.0.0-20190311183353-d8887717615a/http2/server.go:1220 +0x371\r\n  golang.org/x/net/http2.(*serverConn).wroteFrame()\r\n      /home/travis/go/pkg/mod/golang.org/x/net@v0.0.0-20190311183353-d8887717615a/http2/server.go:1181 +0x1dd\r\n  golang.org/x/net/http2.(*serverConn).serve()\r\n      /home/travis/go/pkg/mod/golang.org/x/net@v0.0.0-20190311183353-d8887717615a/http2/server.go:834 +0x13ce\r\n  golang.org/x/net/http2.(*Server).ServeConn()\r\n      /home/travis/go/pkg/mod/golang.org/x/net@v0.0.0-20190311183353-d8887717615a/http2/server.go:438 +0xd9d\r\n  golang.org/x/net/http2.ConfigureServer.func1()\r\n      /home/travis/go/pkg/mod/golang.org/x/net@v0.0.0-20190311183353-d8887717615a/http2/server.go:276 +0xb8\r\n  net/http.(*conn).serve()\r\n      /home/travis/.gimme/versions/go1.13.6.linux.amd64/src/net/http/server.go:1800 +0x1d35\r\n==================\r\nE0109 23:39:41.561162    7528 http2_server.go:856] transport: failed to marshal rpc status: code:13 message:\"\\377\\376\\375\" details:<type_url:\"type.googleapis.com/grpc.testing.Empty\" > , error: proto: field \"google.rpc.Status.Message\" contains invalid UTF-8\r\n--- FAIL: Test (99.99s)\r\n    --- FAIL: Test/MaxMsgSizeClientDefault (0.67s)\r\n        end2end_test.go:595: Running test in tcp-clear-v1-balancer environment...\r\n        end2end_test.go:595: Running test in tcp-tls-v1-balancer environment...\r\n        end2end_test.go:595: Running test in tcp-clear environment...\r\n        end2end_test.go:595: Running test in tcp-tls environment...\r\n        end2end_test.go:595: Running test in handler-tls environment...\r\n        end2end_test.go:595: Running test in no-balancer environment...\r\n        testing.go:853: race detected during execution of test\r\n    testing.go:853: race detected during execution of test\r\n```\r\n\r\n</details>",
    "closed_at": null,
    "comments": 2,
    "comments_url": "https://api.github.com/repos/grpc/grpc-go/issues/3307/comments",
    "created_at": "2020-01-10T01:39:35Z",
    "events_url": "https://api.github.com/repos/grpc/grpc-go/issues/3307/events",
    "html_url": "https://github.com/grpc/grpc-go/issues/3307",
    "id": 547816774,
    "labels": [
      {
        "color": "C25555",
        "default": false,
        "description": null,
        "id": 528927631,
        "name": "P1",
        "node_id": "MDU6TGFiZWw1Mjg5Mjc2MzE=",
        "url": "https://api.github.com/repos/grpc/grpc-go/labels/P1"
      },
      {
        "color": "bfdadc",
        "default": false,
        "description": null,
        "id": 586671344,
        "name": "Type: Bug",
        "node_id": "MDU6TGFiZWw1ODY2NzEzNDQ=",
        "url": "https://api.github.com/repos/grpc/grpc-go/labels/Type:%20Bug"
      }
    ],
    "labels_url": "https://api.github.com/repos/grpc/grpc-go/issues/3307/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1NDc4MTY3NzQ=",
    "number": 3307,
    "repository_url": "https://api.github.com/repos/grpc/grpc-go",
    "state": "open",
    "title": "Data race due to outgoing buffer reuse",
    "updated_at": "2020-02-20T21:28:38Z",
    "url": "https://api.github.com/repos/grpc/grpc-go/issues/3307",
    "user": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/960845?v=4",
      "events_url": "https://api.github.com/users/menghanl/events{/privacy}",
      "followers_url": "https://api.github.com/users/menghanl/followers",
      "following_url": "https://api.github.com/users/menghanl/following{/other_user}",
      "gists_url": "https://api.github.com/users/menghanl/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/menghanl",
      "id": 960845,
      "login": "menghanl",
      "node_id": "MDQ6VXNlcjk2MDg0NQ==",
      "organizations_url": "https://api.github.com/users/menghanl/orgs",
      "received_events_url": "https://api.github.com/users/menghanl/received_events",
      "repos_url": "https://api.github.com/users/menghanl/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/menghanl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/menghanl/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/menghanl"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "I have a production go-grpc server workload that does near-zero heap allocation in the request handler. As I dial up qps, p99 client response times line up with gc duration on the server. The alloc_space profile largely points to http2 meta frame parsing as well as http2Server.operateHeaders() and it's descendants.\r\n```\r\nFetching profile over HTTP from http://localhost:8081/debug/pprof/heap                                                 \r\nSaved profile in /home/cy/pprof/pprof.quota_server.alloc_objects.alloc_space.inuse_objects.inuse_space.021.pb.gz       \r\nFile: quota_server                                         \r\nType: alloc_space                                          \r\nTime: Jan 9, 2020 at 12:13pm (PST)                         \r\nEntering interactive mode (type \"help\" for commands, \"o\" for options)                                                  \r\n(pprof) web                                                \r\n(pprof) top                                                \r\nShowing nodes accounting for 25.35TB, 68.83% of 36.83TB total                                                          \r\nDropped 408 nodes (cum <= 0.18TB)                          \r\nShowing top 10 nodes out of 68                             \r\n      flat  flat%   sum%        cum   cum%                 \r\n    8.95TB 24.30% 24.30%     8.95TB 24.30%  golang.org/x/net/http2.(*Framer).readMetaFrame.func1                       \r\n    3.90TB 10.59% 34.90%    12.73TB 34.58%  google.golang.org/grpc/internal/transport.(*http2Server).operateHeaders    \r\n    3.33TB  9.04% 43.93%     3.33TB  9.04%  google.golang.org/grpc/internal/transport.(*decodeState).addMetadata       \r\n    2.06TB  5.58% 49.51%     2.06TB  5.58%  google.golang.org/grpc/internal/transport.(*itemList).enqueue              \r\n    1.38TB  3.74% 53.25%     1.38TB  3.74%  google.golang.org/grpc/internal/transport.newRecvBuffer                    \r\n    1.26TB  3.43% 56.68%     1.49TB  4.05%  google.golang.org/grpc/internal/transport.(*http2Server).writeHeaderLocked \r\n    1.26TB  3.43% 60.11%     1.95TB  5.30%  google.golang.org/grpc/internal/transport.(*http2Server).WriteStatus       \r\n    1.15TB  3.11% 63.22%     4.24TB 11.52%  slack/gen-src/proto_idl/quotaservice._Quota_Ratelimit_Handler              \r\n    1.03TB  2.80% 66.03%     1.03TB  2.80%  context.WithValue                                                          \r\n    1.03TB  2.80% 68.83%     1.03TB  2.80%  google.golang.org/grpc/internal/transport.newWriteQuota  \r\n```\r\nAlso see attached image. This could likely be reproduced by writing a 'trivial' server implementation and sending a high request rate to it. Happy to provide more debug info.\r\n\r\n![pprof-heap-alloc-space-grpc-server](https://user-images.githubusercontent.com/1189895/72104700-df619980-32e0-11ea-8aca-6cb3ac9eabf1.jpg)\r\n\r\n",
    "closed_at": null,
    "comments": 2,
    "comments_url": "https://api.github.com/repos/grpc/grpc-go/issues/3305/comments",
    "created_at": "2020-01-09T21:06:56Z",
    "events_url": "https://api.github.com/repos/grpc/grpc-go/issues/3305/events",
    "html_url": "https://github.com/grpc/grpc-go/issues/3305",
    "id": 547723399,
    "labels": [
      {
        "color": "61380B",
        "default": false,
        "description": null,
        "id": 675961835,
        "name": "P3",
        "node_id": "MDU6TGFiZWw2NzU5NjE4MzU=",
        "url": "https://api.github.com/repos/grpc/grpc-go/labels/P3"
      },
      {
        "color": "fbca04",
        "default": false,
        "description": null,
        "id": 716941268,
        "name": "Status: Blocked",
        "node_id": "MDU6TGFiZWw3MTY5NDEyNjg=",
        "url": "https://api.github.com/repos/grpc/grpc-go/labels/Status:%20Blocked"
      },
      {
        "color": "bfdadc",
        "default": false,
        "description": null,
        "id": 586671437,
        "name": "Type: Performance",
        "node_id": "MDU6TGFiZWw1ODY2NzE0Mzc=",
        "url": "https://api.github.com/repos/grpc/grpc-go/labels/Type:%20Performance"
      }
    ],
    "labels_url": "https://api.github.com/repos/grpc/grpc-go/issues/3305/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1NDc3MjMzOTk=",
    "number": 3305,
    "repository_url": "https://api.github.com/repos/grpc/grpc-go",
    "state": "open",
    "title": "transport: reduce garbage allocations in server path",
    "updated_at": "2020-01-23T21:29:40Z",
    "url": "https://api.github.com/repos/grpc/grpc-go/issues/3305",
    "user": {
      "avatar_url": "https://avatars1.githubusercontent.com/u/1189895?v=4",
      "events_url": "https://api.github.com/users/y3llowcake/events{/privacy}",
      "followers_url": "https://api.github.com/users/y3llowcake/followers",
      "following_url": "https://api.github.com/users/y3llowcake/following{/other_user}",
      "gists_url": "https://api.github.com/users/y3llowcake/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/y3llowcake",
      "id": 1189895,
      "login": "y3llowcake",
      "node_id": "MDQ6VXNlcjExODk4OTU=",
      "organizations_url": "https://api.github.com/users/y3llowcake/orgs",
      "received_events_url": "https://api.github.com/users/y3llowcake/received_events",
      "repos_url": "https://api.github.com/users/y3llowcake/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/y3llowcake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/y3llowcake/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/y3llowcake"
    }
  },
  {
    "assignee": {
      "avatar_url": "https://avatars0.githubusercontent.com/u/9123431?v=4",
      "events_url": "https://api.github.com/users/JNProtzman/events{/privacy}",
      "followers_url": "https://api.github.com/users/JNProtzman/followers",
      "following_url": "https://api.github.com/users/JNProtzman/following{/other_user}",
      "gists_url": "https://api.github.com/users/JNProtzman/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/JNProtzman",
      "id": 9123431,
      "login": "JNProtzman",
      "node_id": "MDQ6VXNlcjkxMjM0MzE=",
      "organizations_url": "https://api.github.com/users/JNProtzman/orgs",
      "received_events_url": "https://api.github.com/users/JNProtzman/received_events",
      "repos_url": "https://api.github.com/users/JNProtzman/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/JNProtzman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JNProtzman/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/JNProtzman"
    },
    "assignees": [
      {
        "avatar_url": "https://avatars0.githubusercontent.com/u/9123431?v=4",
        "events_url": "https://api.github.com/users/JNProtzman/events{/privacy}",
        "followers_url": "https://api.github.com/users/JNProtzman/followers",
        "following_url": "https://api.github.com/users/JNProtzman/following{/other_user}",
        "gists_url": "https://api.github.com/users/JNProtzman/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/JNProtzman",
        "id": 9123431,
        "login": "JNProtzman",
        "node_id": "MDQ6VXNlcjkxMjM0MzE=",
        "organizations_url": "https://api.github.com/users/JNProtzman/orgs",
        "received_events_url": "https://api.github.com/users/JNProtzman/received_events",
        "repos_url": "https://api.github.com/users/JNProtzman/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/JNProtzman/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/JNProtzman/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/JNProtzman"
      }
    ],
    "author_association": "CONTRIBUTOR",
    "body": "This type would be useful for internal use in other package.  E.g. in #3301, `balancer.dropRPCError` could embed this instead of `error` + implementing `GRPCStatus`.",
    "closed_at": null,
    "comments": 8,
    "comments_url": "https://api.github.com/repos/grpc/grpc-go/issues/3304/comments",
    "created_at": "2020-01-09T19:13:13Z",
    "events_url": "https://api.github.com/repos/grpc/grpc-go/issues/3304/events",
    "html_url": "https://github.com/grpc/grpc-go/issues/3304",
    "id": 547667232,
    "labels": [
      {
        "color": "610B0B",
        "default": false,
        "description": null,
        "id": 528927681,
        "name": "P2",
        "node_id": "MDU6TGFiZWw1Mjg5Mjc2ODE=",
        "url": "https://api.github.com/repos/grpc/grpc-go/labels/P2"
      },
      {
        "color": "bfdadc",
        "default": false,
        "description": null,
        "id": 687192383,
        "name": "Type: Internal Cleanup",
        "node_id": "MDU6TGFiZWw2ODcxOTIzODM=",
        "url": "https://api.github.com/repos/grpc/grpc-go/labels/Type:%20Internal%20Cleanup"
      },
      {
        "color": "ecef4c",
        "default": false,
        "description": "",
        "id": 1336038010,
        "name": "fixit",
        "node_id": "MDU6TGFiZWwxMzM2MDM4MDEw",
        "url": "https://api.github.com/repos/grpc/grpc-go/labels/fixit"
      }
    ],
    "labels_url": "https://api.github.com/repos/grpc/grpc-go/issues/3304/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1NDc2NjcyMzI=",
    "number": 3304,
    "repository_url": "https://api.github.com/repos/grpc/grpc-go",
    "state": "open",
    "title": "Move status.statusError to internal and export",
    "updated_at": "2020-02-04T17:37:42Z",
    "url": "https://api.github.com/repos/grpc/grpc-go/issues/3304",
    "user": {
      "avatar_url": "https://avatars1.githubusercontent.com/u/26072277?v=4",
      "events_url": "https://api.github.com/users/dfawley/events{/privacy}",
      "followers_url": "https://api.github.com/users/dfawley/followers",
      "following_url": "https://api.github.com/users/dfawley/following{/other_user}",
      "gists_url": "https://api.github.com/users/dfawley/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/dfawley",
      "id": 26072277,
      "login": "dfawley",
      "node_id": "MDQ6VXNlcjI2MDcyMjc3",
      "organizations_url": "https://api.github.com/users/dfawley/orgs",
      "received_events_url": "https://api.github.com/users/dfawley/received_events",
      "repos_url": "https://api.github.com/users/dfawley/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/dfawley/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dfawley/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/dfawley"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Hello,\r\n\r\nI found recently that grpc-go was working on an xds implementation for service discovery, which is great.\r\n\r\nUsing current HEAD, I tried to get both resolver and balancer working. I managed to get something more or less working for resolver by reversing code & tests [code on Gist](https://gist.github.com/Stoakes/1f525fbc12d54703cfec08f526e0d1a6) but as for balancer, I didn't.\r\n\r\nI understand this is a quite new topic, but more documentation details or examples would help. My current blocking points are how can I configure cds or eds balancer (including how to provide xds server url and lb policy) and once  Balancer is built how to use it with `grpc.Dial` (I didn't find much details about how to use balancer v2 API).\r\n\r\nIf I get both working and if the team sees any value in it, I would be happy to contribute a new example for xds.\r\n\r\nThanks",
    "closed_at": null,
    "comments": 5,
    "comments_url": "https://api.github.com/repos/grpc/grpc-go/issues/3286/comments",
    "created_at": "2019-12-27T20:31:04Z",
    "events_url": "https://api.github.com/repos/grpc/grpc-go/issues/3286/events",
    "html_url": "https://github.com/grpc/grpc-go/issues/3286",
    "id": 542982232,
    "labels": [
      {
        "color": "610B0B",
        "default": false,
        "description": null,
        "id": 528927681,
        "name": "P2",
        "node_id": "MDU6TGFiZWw1Mjg5Mjc2ODE=",
        "url": "https://api.github.com/repos/grpc/grpc-go/labels/P2"
      },
      {
        "color": "fbca04",
        "default": false,
        "description": null,
        "id": 716941268,
        "name": "Status: Blocked",
        "node_id": "MDU6TGFiZWw3MTY5NDEyNjg=",
        "url": "https://api.github.com/repos/grpc/grpc-go/labels/Status:%20Blocked"
      },
      {
        "color": "bfdadc",
        "default": false,
        "description": null,
        "id": 245453852,
        "name": "Type: Documentation",
        "node_id": "MDU6TGFiZWwyNDU0NTM4NTI=",
        "url": "https://api.github.com/repos/grpc/grpc-go/labels/Type:%20Documentation"
      }
    ],
    "labels_url": "https://api.github.com/repos/grpc/grpc-go/issues/3286/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1NDI5ODIyMzI=",
    "number": 3286,
    "repository_url": "https://api.github.com/repos/grpc/grpc-go",
    "state": "open",
    "title": "Documentation/examples for xds resolver &  balancer",
    "updated_at": "2020-02-27T22:39:33Z",
    "url": "https://api.github.com/repos/grpc/grpc-go/issues/3286",
    "user": {
      "avatar_url": "https://avatars3.githubusercontent.com/u/7981968?v=4",
      "events_url": "https://api.github.com/users/Stoakes/events{/privacy}",
      "followers_url": "https://api.github.com/users/Stoakes/followers",
      "following_url": "https://api.github.com/users/Stoakes/following{/other_user}",
      "gists_url": "https://api.github.com/users/Stoakes/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/Stoakes",
      "id": 7981968,
      "login": "Stoakes",
      "node_id": "MDQ6VXNlcjc5ODE5Njg=",
      "organizations_url": "https://api.github.com/users/Stoakes/orgs",
      "received_events_url": "https://api.github.com/users/Stoakes/received_events",
      "repos_url": "https://api.github.com/users/Stoakes/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/Stoakes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Stoakes/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/Stoakes"
    }
  },
  {
    "assignee": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/960845?v=4",
      "events_url": "https://api.github.com/users/menghanl/events{/privacy}",
      "followers_url": "https://api.github.com/users/menghanl/followers",
      "following_url": "https://api.github.com/users/menghanl/following{/other_user}",
      "gists_url": "https://api.github.com/users/menghanl/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/menghanl",
      "id": 960845,
      "login": "menghanl",
      "node_id": "MDQ6VXNlcjk2MDg0NQ==",
      "organizations_url": "https://api.github.com/users/menghanl/orgs",
      "received_events_url": "https://api.github.com/users/menghanl/received_events",
      "repos_url": "https://api.github.com/users/menghanl/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/menghanl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/menghanl/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/menghanl"
    },
    "assignees": [
      {
        "avatar_url": "https://avatars2.githubusercontent.com/u/960845?v=4",
        "events_url": "https://api.github.com/users/menghanl/events{/privacy}",
        "followers_url": "https://api.github.com/users/menghanl/followers",
        "following_url": "https://api.github.com/users/menghanl/following{/other_user}",
        "gists_url": "https://api.github.com/users/menghanl/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/menghanl",
        "id": 960845,
        "login": "menghanl",
        "node_id": "MDQ6VXNlcjk2MDg0NQ==",
        "organizations_url": "https://api.github.com/users/menghanl/orgs",
        "received_events_url": "https://api.github.com/users/menghanl/received_events",
        "repos_url": "https://api.github.com/users/menghanl/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/menghanl/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/menghanl/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/menghanl"
      }
    ],
    "author_association": "NONE",
    "body": "Please see the FAQ in our main README.md before submitting your issue.\r\n\r\nNow `channelz.TurnOn()` is called  in package's `init()` method https://github.com/grpc/grpc-go/blob/master/channelz/service/service.go#L42\r\n\r\nso it will be turn on if code import `google.golang.org/grpc/channelz/service`, so if user want turn it off, user need modify code and go though a deploy work flow to redeploy it - -\r\n\r\nit's normally we want it be off, and turn it on when we need do a debug.\r\n\r\nmove it into `RegisterChannelzServiceToServer` user can control whether init it (for example by a self-define system env variable)",
    "closed_at": null,
    "comments": 2,
    "comments_url": "https://api.github.com/repos/grpc/grpc-go/issues/3275/comments",
    "created_at": "2019-12-19T06:40:24Z",
    "events_url": "https://api.github.com/repos/grpc/grpc-go/issues/3275/events",
    "html_url": "https://github.com/grpc/grpc-go/issues/3275",
    "id": 540111845,
    "labels": [
      {
        "color": "610B0B",
        "default": false,
        "description": null,
        "id": 528927681,
        "name": "P2",
        "node_id": "MDU6TGFiZWw1Mjg5Mjc2ODE=",
        "url": "https://api.github.com/repos/grpc/grpc-go/labels/P2"
      },
      {
        "color": "bfdadc",
        "default": false,
        "description": null,
        "id": 586671104,
        "name": "Type: Feature",
        "node_id": "MDU6TGFiZWw1ODY2NzExMDQ=",
        "url": "https://api.github.com/repos/grpc/grpc-go/labels/Type:%20Feature"
      }
    ],
    "labels_url": "https://api.github.com/repos/grpc/grpc-go/issues/3275/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1NDAxMTE4NDU=",
    "number": 3275,
    "repository_url": "https://api.github.com/repos/grpc/grpc-go",
    "state": "open",
    "title": "channelz: can channelz.TurnOn() move to RegisterChannelzServiceToServer",
    "updated_at": "2020-01-24T17:18:41Z",
    "url": "https://api.github.com/repos/grpc/grpc-go/issues/3275",
    "user": {
      "avatar_url": "https://avatars3.githubusercontent.com/u/528332?v=4",
      "events_url": "https://api.github.com/users/lysu/events{/privacy}",
      "followers_url": "https://api.github.com/users/lysu/followers",
      "following_url": "https://api.github.com/users/lysu/following{/other_user}",
      "gists_url": "https://api.github.com/users/lysu/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/lysu",
      "id": 528332,
      "login": "lysu",
      "node_id": "MDQ6VXNlcjUyODMzMg==",
      "organizations_url": "https://api.github.com/users/lysu/orgs",
      "received_events_url": "https://api.github.com/users/lysu/received_events",
      "repos_url": "https://api.github.com/users/lysu/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/lysu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lysu/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/lysu"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "`fe80::1ff:fe23:4567:890a%eth2` is a valid IPv6 address, and should be supported in the DNS resolver\r\n```\r\nnet.Dial(\"dns:///fe80::1ff:fe23:4567:890a%eth2:8080\")\r\n```\r\n\r\nIt fails with `ParseIP` error now.\r\n\r\nhttps://en.wikipedia.org/wiki/IPv6_address#Scoped_literal_IPv6_addresses",
    "closed_at": null,
    "comments": 2,
    "comments_url": "https://api.github.com/repos/grpc/grpc-go/issues/3272/comments",
    "created_at": "2019-12-18T21:01:56Z",
    "events_url": "https://api.github.com/repos/grpc/grpc-go/issues/3272/events",
    "html_url": "https://github.com/grpc/grpc-go/issues/3272",
    "id": 539922056,
    "labels": [
      {
        "color": "610B0B",
        "default": false,
        "description": null,
        "id": 528927681,
        "name": "P2",
        "node_id": "MDU6TGFiZWw1Mjg5Mjc2ODE=",
        "url": "https://api.github.com/repos/grpc/grpc-go/labels/P2"
      },
      {
        "color": "bfdadc",
        "default": false,
        "description": null,
        "id": 586671344,
        "name": "Type: Bug",
        "node_id": "MDU6TGFiZWw1ODY2NzEzNDQ=",
        "url": "https://api.github.com/repos/grpc/grpc-go/labels/Type:%20Bug"
      }
    ],
    "labels_url": "https://api.github.com/repos/grpc/grpc-go/issues/3272/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1Mzk5MjIwNTY=",
    "number": 3272,
    "repository_url": "https://api.github.com/repos/grpc/grpc-go",
    "state": "open",
    "title": "dns: scoped literal IPv6 addresses should be supported",
    "updated_at": "2020-01-16T08:17:15Z",
    "url": "https://api.github.com/repos/grpc/grpc-go/issues/3272",
    "user": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/960845?v=4",
      "events_url": "https://api.github.com/users/menghanl/events{/privacy}",
      "followers_url": "https://api.github.com/users/menghanl/followers",
      "following_url": "https://api.github.com/users/menghanl/following{/other_user}",
      "gists_url": "https://api.github.com/users/menghanl/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/menghanl",
      "id": 960845,
      "login": "menghanl",
      "node_id": "MDQ6VXNlcjk2MDg0NQ==",
      "organizations_url": "https://api.github.com/users/menghanl/orgs",
      "received_events_url": "https://api.github.com/users/menghanl/received_events",
      "repos_url": "https://api.github.com/users/menghanl/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/menghanl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/menghanl/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/menghanl"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "From the most recent cron run, although I've seen it at least one other time this week:\r\n```\r\n--- FAIL: Test (159.44s)\r\n    --- FAIL: Test/GoAwayThenClose (20.00s)\r\n        end2end_test.go:7160: UnaryCall(_) = _, rpc error: code = DeadlineExceeded desc = context deadline exceeded; want _, nil\r\nFAIL\r\n```",
    "closed_at": null,
    "comments": 2,
    "comments_url": "https://api.github.com/repos/grpc/grpc-go/issues/3253/comments",
    "created_at": "2019-12-13T17:14:08Z",
    "events_url": "https://api.github.com/repos/grpc/grpc-go/issues/3253/events",
    "html_url": "https://github.com/grpc/grpc-go/issues/3253",
    "id": 537667348,
    "labels": [
      {
        "color": "C25555",
        "default": false,
        "description": null,
        "id": 528927631,
        "name": "P1",
        "node_id": "MDU6TGFiZWw1Mjg5Mjc2MzE=",
        "url": "https://api.github.com/repos/grpc/grpc-go/labels/P1"
      },
      {
        "color": "bfdadc",
        "default": false,
        "description": null,
        "id": 586671344,
        "name": "Type: Bug",
        "node_id": "MDU6TGFiZWw1ODY2NzEzNDQ=",
        "url": "https://api.github.com/repos/grpc/grpc-go/labels/Type:%20Bug"
      }
    ],
    "labels_url": "https://api.github.com/repos/grpc/grpc-go/issues/3253/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1Mzc2NjczNDg=",
    "number": 3253,
    "repository_url": "https://api.github.com/repos/grpc/grpc-go",
    "state": "open",
    "title": "Flaky test: GoAwayThenClose",
    "updated_at": "2019-12-17T17:59:23Z",
    "url": "https://api.github.com/repos/grpc/grpc-go/issues/3253",
    "user": {
      "avatar_url": "https://avatars1.githubusercontent.com/u/26072277?v=4",
      "events_url": "https://api.github.com/users/dfawley/events{/privacy}",
      "followers_url": "https://api.github.com/users/dfawley/followers",
      "following_url": "https://api.github.com/users/dfawley/following{/other_user}",
      "gists_url": "https://api.github.com/users/dfawley/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/dfawley",
      "id": 26072277,
      "login": "dfawley",
      "node_id": "MDQ6VXNlcjI2MDcyMjc3",
      "organizations_url": "https://api.github.com/users/dfawley/orgs",
      "received_events_url": "https://api.github.com/users/dfawley/received_events",
      "repos_url": "https://api.github.com/users/dfawley/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/dfawley/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dfawley/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/dfawley"
    }
  },
  {
    "assignee": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/960845?v=4",
      "events_url": "https://api.github.com/users/menghanl/events{/privacy}",
      "followers_url": "https://api.github.com/users/menghanl/followers",
      "following_url": "https://api.github.com/users/menghanl/following{/other_user}",
      "gists_url": "https://api.github.com/users/menghanl/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/menghanl",
      "id": 960845,
      "login": "menghanl",
      "node_id": "MDQ6VXNlcjk2MDg0NQ==",
      "organizations_url": "https://api.github.com/users/menghanl/orgs",
      "received_events_url": "https://api.github.com/users/menghanl/received_events",
      "repos_url": "https://api.github.com/users/menghanl/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/menghanl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/menghanl/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/menghanl"
    },
    "assignees": [
      {
        "avatar_url": "https://avatars2.githubusercontent.com/u/960845?v=4",
        "events_url": "https://api.github.com/users/menghanl/events{/privacy}",
        "followers_url": "https://api.github.com/users/menghanl/followers",
        "following_url": "https://api.github.com/users/menghanl/following{/other_user}",
        "gists_url": "https://api.github.com/users/menghanl/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/menghanl",
        "id": 960845,
        "login": "menghanl",
        "node_id": "MDQ6VXNlcjk2MDg0NQ==",
        "organizations_url": "https://api.github.com/users/menghanl/orgs",
        "received_events_url": "https://api.github.com/users/menghanl/received_events",
        "repos_url": "https://api.github.com/users/menghanl/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/menghanl/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/menghanl/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/menghanl"
      }
    ],
    "author_association": "NONE",
    "body": "A way to reuse memory on read path. Partial resolve of #1455.\r\nsync.Pool used to reuse []byte which used by recvMsg method of parser to read data from i/o layer. I've tried to make minimal changes in code to provide this.\r\n",
    "closed_at": null,
    "comments": 9,
    "comments_url": "https://api.github.com/repos/grpc/grpc-go/issues/3220/comments",
    "created_at": "2019-12-02T18:08:07Z",
    "events_url": "https://api.github.com/repos/grpc/grpc-go/issues/3220/events",
    "html_url": "https://github.com/grpc/grpc-go/pull/3220",
    "id": 531379392,
    "labels": [],
    "labels_url": "https://api.github.com/repos/grpc/grpc-go/issues/3220/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzQ3ODM4Mzgy",
    "number": 3220,
    "pull_request": {
      "diff_url": "https://github.com/grpc/grpc-go/pull/3220.diff",
      "html_url": "https://github.com/grpc/grpc-go/pull/3220",
      "patch_url": "https://github.com/grpc/grpc-go/pull/3220.patch",
      "url": "https://api.github.com/repos/grpc/grpc-go/pulls/3220"
    },
    "repository_url": "https://api.github.com/repos/grpc/grpc-go",
    "state": "open",
    "title": "Reuse buffer to reads gRPC messages  from the underlying reader",
    "updated_at": "2020-01-09T21:16:35Z",
    "url": "https://api.github.com/repos/grpc/grpc-go/issues/3220",
    "user": {
      "avatar_url": "https://avatars1.githubusercontent.com/u/23652350?v=4",
      "events_url": "https://api.github.com/users/alextomaili/events{/privacy}",
      "followers_url": "https://api.github.com/users/alextomaili/followers",
      "following_url": "https://api.github.com/users/alextomaili/following{/other_user}",
      "gists_url": "https://api.github.com/users/alextomaili/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/alextomaili",
      "id": 23652350,
      "login": "alextomaili",
      "node_id": "MDQ6VXNlcjIzNjUyMzUw",
      "organizations_url": "https://api.github.com/users/alextomaili/orgs",
      "received_events_url": "https://api.github.com/users/alextomaili/received_events",
      "repos_url": "https://api.github.com/users/alextomaili/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/alextomaili/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alextomaili/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/alextomaili"
    }
  },
  {
    "assignee": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/960845?v=4",
      "events_url": "https://api.github.com/users/menghanl/events{/privacy}",
      "followers_url": "https://api.github.com/users/menghanl/followers",
      "following_url": "https://api.github.com/users/menghanl/following{/other_user}",
      "gists_url": "https://api.github.com/users/menghanl/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/menghanl",
      "id": 960845,
      "login": "menghanl",
      "node_id": "MDQ6VXNlcjk2MDg0NQ==",
      "organizations_url": "https://api.github.com/users/menghanl/orgs",
      "received_events_url": "https://api.github.com/users/menghanl/received_events",
      "repos_url": "https://api.github.com/users/menghanl/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/menghanl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/menghanl/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/menghanl"
    },
    "assignees": [
      {
        "avatar_url": "https://avatars2.githubusercontent.com/u/960845?v=4",
        "events_url": "https://api.github.com/users/menghanl/events{/privacy}",
        "followers_url": "https://api.github.com/users/menghanl/followers",
        "following_url": "https://api.github.com/users/menghanl/following{/other_user}",
        "gists_url": "https://api.github.com/users/menghanl/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/menghanl",
        "id": 960845,
        "login": "menghanl",
        "node_id": "MDQ6VXNlcjk2MDg0NQ==",
        "organizations_url": "https://api.github.com/users/menghanl/orgs",
        "received_events_url": "https://api.github.com/users/menghanl/received_events",
        "repos_url": "https://api.github.com/users/menghanl/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/menghanl/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/menghanl/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/menghanl"
      },
      {
        "avatar_url": "https://avatars1.githubusercontent.com/u/26072277?v=4",
        "events_url": "https://api.github.com/users/dfawley/events{/privacy}",
        "followers_url": "https://api.github.com/users/dfawley/followers",
        "following_url": "https://api.github.com/users/dfawley/following{/other_user}",
        "gists_url": "https://api.github.com/users/dfawley/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/dfawley",
        "id": 26072277,
        "login": "dfawley",
        "node_id": "MDQ6VXNlcjI2MDcyMjc3",
        "organizations_url": "https://api.github.com/users/dfawley/orgs",
        "received_events_url": "https://api.github.com/users/dfawley/received_events",
        "repos_url": "https://api.github.com/users/dfawley/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/dfawley/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dfawley/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/dfawley"
      }
    ],
    "author_association": "CONTRIBUTOR",
    "body": "Currently (go1.13.4), the default stack size for newly spawned\r\ngoroutines is 2048 bytes. This is insufficient when processing gRPC\r\nrequests as the we often require more than 4 KiB stacks. This causes the\r\nGo runtime to call runtime.morestack at least twice per RPC, which\r\ncauses performance to suffer needlessly as stack reallocations require\r\nall sorts of internal work such as changing pointers to point to new\r\naddresses.\r\n\r\nSince this stack growth is guaranteed to happen at least twice per RPC,\r\nreusing goroutines gives us two wins:\r\n\r\n  1. The stack is already grown to 8 KiB after the first RPC, so\r\n     subsequent RPCs do not call runtime.morestack.\r\n  2. We eliminate the need to spawn a new goroutine for each request\r\n     (even though they're relatively inexpensive).\r\n\r\nPerformance improves across the board. The improvement is especially\r\nvisible in small, unary requests as the overhead of stack reallocation\r\nis higher, percentage-wise. QPS is up anywhere between 3% and 5%\r\ndepending on the number of concurrent RPC requests in flight. Latency is\r\ndown ~3%. There is even a 1% decrease in memory footprint in some cases,\r\nthough that is an unintended, but happy coincidence.\r\n\r\n```\r\nunary-networkMode_none-bufConn_false-keepalive_false-benchTime_1m0s-trace_false-latency_0s-kbps_0-MTU_0-maxConcurrentCalls_8-reqSize_1B-respSize_1B-compressor_off-channelz_false-preloader_false\r\n               Title       Before        After Percentage\r\n            TotalOps      2613512      2701705     3.37%\r\n             SendOps            0            0      NaN%\r\n             RecvOps            0            0      NaN%\r\n            Bytes/op      8657.00      8654.17    -0.03%\r\n           Allocs/op       173.37       173.28     0.00%\r\n             ReqT/op    348468.27    360227.33     3.37%\r\n            RespT/op    348468.27    360227.33     3.37%\r\n            50th-Lat    174.601\u00b5s    167.378\u00b5s    -4.14%\r\n            90th-Lat    233.132\u00b5s    229.087\u00b5s    -1.74%\r\n            99th-Lat     438.98\u00b5s    441.857\u00b5s     0.66%\r\n             Avg-Lat    183.263\u00b5s     177.26\u00b5s    -3.28%\r\n```",
    "closed_at": null,
    "comments": 6,
    "comments_url": "https://api.github.com/repos/grpc/grpc-go/issues/3204/comments",
    "created_at": "2019-11-21T20:59:48Z",
    "events_url": "https://api.github.com/repos/grpc/grpc-go/issues/3204/events",
    "html_url": "https://github.com/grpc/grpc-go/pull/3204",
    "id": 526838427,
    "labels": [
      {
        "color": "bfdadc",
        "default": false,
        "description": null,
        "id": 586671437,
        "name": "Type: Performance",
        "node_id": "MDU6TGFiZWw1ODY2NzE0Mzc=",
        "url": "https://api.github.com/repos/grpc/grpc-go/labels/Type:%20Performance"
      }
    ],
    "labels_url": "https://api.github.com/repos/grpc/grpc-go/issues/3204/labels{/name}",
    "locked": false,
    "milestone": {
      "closed_at": null,
      "closed_issues": 17,
      "created_at": "2020-01-28T20:38:17Z",
      "creator": {
        "avatar_url": "https://avatars2.githubusercontent.com/u/960845?v=4",
        "events_url": "https://api.github.com/users/menghanl/events{/privacy}",
        "followers_url": "https://api.github.com/users/menghanl/followers",
        "following_url": "https://api.github.com/users/menghanl/following{/other_user}",
        "gists_url": "https://api.github.com/users/menghanl/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/menghanl",
        "id": 960845,
        "login": "menghanl",
        "node_id": "MDQ6VXNlcjk2MDg0NQ==",
        "organizations_url": "https://api.github.com/users/menghanl/orgs",
        "received_events_url": "https://api.github.com/users/menghanl/received_events",
        "repos_url": "https://api.github.com/users/menghanl/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/menghanl/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/menghanl/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/menghanl"
      },
      "description": "",
      "due_on": "2020-03-10T07:00:00Z",
      "html_url": "https://github.com/grpc/grpc-go/milestone/26",
      "id": 5050649,
      "labels_url": "https://api.github.com/repos/grpc/grpc-go/milestones/26/labels",
      "node_id": "MDk6TWlsZXN0b25lNTA1MDY0OQ==",
      "number": 26,
      "open_issues": 6,
      "state": "open",
      "title": "1.28 Release",
      "updated_at": "2020-02-27T21:14:35Z",
      "url": "https://api.github.com/repos/grpc/grpc-go/milestones/26"
    },
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzQ0MjMxMjA2",
    "number": 3204,
    "pull_request": {
      "diff_url": "https://github.com/grpc/grpc-go/pull/3204.diff",
      "html_url": "https://github.com/grpc/grpc-go/pull/3204",
      "patch_url": "https://github.com/grpc/grpc-go/pull/3204.patch",
      "url": "https://api.github.com/repos/grpc/grpc-go/pulls/3204"
    },
    "repository_url": "https://api.github.com/repos/grpc/grpc-go",
    "state": "open",
    "title": "server.go: use worker goroutines for fewer stack allocations",
    "updated_at": "2020-01-28T20:38:49Z",
    "url": "https://api.github.com/repos/grpc/grpc-go/issues/3204",
    "user": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/7521600?v=4",
      "events_url": "https://api.github.com/users/adtac/events{/privacy}",
      "followers_url": "https://api.github.com/users/adtac/followers",
      "following_url": "https://api.github.com/users/adtac/following{/other_user}",
      "gists_url": "https://api.github.com/users/adtac/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/adtac",
      "id": 7521600,
      "login": "adtac",
      "node_id": "MDQ6VXNlcjc1MjE2MDA=",
      "organizations_url": "https://api.github.com/users/adtac/orgs",
      "received_events_url": "https://api.github.com/users/adtac/received_events",
      "repos_url": "https://api.github.com/users/adtac/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/adtac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adtac/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/adtac"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "As we work toward stabilization of the experimental resolver/balancer plugin APIs, the gRPC team will be making several non-backward compatible changes to enable new functionality and better extensibility for the future.  These changes are not strictly following semantic versioning or the Go compatibility promise, but they are in accordance with [our versioning policy](https://github.com/grpc/grpc-go/blob/master/Documentation/versioning.md) as the changes are limited to experimental APIs.\r\n\r\nItems will be checked off of the following list as they are completed.\r\n\r\n#### Cleanups\r\n\r\n- [x] Rename `resolver.BuildOption` to `BuildOptions`  (#3175)\r\n- [x] Rename `resolver.ResolveNowOption` to `ResolveNowOptions`  (#3175)\r\n- [x] Rename `balancer.PickOptions` to `PickInfo`  (#3186)\r\n\r\nFor the short-term, to allow an easier migration, type aliases will be put in place for the old symbols.\r\n\r\n#### `balancer` Package\r\n\r\n- [x] Add `V2Picker` (eventually replacing `Picker`), featuring changed semantics to allow for new capabilities, and for future-proofing.  (#3186)\r\n- [x] Add `ClientConn.UpdateState` (eventually replacing `UpdateBalancerState`).  This is future-proofing to allow addition of new items in the balancer's state, and contains a `V2Picker` instead of `Picker`.  (#3186)\r\n\r\n#### Changes planned for the 1.27 release (December 17 - January 28)\r\n\r\n- [x] Remove all type aliases above and references to the old names.  (#3309)\r\n\r\n#### Changes planned for the 1.28 release (January 28 - March 10)\r\n\r\n- [ ] Replace `balancer.Balancer` and `balancer.Picker` with the `V2Balancer` and `V2Picker` versions.  To allow an easier migration for users currently referencing the `V2` names, create type aliases.  (Typically, referencing these interface types should not be necessary.)  (#3301)\r\n- [ ] Remove `balancer.ClientConn.UpdateBalancerState`.  (#3301)\r\n- [ ] Remove the original balancer plugin API, based on `grpc.Balancer`, and all related functionality. (#3301)\r\n- [ ] Remove the deprecated `naming` package.\r\n\r\n#### Changes planned for the 1.29 release (March 10 - April 21)\r\n\r\n- [ ] Remove the `V2Balancer` and `V2Picker` type aliases, and `base` package \"V2\" references.\r\n\r\nThe resolver and balancer APIs will be kept in the experimental state after these changes, as there may be more breaking changes needed in the near future.",
    "closed_at": null,
    "comments": 0,
    "comments_url": "https://api.github.com/repos/grpc/grpc-go/issues/3180/comments",
    "created_at": "2019-11-14T21:37:46Z",
    "events_url": "https://api.github.com/repos/grpc/grpc-go/issues/3180/events",
    "html_url": "https://github.com/grpc/grpc-go/issues/3180",
    "id": 523118753,
    "labels": [
      {
        "color": "bfdadc",
        "default": false,
        "description": null,
        "id": 299649128,
        "name": "Type: API Change",
        "node_id": "MDU6TGFiZWwyOTk2NDkxMjg=",
        "url": "https://api.github.com/repos/grpc/grpc-go/labels/Type:%20API%20Change"
      }
    ],
    "labels_url": "https://api.github.com/repos/grpc/grpc-go/issues/3180/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1MjMxMTg3NTM=",
    "number": 3180,
    "repository_url": "https://api.github.com/repos/grpc/grpc-go",
    "state": "open",
    "title": "Notice: Upcoming Experimental Balancer/Resolver API Changes",
    "updated_at": "2020-01-29T17:38:21Z",
    "url": "https://api.github.com/repos/grpc/grpc-go/issues/3180",
    "user": {
      "avatar_url": "https://avatars1.githubusercontent.com/u/26072277?v=4",
      "events_url": "https://api.github.com/users/dfawley/events{/privacy}",
      "followers_url": "https://api.github.com/users/dfawley/followers",
      "following_url": "https://api.github.com/users/dfawley/following{/other_user}",
      "gists_url": "https://api.github.com/users/dfawley/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/dfawley",
      "id": 26072277,
      "login": "dfawley",
      "node_id": "MDQ6VXNlcjI2MDcyMjc3",
      "organizations_url": "https://api.github.com/users/dfawley/orgs",
      "received_events_url": "https://api.github.com/users/dfawley/received_events",
      "repos_url": "https://api.github.com/users/dfawley/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/dfawley/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dfawley/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/dfawley"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "I'd like to roll my own custom balancer that creates new SubConns when a number of streams is close to MAX_CONCURRENT_STREAMS.\r\n\r\nWhat would be the best (possible) way to intercept H2 settings packets coming from the server at balancer level?",
    "closed_at": null,
    "comments": 1,
    "comments_url": "https://api.github.com/repos/grpc/grpc-go/issues/3127/comments",
    "created_at": "2019-10-29T09:20:51Z",
    "events_url": "https://api.github.com/repos/grpc/grpc-go/issues/3127/events",
    "html_url": "https://github.com/grpc/grpc-go/issues/3127",
    "id": 513788101,
    "labels": [
      {
        "color": "610B0B",
        "default": false,
        "description": null,
        "id": 528927681,
        "name": "P2",
        "node_id": "MDU6TGFiZWw1Mjg5Mjc2ODE=",
        "url": "https://api.github.com/repos/grpc/grpc-go/labels/P2"
      },
      {
        "color": "bfdadc",
        "default": false,
        "description": null,
        "id": 586671104,
        "name": "Type: Feature",
        "node_id": "MDU6TGFiZWw1ODY2NzExMDQ=",
        "url": "https://api.github.com/repos/grpc/grpc-go/labels/Type:%20Feature"
      }
    ],
    "labels_url": "https://api.github.com/repos/grpc/grpc-go/issues/3127/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1MTM3ODgxMDE=",
    "number": 3127,
    "repository_url": "https://api.github.com/repos/grpc/grpc-go",
    "state": "open",
    "title": "client: detect MaxConcurrentStreams coming from the server",
    "updated_at": "2019-10-30T15:11:23Z",
    "url": "https://api.github.com/repos/grpc/grpc-go/issues/3127",
    "user": {
      "avatar_url": "https://avatars1.githubusercontent.com/u/3862920?v=4",
      "events_url": "https://api.github.com/users/utrack/events{/privacy}",
      "followers_url": "https://api.github.com/users/utrack/followers",
      "following_url": "https://api.github.com/users/utrack/following{/other_user}",
      "gists_url": "https://api.github.com/users/utrack/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/utrack",
      "id": 3862920,
      "login": "utrack",
      "node_id": "MDQ6VXNlcjM4NjI5MjA=",
      "organizations_url": "https://api.github.com/users/utrack/orgs",
      "received_events_url": "https://api.github.com/users/utrack/received_events",
      "repos_url": "https://api.github.com/users/utrack/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/utrack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/utrack/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/utrack"
    }
  }
]