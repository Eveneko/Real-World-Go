[
  {
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "I have many topics. Each topic subcription results one connection. I tried send 2 SUBs on one connection, but failed: `cannot SUB in current state`. It would be nice to allow many SUBs on one connection.",
    "closed_at": null,
    "comments": 1,
    "comments_url": "https://api.github.com/repos/nsqio/nsq/issues/1238/comments",
    "created_at": "2020-02-20T10:07:49Z",
    "events_url": "https://api.github.com/repos/nsqio/nsq/issues/1238/events",
    "html_url": "https://github.com/nsqio/nsq/issues/1238",
    "id": 568187115,
    "labels": [
      {
        "color": "c7def8",
        "default": false,
        "description": null,
        "id": 4890524,
        "name": "feature",
        "node_id": "MDU6TGFiZWw0ODkwNTI0",
        "url": "https://api.github.com/repos/nsqio/nsq/labels/feature"
      }
    ],
    "labels_url": "https://api.github.com/repos/nsqio/nsq/issues/1238/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1NjgxODcxMTU=",
    "number": 1238,
    "repository_url": "https://api.github.com/repos/nsqio/nsq",
    "state": "open",
    "title": "single consumer subscribed to multiple topic/channel",
    "updated_at": "2020-02-21T03:10:50Z",
    "url": "https://api.github.com/repos/nsqio/nsq/issues/1238",
    "user": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/63832?v=4",
      "events_url": "https://api.github.com/users/jinq0123/events{/privacy}",
      "followers_url": "https://api.github.com/users/jinq0123/followers",
      "following_url": "https://api.github.com/users/jinq0123/following{/other_user}",
      "gists_url": "https://api.github.com/users/jinq0123/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jinq0123",
      "id": 63832,
      "login": "jinq0123",
      "node_id": "MDQ6VXNlcjYzODMy",
      "organizations_url": "https://api.github.com/users/jinq0123/orgs",
      "received_events_url": "https://api.github.com/users/jinq0123/received_events",
      "repos_url": "https://api.github.com/users/jinq0123/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jinq0123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jinq0123/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jinq0123"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "go upstream might fix this soon, but for now it is rather surprising\r\nsee https://github.com/golang/go/issues/35305",
    "closed_at": null,
    "comments": 0,
    "comments_url": "https://api.github.com/repos/nsqio/nsq/issues/1237/comments",
    "created_at": "2020-02-20T03:57:58Z",
    "events_url": "https://api.github.com/repos/nsqio/nsq/issues/1237/events",
    "html_url": "https://github.com/nsqio/nsq/pull/1237",
    "id": 568034202,
    "labels": [],
    "labels_url": "https://api.github.com/repos/nsqio/nsq/issues/1237/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mzc3NTM2NDE5",
    "number": 1237,
    "pull_request": {
      "diff_url": "https://github.com/nsqio/nsq/pull/1237.diff",
      "html_url": "https://github.com/nsqio/nsq/pull/1237",
      "patch_url": "https://github.com/nsqio/nsq/pull/1237.patch",
      "url": "https://api.github.com/repos/nsqio/nsq/pulls/1237"
    },
    "repository_url": "https://api.github.com/repos/nsqio/nsq",
    "state": "open",
    "title": "Dockerfile: add nsswitch.conf so go resolver uses /etc/hosts first",
    "updated_at": "2020-02-20T03:57:58Z",
    "url": "https://api.github.com/repos/nsqio/nsq/issues/1237",
    "user": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/649835?v=4",
      "events_url": "https://api.github.com/users/ploxiln/events{/privacy}",
      "followers_url": "https://api.github.com/users/ploxiln/followers",
      "following_url": "https://api.github.com/users/ploxiln/following{/other_user}",
      "gists_url": "https://api.github.com/users/ploxiln/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/ploxiln",
      "id": 649835,
      "login": "ploxiln",
      "node_id": "MDQ6VXNlcjY0OTgzNQ==",
      "organizations_url": "https://api.github.com/users/ploxiln/orgs",
      "received_events_url": "https://api.github.com/users/ploxiln/received_events",
      "repos_url": "https://api.github.com/users/ploxiln/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/ploxiln/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ploxiln/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/ploxiln"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "```\r\n[nsqlookupd] 2020/02/18 19:11:43.472975 INFO: TCP: new client(127.0.0.1:14204)\r\n[nsqlookupd] 2020/02/18 19:11:43.473293 INFO: CLIENT(127.0.0.1:14204): desired protocol magic 'GET '\r\n[nsqlookupd] 2020/02/18 19:11:43.473354 ERROR: client(127.0.0.1:14204) bad protocol magic 'GET '\r\n```\r\nThe desired protocol magic should be  `'  V1'`.",
    "closed_at": null,
    "comments": 0,
    "comments_url": "https://api.github.com/repos/nsqio/nsq/issues/1236/comments",
    "created_at": "2020-02-18T12:12:28Z",
    "events_url": "https://api.github.com/repos/nsqio/nsq/issues/1236/events",
    "html_url": "https://github.com/nsqio/nsq/issues/1236",
    "id": 566851614,
    "labels": [],
    "labels_url": "https://api.github.com/repos/nsqio/nsq/issues/1236/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1NjY4NTE2MTQ=",
    "number": 1236,
    "repository_url": "https://api.github.com/repos/nsqio/nsq",
    "state": "open",
    "title": "Incorrect log",
    "updated_at": "2020-02-18T12:12:28Z",
    "url": "https://api.github.com/repos/nsqio/nsq/issues/1236",
    "user": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/63832?v=4",
      "events_url": "https://api.github.com/users/jinq0123/events{/privacy}",
      "followers_url": "https://api.github.com/users/jinq0123/followers",
      "following_url": "https://api.github.com/users/jinq0123/following{/other_user}",
      "gists_url": "https://api.github.com/users/jinq0123/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jinq0123",
      "id": 63832,
      "login": "jinq0123",
      "node_id": "MDQ6VXNlcjYzODMy",
      "organizations_url": "https://api.github.com/users/jinq0123/orgs",
      "received_events_url": "https://api.github.com/users/jinq0123/received_events",
      "repos_url": "https://api.github.com/users/jinq0123/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jinq0123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jinq0123/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jinq0123"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "right now an nsqd  client doesn't refresh it's ip connections to lookupd on lookupd DNS changes.  this causes a problem on long running instances when a lookupd instance gets rebuilt.",
    "closed_at": null,
    "comments": 1,
    "comments_url": "https://api.github.com/repos/nsqio/nsq/issues/1233/comments",
    "created_at": "2020-01-14T20:22:44Z",
    "events_url": "https://api.github.com/repos/nsqio/nsq/issues/1233/events",
    "html_url": "https://github.com/nsqio/nsq/issues/1233",
    "id": 549797031,
    "labels": [],
    "labels_url": "https://api.github.com/repos/nsqio/nsq/issues/1233/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1NDk3OTcwMzE=",
    "number": 1233,
    "repository_url": "https://api.github.com/repos/nsqio/nsq",
    "state": "open",
    "title": "have nsqd client re-fresh the IP address for lookupd connections and connect to new lookupd's on IP changes",
    "updated_at": "2020-02-07T11:52:11Z",
    "url": "https://api.github.com/repos/nsqio/nsq/issues/1233",
    "user": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/5041307?v=4",
      "events_url": "https://api.github.com/users/danbf/events{/privacy}",
      "followers_url": "https://api.github.com/users/danbf/followers",
      "following_url": "https://api.github.com/users/danbf/following{/other_user}",
      "gists_url": "https://api.github.com/users/danbf/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/danbf",
      "id": 5041307,
      "login": "danbf",
      "node_id": "MDQ6VXNlcjUwNDEzMDc=",
      "organizations_url": "https://api.github.com/users/danbf/orgs",
      "received_events_url": "https://api.github.com/users/danbf/received_events",
      "repos_url": "https://api.github.com/users/danbf/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/danbf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danbf/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/danbf"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Hello, \r\n\r\nI noticed nsqd correctly marked the health state to \"not ok\" (e.g. via /ping end point) when disk is full and a message is published. However, it did not do this when a message is published to *existing* topic -- even worse, it reset the state to healthy/ok.\r\n\r\nSteps to replicate:\r\n\r\n```\r\n./nsqd -mem-queue-size=0\r\ncurl 'http://localhost:4151/ping'\r\n## see OK\r\necho \"Haha\" | ./to_nsq --topic t1 --nsqd-tcp-address 127.0.0.1:4150 --rate 1000\r\ncurl 'http://localhost:4151/ping'\r\n## see OK\r\nsudo fallocate -l 80G penuh80g\r\ndf\r\n## see 0 available space left\r\ncurl 'http://localhost:4151/ping'\r\n## see OK\r\necho \"Haha\" | ./to_nsq --topic t1 --nsqd-tcp-address 127.0.0.1:4150 --rate 1000\r\ncurl 'http://localhost:4151/ping'\r\n## still OK\r\necho \"Hoho\" | ./to_nsq --topic t2 --nsqd-tcp-address 127.0.0.1:4150 --rate 1000\r\ncurl 'http://localhost:4151/ping'\r\n## now NOK\r\necho \"Haha\" | ./to_nsq --topic t1 --nsqd-tcp-address 127.0.0.1:4150 --rate 1000\r\n## sending to existing topic reset the error status -- now OK\r\ndf\r\n## see 0 available space left\r\n```",
    "closed_at": null,
    "comments": 0,
    "comments_url": "https://api.github.com/repos/nsqio/nsq/issues/1231/comments",
    "created_at": "2020-01-10T14:53:32Z",
    "events_url": "https://api.github.com/repos/nsqio/nsq/issues/1231/events",
    "html_url": "https://github.com/nsqio/nsq/issues/1231",
    "id": 548123075,
    "labels": [],
    "labels_url": "https://api.github.com/repos/nsqio/nsq/issues/1231/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1NDgxMjMwNzU=",
    "number": 1231,
    "repository_url": "https://api.github.com/repos/nsqio/nsq",
    "state": "open",
    "title": "nsqd: disk full does not cause error on PUB to existing topic",
    "updated_at": "2020-01-10T14:53:32Z",
    "url": "https://api.github.com/repos/nsqio/nsq/issues/1231",
    "user": {
      "avatar_url": "https://avatars0.githubusercontent.com/u/46476260?v=4",
      "events_url": "https://api.github.com/users/dodysw2/events{/privacy}",
      "followers_url": "https://api.github.com/users/dodysw2/followers",
      "following_url": "https://api.github.com/users/dodysw2/following{/other_user}",
      "gists_url": "https://api.github.com/users/dodysw2/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/dodysw2",
      "id": 46476260,
      "login": "dodysw2",
      "node_id": "MDQ6VXNlcjQ2NDc2MjYw",
      "organizations_url": "https://api.github.com/users/dodysw2/orgs",
      "received_events_url": "https://api.github.com/users/dodysw2/received_events",
      "repos_url": "https://api.github.com/users/dodysw2/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/dodysw2/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dodysw2/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/dodysw2"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "![\u56fe\u7247](https://user-images.githubusercontent.com/41467027/71457313-3d1dbe00-27d8-11ea-96ef-c6f2ce7b9bff.png)\r\n![\u56fe\u7247](https://user-images.githubusercontent.com/41467027/71457319-4c047080-27d8-11ea-8df1-1b6352c38c11.png)\r\n\r\n\r\nIs this a bug\r\nUsers cannot create topic through nsqadmin\r\nThe topic created cannot be implemented to nsqd\r\n",
    "closed_at": null,
    "comments": 3,
    "comments_url": "https://api.github.com/repos/nsqio/nsq/issues/1228/comments",
    "created_at": "2019-12-26T04:09:20Z",
    "events_url": "https://api.github.com/repos/nsqio/nsq/issues/1228/events",
    "html_url": "https://github.com/nsqio/nsq/issues/1228",
    "id": 542425727,
    "labels": [
      {
        "color": "f7c6c7",
        "default": true,
        "description": null,
        "id": 4890526,
        "name": "question",
        "node_id": "MDU6TGFiZWw0ODkwNTI2",
        "url": "https://api.github.com/repos/nsqio/nsq/labels/question"
      }
    ],
    "labels_url": "https://api.github.com/repos/nsqio/nsq/issues/1228/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1NDI0MjU3Mjc=",
    "number": 1228,
    "repository_url": "https://api.github.com/repos/nsqio/nsq",
    "state": "open",
    "title": "nsqadmin -- lookup",
    "updated_at": "2019-12-27T09:46:03Z",
    "url": "https://api.github.com/repos/nsqio/nsq/issues/1228",
    "user": {
      "avatar_url": "https://avatars1.githubusercontent.com/u/41467027?v=4",
      "events_url": "https://api.github.com/users/HuangXiaoAIZhu/events{/privacy}",
      "followers_url": "https://api.github.com/users/HuangXiaoAIZhu/followers",
      "following_url": "https://api.github.com/users/HuangXiaoAIZhu/following{/other_user}",
      "gists_url": "https://api.github.com/users/HuangXiaoAIZhu/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/HuangXiaoAIZhu",
      "id": 41467027,
      "login": "HuangXiaoAIZhu",
      "node_id": "MDQ6VXNlcjQxNDY3MDI3",
      "organizations_url": "https://api.github.com/users/HuangXiaoAIZhu/orgs",
      "received_events_url": "https://api.github.com/users/HuangXiaoAIZhu/received_events",
      "repos_url": "https://api.github.com/users/HuangXiaoAIZhu/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/HuangXiaoAIZhu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/HuangXiaoAIZhu/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/HuangXiaoAIZhu"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "This can help distinguish log levels in gcp stackdriver \ud83d\udc4d ",
    "closed_at": null,
    "comments": 0,
    "comments_url": "https://api.github.com/repos/nsqio/nsq/issues/1218/comments",
    "created_at": "2019-11-29T03:14:40Z",
    "events_url": "https://api.github.com/repos/nsqio/nsq/issues/1218/events",
    "html_url": "https://github.com/nsqio/nsq/issues/1218",
    "id": 530136030,
    "labels": [
      {
        "color": "c7def8",
        "default": false,
        "description": null,
        "id": 4890524,
        "name": "feature",
        "node_id": "MDU6TGFiZWw0ODkwNTI0",
        "url": "https://api.github.com/repos/nsqio/nsq/labels/feature"
      }
    ],
    "labels_url": "https://api.github.com/repos/nsqio/nsq/issues/1218/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1MzAxMzYwMzA=",
    "number": 1218,
    "repository_url": "https://api.github.com/repos/nsqio/nsq",
    "state": "open",
    "title": "log in json format",
    "updated_at": "2019-12-23T15:35:55Z",
    "url": "https://api.github.com/repos/nsqio/nsq/issues/1218",
    "user": {
      "avatar_url": "https://avatars3.githubusercontent.com/u/20159327?v=4",
      "events_url": "https://api.github.com/users/yulintsai/events{/privacy}",
      "followers_url": "https://api.github.com/users/yulintsai/followers",
      "following_url": "https://api.github.com/users/yulintsai/following{/other_user}",
      "gists_url": "https://api.github.com/users/yulintsai/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/yulintsai",
      "id": 20159327,
      "login": "yulintsai",
      "node_id": "MDQ6VXNlcjIwMTU5MzI3",
      "organizations_url": "https://api.github.com/users/yulintsai/orgs",
      "received_events_url": "https://api.github.com/users/yulintsai/received_events",
      "repos_url": "https://api.github.com/users/yulintsai/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/yulintsai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yulintsai/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/yulintsai"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "This PR will fix register db write lock starvation.\r\n\r\nWe have encountered a circumstance: \r\n* we have many topics with many ephemeral channels.\r\n* our cluster fo nsqd is large with more than 600+ instances. \r\n* some channels will register and unregister itself normally since the consumer client can break because timeout is readed or other various situations.\r\n\r\nAnd, finally, the register db is large.\r\n\r\nSo the lookup api will consume some little more time to respond. In the case where a lookup api get the read lock fo register db, all the write lock, for example, register/unregister channels, will be blocked. And since the read lock can be acquired simultaneously by lookup requests, the operations that needs  write lock will all be blocked and the memory and goroutine will accumulated.\r\n\r\nThis PR will add a cache for the FindProducers resposne. TTL is 1 minute, the purge operation will be operated at 5 minutes interval.\r\n\r\nCorns: \r\n* This will add some pressure on the memory since a new memory will be allocated.\r\n* newly added nsqds instance may have some more time to be discovered by consumer.",
    "closed_at": null,
    "comments": 7,
    "comments_url": "https://api.github.com/repos/nsqio/nsq/issues/1208/comments",
    "created_at": "2019-11-01T13:38:14Z",
    "events_url": "https://api.github.com/repos/nsqio/nsq/issues/1208/events",
    "html_url": "https://github.com/nsqio/nsq/pull/1208",
    "id": 516117536,
    "labels": [
      {
        "color": "d4c5f9",
        "default": false,
        "description": null,
        "id": 108368125,
        "name": "perf",
        "node_id": "MDU6TGFiZWwxMDgzNjgxMjU=",
        "url": "https://api.github.com/repos/nsqio/nsq/labels/perf"
      }
    ],
    "labels_url": "https://api.github.com/repos/nsqio/nsq/issues/1208/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzM1NDI2MDE2",
    "number": 1208,
    "pull_request": {
      "diff_url": "https://github.com/nsqio/nsq/pull/1208.diff",
      "html_url": "https://github.com/nsqio/nsq/pull/1208",
      "patch_url": "https://github.com/nsqio/nsq/pull/1208.patch",
      "url": "https://api.github.com/repos/nsqio/nsq/pulls/1208"
    },
    "repository_url": "https://api.github.com/repos/nsqio/nsq",
    "state": "open",
    "title": "nsqlookupd: fix write lock starvation",
    "updated_at": "2019-11-06T22:13:23Z",
    "url": "https://api.github.com/repos/nsqio/nsq/issues/1208",
    "user": {
      "avatar_url": "https://avatars1.githubusercontent.com/u/2404712?v=4",
      "events_url": "https://api.github.com/users/andyxning/events{/privacy}",
      "followers_url": "https://api.github.com/users/andyxning/followers",
      "following_url": "https://api.github.com/users/andyxning/following{/other_user}",
      "gists_url": "https://api.github.com/users/andyxning/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/andyxning",
      "id": 2404712,
      "login": "andyxning",
      "node_id": "MDQ6VXNlcjI0MDQ3MTI=",
      "organizations_url": "https://api.github.com/users/andyxning/orgs",
      "received_events_url": "https://api.github.com/users/andyxning/received_events",
      "repos_url": "https://api.github.com/users/andyxning/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/andyxning/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andyxning/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/andyxning"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "There were some small errors in bench.py (fixes #1202):\r\n\r\n- ssh_connect_with_retries() did not ask for the ssh key\r\n- I also added some logging in ssh_cmd()\r\n- bootstrap(addr) followed the old build process\r\n- run() called the async ssh command, however, sometimes the pkill killed the deamon immediately; so I switched to the usual ssh_cmd and to screen",
    "closed_at": null,
    "comments": 3,
    "comments_url": "https://api.github.com/repos/nsqio/nsq/issues/1204/comments",
    "created_at": "2019-10-25T10:07:00Z",
    "events_url": "https://api.github.com/repos/nsqio/nsq/issues/1204/events",
    "html_url": "https://github.com/nsqio/nsq/pull/1204",
    "id": 512425681,
    "labels": [],
    "labels_url": "https://api.github.com/repos/nsqio/nsq/issues/1204/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzMyNDM4MDkx",
    "number": 1204,
    "pull_request": {
      "diff_url": "https://github.com/nsqio/nsq/pull/1204.diff",
      "html_url": "https://github.com/nsqio/nsq/pull/1204",
      "patch_url": "https://github.com/nsqio/nsq/pull/1204.patch",
      "url": "https://api.github.com/repos/nsqio/nsq/pulls/1204"
    },
    "repository_url": "https://api.github.com/repos/nsqio/nsq",
    "state": "open",
    "title": "update build process and ssh in bench.py",
    "updated_at": "2019-10-31T06:13:30Z",
    "url": "https://api.github.com/repos/nsqio/nsq/issues/1204",
    "user": {
      "avatar_url": "https://avatars3.githubusercontent.com/u/18425060?v=4",
      "events_url": "https://api.github.com/users/martingrambow/events{/privacy}",
      "followers_url": "https://api.github.com/users/martingrambow/followers",
      "following_url": "https://api.github.com/users/martingrambow/following{/other_user}",
      "gists_url": "https://api.github.com/users/martingrambow/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/martingrambow",
      "id": 18425060,
      "login": "martingrambow",
      "node_id": "MDQ6VXNlcjE4NDI1MDYw",
      "organizations_url": "https://api.github.com/users/martingrambow/orgs",
      "received_events_url": "https://api.github.com/users/martingrambow/received_events",
      "repos_url": "https://api.github.com/users/martingrambow/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/martingrambow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martingrambow/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/martingrambow"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "I'd like to provide an experience report from introducing new nsqd nodes to a cluster while operational activities which involve pausing channels are underway.\r\n\r\n---\r\n\r\nCurrently nsqd discovers the topic/channel topology from `nqlookupd` when it receives a new message. This ensures that if you have say 10 channels on a topic, all 10 channels get a copy of the first message.\r\n\r\nIf a channel is in a paused state when the first message is published to a new `nsqd` node it's naturally expected that the new node would also end up with channels in an appropriately paused states. That doesn't happen unfortunately because `nsqlookupd` has no context about the paused state of a channel, and so it can't provide it when queried by nsqd on a new topic creation. (There also isn't technically anything that requires all hosts to be paused or unpaused together, even though that's obviously most common)\r\n\r\n---\r\n\r\nFeature Request: `nsqd`  propagate topic/channel pause states to `nsqlookupd`. On discovery, nsqlookupd can advise if the majority of clients for a topic/channel are paused and if so, nqsd will create a pre-paused topic or channel. If there are no clients for a topic/channel connected to nsqd at the time of topic discovery, nsqd should create a topic and channel un-paused.  When `nsqd` queries multiple `nqslookupd` if any response indicates paused, the result should be a paused state. i.e. `paused` is preferred.\r\n\r\nNote: nsqlookupd response changes to support this should be backwards compatible.",
    "closed_at": null,
    "comments": 0,
    "comments_url": "https://api.github.com/repos/nsqio/nsq/issues/1199/comments",
    "created_at": "2019-10-16T00:03:32Z",
    "events_url": "https://api.github.com/repos/nsqio/nsq/issues/1199/events",
    "html_url": "https://github.com/nsqio/nsq/issues/1199",
    "id": 507541737,
    "labels": [
      {
        "color": "c7def8",
        "default": false,
        "description": null,
        "id": 4890524,
        "name": "feature",
        "node_id": "MDU6TGFiZWw0ODkwNTI0",
        "url": "https://api.github.com/repos/nsqio/nsq/labels/feature"
      },
      {
        "color": "bbffdd",
        "default": true,
        "description": null,
        "id": 123584042,
        "name": "help wanted",
        "node_id": "MDU6TGFiZWwxMjM1ODQwNDI=",
        "url": "https://api.github.com/repos/nsqio/nsq/labels/help%20wanted"
      }
    ],
    "labels_url": "https://api.github.com/repos/nsqio/nsq/issues/1199/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1MDc1NDE3Mzc=",
    "number": 1199,
    "repository_url": "https://api.github.com/repos/nsqio/nsq",
    "state": "open",
    "title": "nsqd: discover topic/channel paused state on new topic discovery",
    "updated_at": "2019-10-16T00:03:32Z",
    "url": "https://api.github.com/repos/nsqio/nsq/issues/1199",
    "user": {
      "avatar_url": "https://avatars0.githubusercontent.com/u/45028?v=4",
      "events_url": "https://api.github.com/users/jehiah/events{/privacy}",
      "followers_url": "https://api.github.com/users/jehiah/followers",
      "following_url": "https://api.github.com/users/jehiah/following{/other_user}",
      "gists_url": "https://api.github.com/users/jehiah/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jehiah",
      "id": 45028,
      "login": "jehiah",
      "node_id": "MDQ6VXNlcjQ1MDI4",
      "organizations_url": "https://api.github.com/users/jehiah/orgs",
      "received_events_url": "https://api.github.com/users/jehiah/received_events",
      "repos_url": "https://api.github.com/users/jehiah/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jehiah/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jehiah/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jehiah"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Currently messages are received in order of publishing and recently published messages are waiting to be received while older messages are completed. We have a requirement of receiving messages in random order. Read the docs but could not find any option. \r\n\r\nIs it possible?",
    "closed_at": null,
    "comments": 5,
    "comments_url": "https://api.github.com/repos/nsqio/nsq/issues/1182/comments",
    "created_at": "2019-09-04T23:03:11Z",
    "events_url": "https://api.github.com/repos/nsqio/nsq/issues/1182/events",
    "html_url": "https://github.com/nsqio/nsq/issues/1182",
    "id": 489444656,
    "labels": [
      {
        "color": "f7c6c7",
        "default": true,
        "description": null,
        "id": 4890526,
        "name": "question",
        "node_id": "MDU6TGFiZWw0ODkwNTI2",
        "url": "https://api.github.com/repos/nsqio/nsq/labels/question"
      }
    ],
    "labels_url": "https://api.github.com/repos/nsqio/nsq/issues/1182/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0ODk0NDQ2NTY=",
    "number": 1182,
    "repository_url": "https://api.github.com/repos/nsqio/nsq",
    "state": "open",
    "title": "How to receive messages in random order instead of published order",
    "updated_at": "2019-10-12T03:58:08Z",
    "url": "https://api.github.com/repos/nsqio/nsq/issues/1182",
    "user": {
      "avatar_url": "https://avatars1.githubusercontent.com/u/13360356?v=4",
      "events_url": "https://api.github.com/users/apmcodes/events{/privacy}",
      "followers_url": "https://api.github.com/users/apmcodes/followers",
      "following_url": "https://api.github.com/users/apmcodes/following{/other_user}",
      "gists_url": "https://api.github.com/users/apmcodes/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/apmcodes",
      "id": 13360356,
      "login": "apmcodes",
      "node_id": "MDQ6VXNlcjEzMzYwMzU2",
      "organizations_url": "https://api.github.com/users/apmcodes/orgs",
      "received_events_url": "https://api.github.com/users/apmcodes/received_events",
      "repos_url": "https://api.github.com/users/apmcodes/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/apmcodes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apmcodes/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/apmcodes"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "Fix #1139 \r\nFix #1137 ",
    "closed_at": null,
    "comments": 21,
    "comments_url": "https://api.github.com/repos/nsqio/nsq/issues/1170/comments",
    "created_at": "2019-07-26T05:24:52Z",
    "events_url": "https://api.github.com/repos/nsqio/nsq/issues/1170/events",
    "html_url": "https://github.com/nsqio/nsq/pull/1170",
    "id": 473182658,
    "labels": [],
    "labels_url": "https://api.github.com/repos/nsqio/nsq/issues/1170/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzAxMzk5ODYz",
    "number": 1170,
    "pull_request": {
      "diff_url": "https://github.com/nsqio/nsq/pull/1170.diff",
      "html_url": "https://github.com/nsqio/nsq/pull/1170",
      "patch_url": "https://github.com/nsqio/nsq/pull/1170.patch",
      "url": "https://api.github.com/repos/nsqio/nsq/pulls/1170"
    },
    "repository_url": "https://api.github.com/repos/nsqio/nsq",
    "state": "open",
    "title": "refactor nsqd storage engine",
    "updated_at": "2019-11-11T09:43:11Z",
    "url": "https://api.github.com/repos/nsqio/nsq/issues/1170",
    "user": {
      "avatar_url": "https://avatars1.githubusercontent.com/u/2404712?v=4",
      "events_url": "https://api.github.com/users/andyxning/events{/privacy}",
      "followers_url": "https://api.github.com/users/andyxning/followers",
      "following_url": "https://api.github.com/users/andyxning/following{/other_user}",
      "gists_url": "https://api.github.com/users/andyxning/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/andyxning",
      "id": 2404712,
      "login": "andyxning",
      "node_id": "MDQ6VXNlcjI0MDQ3MTI=",
      "organizations_url": "https://api.github.com/users/andyxning/orgs",
      "received_events_url": "https://api.github.com/users/andyxning/received_events",
      "repos_url": "https://api.github.com/users/andyxning/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/andyxning/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andyxning/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/andyxning"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "I have no idea about how to do this for now. But, it seems that more and more popular distributed storage system is relying on raft. \r\n\r\nAny plan to add this functionality? \r\n\r\n/cc @ploxiln @mreiferson ",
    "closed_at": null,
    "comments": 1,
    "comments_url": "https://api.github.com/repos/nsqio/nsq/issues/1169/comments",
    "created_at": "2019-07-25T06:06:38Z",
    "events_url": "https://api.github.com/repos/nsqio/nsq/issues/1169/events",
    "html_url": "https://github.com/nsqio/nsq/issues/1169",
    "id": 472681732,
    "labels": [],
    "labels_url": "https://api.github.com/repos/nsqio/nsq/issues/1169/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0NzI2ODE3MzI=",
    "number": 1169,
    "repository_url": "https://api.github.com/repos/nsqio/nsq",
    "state": "open",
    "title": "Add raft based storage HA",
    "updated_at": "2020-02-27T19:22:30Z",
    "url": "https://api.github.com/repos/nsqio/nsq/issues/1169",
    "user": {
      "avatar_url": "https://avatars1.githubusercontent.com/u/2404712?v=4",
      "events_url": "https://api.github.com/users/andyxning/events{/privacy}",
      "followers_url": "https://api.github.com/users/andyxning/followers",
      "following_url": "https://api.github.com/users/andyxning/following{/other_user}",
      "gists_url": "https://api.github.com/users/andyxning/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/andyxning",
      "id": 2404712,
      "login": "andyxning",
      "node_id": "MDQ6VXNlcjI0MDQ3MTI=",
      "organizations_url": "https://api.github.com/users/andyxning/orgs",
      "received_events_url": "https://api.github.com/users/andyxning/received_events",
      "repos_url": "https://api.github.com/users/andyxning/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/andyxning/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andyxning/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/andyxning"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "When using lookup to determine the receiving connection of a new topic, if there is no topic, there will be an error. Then the listening is done by HTTP. Is there a B solution? ",
    "closed_at": null,
    "comments": 8,
    "comments_url": "https://api.github.com/repos/nsqio/nsq/issues/1162/comments",
    "created_at": "2019-06-17T01:23:39Z",
    "events_url": "https://api.github.com/repos/nsqio/nsq/issues/1162/events",
    "html_url": "https://github.com/nsqio/nsq/issues/1162",
    "id": 456705042,
    "labels": [],
    "labels_url": "https://api.github.com/repos/nsqio/nsq/issues/1162/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0NTY3MDUwNDI=",
    "number": 1162,
    "repository_url": "https://api.github.com/repos/nsqio/nsq",
    "state": "open",
    "title": "lookupd: fast push notification of topic availability",
    "updated_at": "2019-11-28T01:12:18Z",
    "url": "https://api.github.com/repos/nsqio/nsq/issues/1162",
    "user": {
      "avatar_url": "https://avatars3.githubusercontent.com/u/48193468?v=4",
      "events_url": "https://api.github.com/users/buguang01/events{/privacy}",
      "followers_url": "https://api.github.com/users/buguang01/followers",
      "following_url": "https://api.github.com/users/buguang01/following{/other_user}",
      "gists_url": "https://api.github.com/users/buguang01/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/buguang01",
      "id": 48193468,
      "login": "buguang01",
      "node_id": "MDQ6VXNlcjQ4MTkzNDY4",
      "organizations_url": "https://api.github.com/users/buguang01/orgs",
      "received_events_url": "https://api.github.com/users/buguang01/received_events",
      "repos_url": "https://api.github.com/users/buguang01/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/buguang01/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/buguang01/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/buguang01"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "Fix #1148 \r\n\r\nThis PR adds compression/decompression pipeline for nsqd server.\r\n\r\nUpdate:\r\n* add proposal: https://docs.google.com/document/d/107yDH6pN8-b_i22AfvPkzdDU2yneOC-1lcUllpUmN4w/edit#heading=h.j5jbn91ci2bi\r\n\r\n/cc @mreiferson @ploxiln ",
    "closed_at": null,
    "comments": 2,
    "comments_url": "https://api.github.com/repos/nsqio/nsq/issues/1149/comments",
    "created_at": "2019-03-20T07:48:59Z",
    "events_url": "https://api.github.com/repos/nsqio/nsq/issues/1149/events",
    "html_url": "https://github.com/nsqio/nsq/pull/1149",
    "id": 423111607,
    "labels": [],
    "labels_url": "https://api.github.com/repos/nsqio/nsq/issues/1149/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjYyNzU0MTky",
    "number": 1149,
    "pull_request": {
      "diff_url": "https://github.com/nsqio/nsq/pull/1149.diff",
      "html_url": "https://github.com/nsqio/nsq/pull/1149",
      "patch_url": "https://github.com/nsqio/nsq/pull/1149.patch",
      "url": "https://api.github.com/repos/nsqio/nsq/pulls/1149"
    },
    "repository_url": "https://api.github.com/repos/nsqio/nsq",
    "state": "open",
    "title": "[WIP] add compression/decompression pipeline",
    "updated_at": "2019-07-28T09:54:42Z",
    "url": "https://api.github.com/repos/nsqio/nsq/issues/1149",
    "user": {
      "avatar_url": "https://avatars1.githubusercontent.com/u/2404712?v=4",
      "events_url": "https://api.github.com/users/andyxning/events{/privacy}",
      "followers_url": "https://api.github.com/users/andyxning/followers",
      "following_url": "https://api.github.com/users/andyxning/following{/other_user}",
      "gists_url": "https://api.github.com/users/andyxning/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/andyxning",
      "id": 2404712,
      "login": "andyxning",
      "node_id": "MDQ6VXNlcjI0MDQ3MTI=",
      "organizations_url": "https://api.github.com/users/andyxning/orgs",
      "received_events_url": "https://api.github.com/users/andyxning/received_events",
      "repos_url": "https://api.github.com/users/andyxning/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/andyxning/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andyxning/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/andyxning"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "As for now, NSQD's backend storage format is not feasible for storing more info and make changes without backward compatibility. We need a rethink and redesign about the serialization format for NSQD's backend storage. \r\n\r\nFYI: \r\n* https://github.com/nsqio/nsq/pull/1137#issuecomment-466304571\r\n* https://github.com/nsqio/nsq/pull/1137#issuecomment-466479192",
    "closed_at": null,
    "comments": 4,
    "comments_url": "https://api.github.com/repos/nsqio/nsq/issues/1139/comments",
    "created_at": "2019-02-25T07:34:59Z",
    "events_url": "https://api.github.com/repos/nsqio/nsq/issues/1139/events",
    "html_url": "https://github.com/nsqio/nsq/issues/1139",
    "id": 413970052,
    "labels": [
      {
        "color": "c7def8",
        "default": false,
        "description": null,
        "id": 4890524,
        "name": "feature",
        "node_id": "MDU6TGFiZWw0ODkwNTI0",
        "url": "https://api.github.com/repos/nsqio/nsq/labels/feature"
      }
    ],
    "labels_url": "https://api.github.com/repos/nsqio/nsq/issues/1139/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0MTM5NzAwNTI=",
    "number": 1139,
    "repository_url": "https://api.github.com/repos/nsqio/nsq",
    "state": "open",
    "title": "nsqd: refactor NSQD storage backend format",
    "updated_at": "2019-07-26T01:56:26Z",
    "url": "https://api.github.com/repos/nsqio/nsq/issues/1139",
    "user": {
      "avatar_url": "https://avatars1.githubusercontent.com/u/2404712?v=4",
      "events_url": "https://api.github.com/users/andyxning/events{/privacy}",
      "followers_url": "https://api.github.com/users/andyxning/followers",
      "following_url": "https://api.github.com/users/andyxning/following{/other_user}",
      "gists_url": "https://api.github.com/users/andyxning/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/andyxning",
      "id": 2404712,
      "login": "andyxning",
      "node_id": "MDQ6VXNlcjI0MDQ3MTI=",
      "organizations_url": "https://api.github.com/users/andyxning/orgs",
      "received_events_url": "https://api.github.com/users/andyxning/received_events",
      "repos_url": "https://api.github.com/users/andyxning/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/andyxning/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andyxning/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/andyxning"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "Currently, deferred message defer time duration does not persist when nsqd do a graceful shutdown or serialized to disk. This PR will persist deferred message with its defer time duration. This PR needs to keep backward compatibility.",
    "closed_at": null,
    "comments": 17,
    "comments_url": "https://api.github.com/repos/nsqio/nsq/issues/1137/comments",
    "created_at": "2019-02-21T04:30:56Z",
    "events_url": "https://api.github.com/repos/nsqio/nsq/issues/1137/events",
    "html_url": "https://github.com/nsqio/nsq/pull/1137",
    "id": 412744179,
    "labels": [
      {
        "color": "c7def8",
        "default": false,
        "description": null,
        "id": 4890524,
        "name": "feature",
        "node_id": "MDU6TGFiZWw0ODkwNTI0",
        "url": "https://api.github.com/repos/nsqio/nsq/labels/feature"
      }
    ],
    "labels_url": "https://api.github.com/repos/nsqio/nsq/issues/1137/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjU0ODgzNDUy",
    "number": 1137,
    "pull_request": {
      "diff_url": "https://github.com/nsqio/nsq/pull/1137.diff",
      "html_url": "https://github.com/nsqio/nsq/pull/1137",
      "patch_url": "https://github.com/nsqio/nsq/pull/1137.patch",
      "url": "https://api.github.com/repos/nsqio/nsq/pulls/1137"
    },
    "repository_url": "https://api.github.com/repos/nsqio/nsq",
    "state": "open",
    "title": "nsqd: keep defer property under nsqd restart",
    "updated_at": "2019-07-26T04:38:00Z",
    "url": "https://api.github.com/repos/nsqio/nsq/issues/1137",
    "user": {
      "avatar_url": "https://avatars1.githubusercontent.com/u/2404712?v=4",
      "events_url": "https://api.github.com/users/andyxning/events{/privacy}",
      "followers_url": "https://api.github.com/users/andyxning/followers",
      "following_url": "https://api.github.com/users/andyxning/following{/other_user}",
      "gists_url": "https://api.github.com/users/andyxning/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/andyxning",
      "id": 2404712,
      "login": "andyxning",
      "node_id": "MDQ6VXNlcjI0MDQ3MTI=",
      "organizations_url": "https://api.github.com/users/andyxning/orgs",
      "received_events_url": "https://api.github.com/users/andyxning/received_events",
      "repos_url": "https://api.github.com/users/andyxning/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/andyxning/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andyxning/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/andyxning"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "**Environment/Pre-Conditions**\r\nnsqd version: 1.1.0\r\nNode.js application with nsqjs\r\n\r\n**Steps to Reproduce:**\r\n\r\n1. Run nsqd and Node.js application.\r\n2. Generate some messages. Everything works correctly.\r\n3. Move time backward (for ex.: 5 minutes or 1 hour).\r\n4. Generate some messages. Subscriber does't receive messages.\r\n5.1. After some time (may be delay from (3)?) message will be published.\r\n5.2. If I move time forward then messages will be published immediately.\r\n\r\n**Actual Result:**\r\n\r\nMessages aren't sent to subscriber after moving time back.\r\n\r\n**Expected Result:**\r\n\r\nMessages are sent to subscriber after moving time back.",
    "closed_at": null,
    "comments": 13,
    "comments_url": "https://api.github.com/repos/nsqio/nsq/issues/1124/comments",
    "created_at": "2019-01-11T15:21:03Z",
    "events_url": "https://api.github.com/repos/nsqio/nsq/issues/1124/events",
    "html_url": "https://github.com/nsqio/nsq/issues/1124",
    "id": 398332478,
    "labels": [
      {
        "color": "fc2929",
        "default": true,
        "description": null,
        "id": 4890522,
        "name": "bug",
        "node_id": "MDU6TGFiZWw0ODkwNTIy",
        "url": "https://api.github.com/repos/nsqio/nsq/labels/bug"
      }
    ],
    "labels_url": "https://api.github.com/repos/nsqio/nsq/issues/1124/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWUzOTgzMzI0Nzg=",
    "number": 1124,
    "repository_url": "https://api.github.com/repos/nsqio/nsq",
    "state": "open",
    "title": "nsqd: stops sending messages after moving time backward",
    "updated_at": "2019-02-21T18:09:01Z",
    "url": "https://api.github.com/repos/nsqio/nsq/issues/1124",
    "user": {
      "avatar_url": "https://avatars1.githubusercontent.com/u/8706396?v=4",
      "events_url": "https://api.github.com/users/vostrik/events{/privacy}",
      "followers_url": "https://api.github.com/users/vostrik/followers",
      "following_url": "https://api.github.com/users/vostrik/following{/other_user}",
      "gists_url": "https://api.github.com/users/vostrik/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vostrik",
      "id": 8706396,
      "login": "vostrik",
      "node_id": "MDQ6VXNlcjg3MDYzOTY=",
      "organizations_url": "https://api.github.com/users/vostrik/orgs",
      "received_events_url": "https://api.github.com/users/vostrik/received_events",
      "repos_url": "https://api.github.com/users/vostrik/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vostrik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vostrik/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vostrik"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "1. start nsq\r\n2. pub 100000 defer message(these message well store in file by go-diskqueue)\r\n3. stop nsq(lost defer-time info? because file only store message itself, not contain defer-time)\r\n4. start nsq again (all messages will restored from file and consume these message immediately)\r\n\r\nalso store defer-time to file?\r\n",
    "closed_at": null,
    "comments": 2,
    "comments_url": "https://api.github.com/repos/nsqio/nsq/issues/1107/comments",
    "created_at": "2018-11-30T09:01:41Z",
    "events_url": "https://api.github.com/repos/nsqio/nsq/issues/1107/events",
    "html_url": "https://github.com/nsqio/nsq/issues/1107",
    "id": 386095667,
    "labels": [
      {
        "color": "f7c6c7",
        "default": true,
        "description": null,
        "id": 4890526,
        "name": "question",
        "node_id": "MDU6TGFiZWw0ODkwNTI2",
        "url": "https://api.github.com/repos/nsqio/nsq/labels/question"
      }
    ],
    "labels_url": "https://api.github.com/repos/nsqio/nsq/issues/1107/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWUzODYwOTU2Njc=",
    "number": 1107,
    "repository_url": "https://api.github.com/repos/nsqio/nsq",
    "state": "open",
    "title": "nsqd: messages defer time lost after restart",
    "updated_at": "2019-01-04T18:27:17Z",
    "url": "https://api.github.com/repos/nsqio/nsq/issues/1107",
    "user": {
      "avatar_url": "https://avatars3.githubusercontent.com/u/15604894?v=4",
      "events_url": "https://api.github.com/users/chyroc/events{/privacy}",
      "followers_url": "https://api.github.com/users/chyroc/followers",
      "following_url": "https://api.github.com/users/chyroc/following{/other_user}",
      "gists_url": "https://api.github.com/users/chyroc/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/chyroc",
      "id": 15604894,
      "login": "chyroc",
      "node_id": "MDQ6VXNlcjE1NjA0ODk0",
      "organizations_url": "https://api.github.com/users/chyroc/orgs",
      "received_events_url": "https://api.github.com/users/chyroc/received_events",
      "repos_url": "https://api.github.com/users/chyroc/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/chyroc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chyroc/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/chyroc"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Hi folks, sory about my bad english.\r\nI'm trying get up nsq services at containerum, at containerum the public port to services and container are random. With nsqlookupd and nsqadmin it's easy not a big trouble.\r\nBut when we try to run nsqd it's registrer ther right broadcast url but the follow ports  that nsqd register is that expose in container and not the service port random assigned with the service.\r\n```\r\n  |Name   | Port       | Protocol  | Link                    | \u00a0 \r\n\u00a0 | http  | 24455:4150 | TCP       | x2.containerum.io:24455 | \u00a0\r\n\u00a0 | https | 14384:4151 | TCP       | x2.containerum.io:14384 |\r\n\r\n```\r\nIn admin I got this link to node x2.containerum.io:4151 but it should be *x2.containerum.io:14384*.\r\nI appreciate your time",
    "closed_at": null,
    "comments": 4,
    "comments_url": "https://api.github.com/repos/nsqio/nsq/issues/1073/comments",
    "created_at": "2018-08-21T03:57:40Z",
    "events_url": "https://api.github.com/repos/nsqio/nsq/issues/1073/events",
    "html_url": "https://github.com/nsqio/nsq/issues/1073",
    "id": 352376893,
    "labels": [
      {
        "color": "bfdadc",
        "default": false,
        "description": null,
        "id": 16069428,
        "name": "docs",
        "node_id": "MDU6TGFiZWwxNjA2OTQyOA==",
        "url": "https://api.github.com/repos/nsqio/nsq/labels/docs"
      },
      {
        "color": "c7def8",
        "default": false,
        "description": null,
        "id": 4890524,
        "name": "feature",
        "node_id": "MDU6TGFiZWw0ODkwNTI0",
        "url": "https://api.github.com/repos/nsqio/nsq/labels/feature"
      },
      {
        "color": "bbffdd",
        "default": true,
        "description": null,
        "id": 123584042,
        "name": "help wanted",
        "node_id": "MDU6TGFiZWwxMjM1ODQwNDI=",
        "url": "https://api.github.com/repos/nsqio/nsq/labels/help%20wanted"
      },
      {
        "color": "bfe5bf",
        "default": false,
        "description": null,
        "id": 33092243,
        "name": "request",
        "node_id": "MDU6TGFiZWwzMzA5MjI0Mw==",
        "url": "https://api.github.com/repos/nsqio/nsq/labels/request"
      }
    ],
    "labels_url": "https://api.github.com/repos/nsqio/nsq/issues/1073/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWUzNTIzNzY4OTM=",
    "number": 1073,
    "repository_url": "https://api.github.com/repos/nsqio/nsq",
    "state": "open",
    "title": "nsqd: docker networking, broadcast TCP and HTTP ports",
    "updated_at": "2019-05-08T16:54:50Z",
    "url": "https://api.github.com/repos/nsqio/nsq/issues/1073",
    "user": {
      "avatar_url": "https://avatars3.githubusercontent.com/u/30821?v=4",
      "events_url": "https://api.github.com/users/heat/events{/privacy}",
      "followers_url": "https://api.github.com/users/heat/followers",
      "following_url": "https://api.github.com/users/heat/following{/other_user}",
      "gists_url": "https://api.github.com/users/heat/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/heat",
      "id": 30821,
      "login": "heat",
      "node_id": "MDQ6VXNlcjMwODIx",
      "organizations_url": "https://api.github.com/users/heat/orgs",
      "received_events_url": "https://api.github.com/users/heat/received_events",
      "repos_url": "https://api.github.com/users/heat/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/heat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/heat/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/heat"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "right now we need to go on a node manually and shut down the ingress services manually to a box to busy it out.  it would be nice if that was exposed so we don't have to ssh into each box.\r\n\r\nhttp://www.yourdictionary.com/busy-out\r\n\r\n```\r\nbusy out - Computer Definition\r\nTo invoke a feature of a telecommunications system that rejects incoming calls.\r\n```",
    "closed_at": null,
    "comments": 2,
    "comments_url": "https://api.github.com/repos/nsqio/nsq/issues/1022/comments",
    "created_at": "2018-04-09T18:26:22Z",
    "events_url": "https://api.github.com/repos/nsqio/nsq/issues/1022/events",
    "html_url": "https://github.com/nsqio/nsq/issues/1022",
    "id": 312636888,
    "labels": [
      {
        "color": "c7def8",
        "default": false,
        "description": null,
        "id": 4890524,
        "name": "feature",
        "node_id": "MDU6TGFiZWw0ODkwNTI0",
        "url": "https://api.github.com/repos/nsqio/nsq/labels/feature"
      },
      {
        "color": "bfe5bf",
        "default": false,
        "description": null,
        "id": 33092243,
        "name": "request",
        "node_id": "MDU6TGFiZWwzMzA5MjI0Mw==",
        "url": "https://api.github.com/repos/nsqio/nsq/labels/request"
      }
    ],
    "labels_url": "https://api.github.com/repos/nsqio/nsq/issues/1022/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWUzMTI2MzY4ODg=",
    "number": 1022,
    "repository_url": "https://api.github.com/repos/nsqio/nsq",
    "state": "open",
    "title": "nsqd/nsqadmin: \"busy out\" mode",
    "updated_at": "2018-07-31T17:45:19Z",
    "url": "https://api.github.com/repos/nsqio/nsq/issues/1022",
    "user": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/5041307?v=4",
      "events_url": "https://api.github.com/users/danbf/events{/privacy}",
      "followers_url": "https://api.github.com/users/danbf/followers",
      "following_url": "https://api.github.com/users/danbf/following{/other_user}",
      "gists_url": "https://api.github.com/users/danbf/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/danbf",
      "id": 5041307,
      "login": "danbf",
      "node_id": "MDQ6VXNlcjUwNDEzMDc=",
      "organizations_url": "https://api.github.com/users/danbf/orgs",
      "received_events_url": "https://api.github.com/users/danbf/received_events",
      "repos_url": "https://api.github.com/users/danbf/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/danbf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danbf/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/danbf"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "having an at a glance summary counter for total queue depth would be nice when doing maintenance on nodes so it would be clear when a machine had no more traffic so it could be shutdown/rebooted ensuring that the machine didn't loose any items when shutdown.\r\n\r\nright now one has to scroll through a list channels and scan them to see if they are down to a depth of zero.",
    "closed_at": null,
    "comments": 3,
    "comments_url": "https://api.github.com/repos/nsqio/nsq/issues/1021/comments",
    "created_at": "2018-04-09T18:23:06Z",
    "events_url": "https://api.github.com/repos/nsqio/nsq/issues/1021/events",
    "html_url": "https://github.com/nsqio/nsq/issues/1021",
    "id": 312635808,
    "labels": [
      {
        "color": "c7def8",
        "default": false,
        "description": null,
        "id": 4890524,
        "name": "feature",
        "node_id": "MDU6TGFiZWw0ODkwNTI0",
        "url": "https://api.github.com/repos/nsqio/nsq/labels/feature"
      },
      {
        "color": "bfe5bf",
        "default": false,
        "description": null,
        "id": 33092243,
        "name": "request",
        "node_id": "MDU6TGFiZWwzMzA5MjI0Mw==",
        "url": "https://api.github.com/repos/nsqio/nsq/labels/request"
      }
    ],
    "labels_url": "https://api.github.com/repos/nsqio/nsq/issues/1021/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWUzMTI2MzU4MDg=",
    "number": 1021,
    "repository_url": "https://api.github.com/repos/nsqio/nsq",
    "state": "open",
    "title": "nsqadmin: show total queue depth",
    "updated_at": "2019-01-10T09:28:58Z",
    "url": "https://api.github.com/repos/nsqio/nsq/issues/1021",
    "user": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/5041307?v=4",
      "events_url": "https://api.github.com/users/danbf/events{/privacy}",
      "followers_url": "https://api.github.com/users/danbf/followers",
      "following_url": "https://api.github.com/users/danbf/following{/other_user}",
      "gists_url": "https://api.github.com/users/danbf/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/danbf",
      "id": 5041307,
      "login": "danbf",
      "node_id": "MDQ6VXNlcjUwNDEzMDc=",
      "organizations_url": "https://api.github.com/users/danbf/orgs",
      "received_events_url": "https://api.github.com/users/danbf/received_events",
      "repos_url": "https://api.github.com/users/danbf/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/danbf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danbf/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/danbf"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "Noticed this: https://blog.sonatype.com/hijacking-of-a-known-github-id-go-bindata",
    "closed_at": null,
    "comments": 4,
    "comments_url": "https://api.github.com/repos/nsqio/nsq/issues/994/comments",
    "created_at": "2018-02-07T20:39:37Z",
    "events_url": "https://api.github.com/repos/nsqio/nsq/issues/994/events",
    "html_url": "https://github.com/nsqio/nsq/issues/994",
    "id": 295284687,
    "labels": [
      {
        "color": "f7c6c7",
        "default": true,
        "description": null,
        "id": 4890526,
        "name": "question",
        "node_id": "MDU6TGFiZWw0ODkwNTI2",
        "url": "https://api.github.com/repos/nsqio/nsq/labels/question"
      }
    ],
    "labels_url": "https://api.github.com/repos/nsqio/nsq/issues/994/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWUyOTUyODQ2ODc=",
    "number": 994,
    "repository_url": "https://api.github.com/repos/nsqio/nsq",
    "state": "open",
    "title": "nsqadmin: move away from go-bindata",
    "updated_at": "2018-08-02T17:39:28Z",
    "url": "https://api.github.com/repos/nsqio/nsq/issues/994",
    "user": {
      "avatar_url": "https://avatars1.githubusercontent.com/u/187441?v=4",
      "events_url": "https://api.github.com/users/mreiferson/events{/privacy}",
      "followers_url": "https://api.github.com/users/mreiferson/followers",
      "following_url": "https://api.github.com/users/mreiferson/following{/other_user}",
      "gists_url": "https://api.github.com/users/mreiferson/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mreiferson",
      "id": 187441,
      "login": "mreiferson",
      "node_id": "MDQ6VXNlcjE4NzQ0MQ==",
      "organizations_url": "https://api.github.com/users/mreiferson/orgs",
      "received_events_url": "https://api.github.com/users/mreiferson/received_events",
      "repos_url": "https://api.github.com/users/mreiferson/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mreiferson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mreiferson/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mreiferson"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "My refactoring of #909 - still in-progress\r\n\r\ncc @dm03514",
    "closed_at": null,
    "comments": 0,
    "comments_url": "https://api.github.com/repos/nsqio/nsq/issues/955/comments",
    "created_at": "2017-10-30T14:02:12Z",
    "events_url": "https://api.github.com/repos/nsqio/nsq/issues/955/events",
    "html_url": "https://github.com/nsqio/nsq/pull/955",
    "id": 269610695,
    "labels": [
      {
        "color": "c7def8",
        "default": false,
        "description": null,
        "id": 4890524,
        "name": "feature",
        "node_id": "MDU6TGFiZWw0ODkwNTI0",
        "url": "https://api.github.com/repos/nsqio/nsq/labels/feature"
      }
    ],
    "labels_url": "https://api.github.com/repos/nsqio/nsq/issues/955/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTQ5NTMwNDA4",
    "number": 955,
    "pull_request": {
      "diff_url": "https://github.com/nsqio/nsq/pull/955.diff",
      "html_url": "https://github.com/nsqio/nsq/pull/955",
      "patch_url": "https://github.com/nsqio/nsq/pull/955.patch",
      "url": "https://api.github.com/repos/nsqio/nsq/pulls/955"
    },
    "repository_url": "https://api.github.com/repos/nsqio/nsq",
    "state": "open",
    "title": "nsqd: contrib modules",
    "updated_at": "2018-01-08T16:48:45Z",
    "url": "https://api.github.com/repos/nsqio/nsq/issues/955",
    "user": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/649835?v=4",
      "events_url": "https://api.github.com/users/ploxiln/events{/privacy}",
      "followers_url": "https://api.github.com/users/ploxiln/followers",
      "following_url": "https://api.github.com/users/ploxiln/following{/other_user}",
      "gists_url": "https://api.github.com/users/ploxiln/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/ploxiln",
      "id": 649835,
      "login": "ploxiln",
      "node_id": "MDQ6VXNlcjY0OTgzNQ==",
      "organizations_url": "https://api.github.com/users/ploxiln/orgs",
      "received_events_url": "https://api.github.com/users/ploxiln/received_events",
      "repos_url": "https://api.github.com/users/ploxiln/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/ploxiln/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ploxiln/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/ploxiln"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "The goal of this is to add a contrib pacakge which allows for extensions/addons for NSQD.  The idea was to make the contrib as separate from NSQD as possible.   To do this the contrib nsqd addons are passed a reference to NSQD and can only interact with it through its exported methods.  \r\n\r\nIt was also the hope that contrib addons would be completely segregated from core so that updating implementation or command line flags shouldn't require touching core at all.\r\n\r\nDatadogStatsd was chosen to deliver the contrib package. \r\n\r\n- [x] Get Datadogstatsd actually talking to local statsd :(\r\n- [x] Cleanup flags - (a single multi-value (array) flag)\r\n- [x] Dogstatsd test coverage\r\n- [x] Have default ddstatsd options be defined in contrib/dogstatsd.go instead of contrib/nsq.go\r\n- [x] `AddModuleGoroutine()` && Exit channel passed to `Loop`\r\n- [x] README on how to add contrib modules\r\n- [x] contrib/nsqd.go make sure that options are provided for each module initialized\r\n- [x] update contrib/nsq.go to filter out valid opts and only pass those to the addon initializer\r\n\r\nrefs #904 \r\n\r\n\r\n#### Verified Datadogstatsd can communicate with local udp server\r\nStarted with:\r\n```\r\n$ ./apps/nsqd/nsqd --mod-opt=-dogstatsd-address=127.0.0.1:8125\r\n```\r\nVerified in local UDP echo server:\r\n```\r\nwaiting to receive message\r\nreceived 72 bytes from ('127.0.0.1', 55315)\r\nnsq.channel.in_flight_count:0|g|#topic_name:name,channel_name:super_cool\r\nsent 72 bytes back to ('127.0.0.1', 55315)\r\n\r\nwaiting to receive message\r\nreceived 71 bytes from ('127.0.0.1', 55315)\r\nnsq.channel.deferred_count:0|g|#topic_name:name,channel_name:super_cool\r\nsent 71 bytes back to ('127.0.0.1', 55315)\r\n\r\nwaiting to receive message\r\nreceived 70 bytes from ('127.0.0.1', 55315)\r\nnsq.channel.requeue_count:0|c|#topic_name:name,channel_name:super_cool\r\nsent 70 bytes back to ('127.0.0.1', 55315)\r\n\r\nwaiting to receive message\r\nreceived 70 bytes from ('127.0.0.1', 55315)\r\nnsq.channel.timeout_count:0|c|#topic_name:name,channel_name:super_cool\r\nsent 70 bytes back to ('127.0.0.1', 55315)\r\n```",
    "closed_at": null,
    "comments": 23,
    "comments_url": "https://api.github.com/repos/nsqio/nsq/issues/909/comments",
    "created_at": "2017-06-19T15:40:27Z",
    "events_url": "https://api.github.com/repos/nsqio/nsq/issues/909/events",
    "html_url": "https://github.com/nsqio/nsq/pull/909",
    "id": 236933764,
    "labels": [
      {
        "color": "c7def8",
        "default": false,
        "description": null,
        "id": 4890524,
        "name": "feature",
        "node_id": "MDU6TGFiZWw0ODkwNTI0",
        "url": "https://api.github.com/repos/nsqio/nsq/labels/feature"
      }
    ],
    "labels_url": "https://api.github.com/repos/nsqio/nsq/issues/909/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTI2MzM0MjU1",
    "number": 909,
    "pull_request": {
      "diff_url": "https://github.com/nsqio/nsq/pull/909.diff",
      "html_url": "https://github.com/nsqio/nsq/pull/909",
      "patch_url": "https://github.com/nsqio/nsq/pull/909.patch",
      "url": "https://api.github.com/repos/nsqio/nsq/pulls/909"
    },
    "repository_url": "https://api.github.com/repos/nsqio/nsq",
    "state": "open",
    "title": "contrib: skeleton app structure & Dogstatsd nsqd addon",
    "updated_at": "2017-10-13T12:39:19Z",
    "url": "https://api.github.com/repos/nsqio/nsq/issues/909",
    "user": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/321963?v=4",
      "events_url": "https://api.github.com/users/dm03514/events{/privacy}",
      "followers_url": "https://api.github.com/users/dm03514/followers",
      "following_url": "https://api.github.com/users/dm03514/following{/other_user}",
      "gists_url": "https://api.github.com/users/dm03514/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/dm03514",
      "id": 321963,
      "login": "dm03514",
      "node_id": "MDQ6VXNlcjMyMTk2Mw==",
      "organizations_url": "https://api.github.com/users/dm03514/orgs",
      "received_events_url": "https://api.github.com/users/dm03514/received_events",
      "repos_url": "https://api.github.com/users/dm03514/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/dm03514/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dm03514/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/dm03514"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "[Dogstatsd](http://docs.datadoghq.com/guides/dogstatsd/) is a superset of statsd which supports tagging metrics.  Tagging metrics allow for more generic metric names with specific values being differentiated by tags.\r\n\r\nFor example in the [`message_count`](https://github.com/nsqio/nsq/blob/master/nsqd/statsd.go#L81) metric the metric is specific to the topic name and channel name `\"topic.%s.channel.%s.message_count\"`\r\n\r\nThe dogstats-ish approach could be a more generic metric name:\r\n\r\n`nsq.message_count` \r\n\r\nand would then assign tags `topic:{{ TOPIC_NAME }}` and `channel:{{ CHANNEL_NAME}}`.\r\n\r\nTagging allows for really generic datadog dashboards, wildcard filtering, and more generic alerts.\r\n\r\nI was thinking of a new standalone datadog provider, enabled by command line opt?",
    "closed_at": null,
    "comments": 13,
    "comments_url": "https://api.github.com/repos/nsqio/nsq/issues/904/comments",
    "created_at": "2017-06-05T13:36:43Z",
    "events_url": "https://api.github.com/repos/nsqio/nsq/issues/904/events",
    "html_url": "https://github.com/nsqio/nsq/issues/904",
    "id": 233589543,
    "labels": [
      {
        "color": "c7def8",
        "default": false,
        "description": null,
        "id": 4890524,
        "name": "feature",
        "node_id": "MDU6TGFiZWw0ODkwNTI0",
        "url": "https://api.github.com/repos/nsqio/nsq/labels/feature"
      },
      {
        "color": "f7c6c7",
        "default": true,
        "description": null,
        "id": 4890526,
        "name": "question",
        "node_id": "MDU6TGFiZWw0ODkwNTI2",
        "url": "https://api.github.com/repos/nsqio/nsq/labels/question"
      },
      {
        "color": "bfe5bf",
        "default": false,
        "description": null,
        "id": 33092243,
        "name": "request",
        "node_id": "MDU6TGFiZWwzMzA5MjI0Mw==",
        "url": "https://api.github.com/repos/nsqio/nsq/labels/request"
      }
    ],
    "labels_url": "https://api.github.com/repos/nsqio/nsq/issues/904/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWUyMzM1ODk1NDM=",
    "number": 904,
    "repository_url": "https://api.github.com/repos/nsqio/nsq",
    "state": "open",
    "title": "nsqd: dogstatsd support with generic tagged metrics",
    "updated_at": "2017-06-06T19:38:49Z",
    "url": "https://api.github.com/repos/nsqio/nsq/issues/904",
    "user": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/321963?v=4",
      "events_url": "https://api.github.com/users/dm03514/events{/privacy}",
      "followers_url": "https://api.github.com/users/dm03514/followers",
      "following_url": "https://api.github.com/users/dm03514/following{/other_user}",
      "gists_url": "https://api.github.com/users/dm03514/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/dm03514",
      "id": 321963,
      "login": "dm03514",
      "node_id": "MDQ6VXNlcjMyMTk2Mw==",
      "organizations_url": "https://api.github.com/users/dm03514/orgs",
      "received_events_url": "https://api.github.com/users/dm03514/received_events",
      "repos_url": "https://api.github.com/users/dm03514/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/dm03514/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dm03514/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/dm03514"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "NSQ is great for most usage and we are using it for a long time. However, there are some important features we need eagerly. So we redesigned the NSQ to add some features we need. The main features are:\r\n\r\n- Replication and High Availibility\r\n- Auto balance and migrate\r\n- Delivery the messages in Order\r\n- Consume history messages\r\n- Dynamic Log level and more detail logs\r\n- More stats in the nsqadmin\r\n- Performance improvement\r\n\r\nAfter redesigned, this version has been used in Youzan.com for several months and processed 150B messages until now.\r\n\r\nTo thanks to the original project, we open source all the redesigned project including client SDKs and if any possible we would like to merge it to the master. Since there are many differences between the two projects, it may be a very hard work.\r\nThe forked project : https://github.com/absolute8511/nsq\r\n\r\nThanks again for the great work on the NSQ. ",
    "closed_at": null,
    "comments": 15,
    "comments_url": "https://api.github.com/repos/nsqio/nsq/issues/887/comments",
    "created_at": "2017-04-17T11:14:22Z",
    "events_url": "https://api.github.com/repos/nsqio/nsq/issues/887/events",
    "html_url": "https://github.com/nsqio/nsq/issues/887",
    "id": 222113486,
    "labels": [
      {
        "color": "f7c6c7",
        "default": true,
        "description": null,
        "id": 4890526,
        "name": "question",
        "node_id": "MDU6TGFiZWw0ODkwNTI2",
        "url": "https://api.github.com/repos/nsqio/nsq/labels/question"
      }
    ],
    "labels_url": "https://api.github.com/repos/nsqio/nsq/issues/887/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWUyMjIxMTM0ODY=",
    "number": 887,
    "repository_url": "https://api.github.com/repos/nsqio/nsq",
    "state": "open",
    "title": "*: consider merging absolute8511/nsq fork (HA, replication, in-order delivery, log-based)",
    "updated_at": "2018-01-15T17:59:39Z",
    "url": "https://api.github.com/repos/nsqio/nsq/issues/887",
    "user": {
      "avatar_url": "https://avatars3.githubusercontent.com/u/678699?v=4",
      "events_url": "https://api.github.com/users/absolute8511/events{/privacy}",
      "followers_url": "https://api.github.com/users/absolute8511/followers",
      "following_url": "https://api.github.com/users/absolute8511/following{/other_user}",
      "gists_url": "https://api.github.com/users/absolute8511/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/absolute8511",
      "id": 678699,
      "login": "absolute8511",
      "node_id": "MDQ6VXNlcjY3ODY5OQ==",
      "organizations_url": "https://api.github.com/users/absolute8511/orgs",
      "received_events_url": "https://api.github.com/users/absolute8511/received_events",
      "repos_url": "https://api.github.com/users/absolute8511/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/absolute8511/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/absolute8511/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/absolute8511"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "`nsqadmin` does a great job at exposing the consumers on a given topic/channel but there is no way to introspect the producers connected via TCP to a nsqd node.\r\n\r\nnsqd should expose a `/producer_stats` endpoint that lists the connections it has that are not subscribe to a topic. It should list the same client information available in `/stats` (tls, remote address, connection time, user_agent, auth, etc). It should also list a lifetime connection stat for number of messages published.\r\n\r\nnsqadmin should have a new page (or section on the individual `/node/:node` page) that exposes this information.",
    "closed_at": null,
    "comments": 6,
    "comments_url": "https://api.github.com/repos/nsqio/nsq/issues/879/comments",
    "created_at": "2017-04-06T13:29:10Z",
    "events_url": "https://api.github.com/repos/nsqio/nsq/issues/879/events",
    "html_url": "https://github.com/nsqio/nsq/issues/879",
    "id": 219899085,
    "labels": [
      {
        "color": "c7def8",
        "default": false,
        "description": null,
        "id": 4890524,
        "name": "feature",
        "node_id": "MDU6TGFiZWw0ODkwNTI0",
        "url": "https://api.github.com/repos/nsqio/nsq/labels/feature"
      },
      {
        "color": "bbffdd",
        "default": true,
        "description": null,
        "id": 123584042,
        "name": "help wanted",
        "node_id": "MDU6TGFiZWwxMjM1ODQwNDI=",
        "url": "https://api.github.com/repos/nsqio/nsq/labels/help%20wanted"
      }
    ],
    "labels_url": "https://api.github.com/repos/nsqio/nsq/issues/879/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWUyMTk4OTkwODU=",
    "number": 879,
    "repository_url": "https://api.github.com/repos/nsqio/nsq",
    "state": "open",
    "title": "nsqd/nsqadmin: introspection of producer connections",
    "updated_at": "2017-04-11T18:29:28Z",
    "url": "https://api.github.com/repos/nsqio/nsq/issues/879",
    "user": {
      "avatar_url": "https://avatars0.githubusercontent.com/u/45028?v=4",
      "events_url": "https://api.github.com/users/jehiah/events{/privacy}",
      "followers_url": "https://api.github.com/users/jehiah/followers",
      "following_url": "https://api.github.com/users/jehiah/following{/other_user}",
      "gists_url": "https://api.github.com/users/jehiah/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jehiah",
      "id": 45028,
      "login": "jehiah",
      "node_id": "MDQ6VXNlcjQ1MDI4",
      "organizations_url": "https://api.github.com/users/jehiah/orgs",
      "received_events_url": "https://api.github.com/users/jehiah/received_events",
      "repos_url": "https://api.github.com/users/jehiah/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jehiah/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jehiah/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jehiah"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "According to [this email conversation](https://groups.google.com/d/msg/nsq-users/PkkPN9z7gPc/9AuRD3NTZQ0J) NSQ assumes that connections between nsqd and nsqlookupd is on a trusted network. Hence, TLS communication is only possible between clients and nsqd. I'm looking at use cases where nsqd and nsqlookupd would be located on geo-distributed systems where there isn't necessarily any \"network security guarantees\". \r\n\r\nProposal: Would you be interested in a pull request adding an option for TLS-wrapped communication between nslookupqd and nsqd?",
    "closed_at": null,
    "comments": 3,
    "comments_url": "https://api.github.com/repos/nsqio/nsq/issues/876/comments",
    "created_at": "2017-04-02T11:54:10Z",
    "events_url": "https://api.github.com/repos/nsqio/nsq/issues/876/events",
    "html_url": "https://github.com/nsqio/nsq/issues/876",
    "id": 218759733,
    "labels": [
      {
        "color": "c7def8",
        "default": false,
        "description": null,
        "id": 4890524,
        "name": "feature",
        "node_id": "MDU6TGFiZWw0ODkwNTI0",
        "url": "https://api.github.com/repos/nsqio/nsq/labels/feature"
      },
      {
        "color": "bfe5bf",
        "default": false,
        "description": null,
        "id": 33092243,
        "name": "request",
        "node_id": "MDU6TGFiZWwzMzA5MjI0Mw==",
        "url": "https://api.github.com/repos/nsqio/nsq/labels/request"
      }
    ],
    "labels_url": "https://api.github.com/repos/nsqio/nsq/issues/876/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWUyMTg3NTk3MzM=",
    "number": 876,
    "repository_url": "https://api.github.com/repos/nsqio/nsq",
    "state": "open",
    "title": "nsqlookupd/nsqd: TLS on intra-cluster communication ",
    "updated_at": "2018-12-11T16:58:24Z",
    "url": "https://api.github.com/repos/nsqio/nsq/issues/876",
    "user": {
      "avatar_url": "https://avatars1.githubusercontent.com/u/457136?v=4",
      "events_url": "https://api.github.com/users/ninjacato/events{/privacy}",
      "followers_url": "https://api.github.com/users/ninjacato/followers",
      "following_url": "https://api.github.com/users/ninjacato/following{/other_user}",
      "gists_url": "https://api.github.com/users/ninjacato/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/ninjacato",
      "id": 457136,
      "login": "ninjacato",
      "node_id": "MDQ6VXNlcjQ1NzEzNg==",
      "organizations_url": "https://api.github.com/users/ninjacato/orgs",
      "received_events_url": "https://api.github.com/users/ninjacato/received_events",
      "repos_url": "https://api.github.com/users/ninjacato/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/ninjacato/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ninjacato/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/ninjacato"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "I am using nsq as a store-and-forward agent for IoT devices that report metrics to a central HTTPS API.\r\n\r\nThe small devices are offline for periods of time, and need to send back data opportunistically. The power supply is also intermittent.\r\n\r\nYou can think of the use case as a passenger bus instrumentation, collecting metrics between stops where wifi is available, and the power supply going up and down in between those bus stops.\r\n\r\nAs with most IoT devices the flash storage has really limited write lifetime.\r\n\r\nI've identified the following `nsqd` options relevant to this use-case:\r\n\r\n```\r\n  -mem-queue-size int\r\n    \tnumber of messages to keep in memory (per topic/channel) (default 10000)\r\n  -sync-timeout duration\r\n    \tduration of time per diskqueue fsync (default 2s)\r\n  -max-output-buffer-timeout duration\r\n    \tmaximum client configurable duration of time between flushing to a client (default 1s)\r\n```\r\n\r\nOur first approach was to disable the memory queue fully with `-mem-queue-size 0` and setting `-sync-timeout 20s`.\r\n\r\nHowever this isn't working out for a couple of reasons:\r\n\r\n1. The OS is likely to flush writes sooner than 20s, so we are still wearing down the flash storage. We want to avoid writing to disk except every 20s, something which can't be guaranteed by disabling the memory queue.\r\n2. \"in-flight\" and \"rescheduled\" messages seem to remain solely in memory, sometimes for several minutes or longer, even when the memory queue is disabled as above. I get the impression these messages are needlessly lost when the power supply is cut. I may be wrong - is it possible to sync in-flight and deferred messages to disk aggressively (say every 20s)?\r\n\r\nMy next attempt was to implement flushing of the memory queue to to the disk queue as below (based on the first part of `Channel.flush()`) called by a new 20s ticker:\r\n\r\n```\r\n+++ b/nsqd/channel.go\r\n+func (c *Channel) flushToDisk() error { ... }\r\n```\r\n\r\nThis way we can enable the memory queue, allowing good performance and avoiding disk wear, while still achieving data safety guarantees.\r\n\r\nTwo problems with this:\r\n\r\n1. It now flushes the entire memory queue to disk every 20s. Ideally we would like to avoid committing short-lived messages to disk that happen to be in the memory queue at that moment.\r\n2. This still doesn't seem to solve in-flight and deferred messages stuck in memory. We could commit them to disk too as Channel.flush() does but that would break the semantics of operation.\r\n\r\nI'd like to get a recommendation from the `nsqd` developer community on how to proceed. It looks like whatever change won't be more than a few lines of code, but I'm not sure of the best way to solve these requirements.\r\n\r\nI'll be glad to submit patches and documentation for IoT use once we hear the best approach from an experienced developer.",
    "closed_at": null,
    "comments": 3,
    "comments_url": "https://api.github.com/repos/nsqio/nsq/issues/855/comments",
    "created_at": "2017-02-27T19:48:37Z",
    "events_url": "https://api.github.com/repos/nsqio/nsq/issues/855/events",
    "html_url": "https://github.com/nsqio/nsq/issues/855",
    "id": 210587159,
    "labels": [
      {
        "color": "f7c6c7",
        "default": true,
        "description": null,
        "id": 4890526,
        "name": "question",
        "node_id": "MDU6TGFiZWw0ODkwNTI2",
        "url": "https://api.github.com/repos/nsqio/nsq/labels/question"
      }
    ],
    "labels_url": "https://api.github.com/repos/nsqio/nsq/issues/855/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWUyMTA1ODcxNTk=",
    "number": 855,
    "repository_url": "https://api.github.com/repos/nsqio/nsq",
    "state": "open",
    "title": "nsqd: changes to support IoT usage, avoid data loss ",
    "updated_at": "2017-05-19T11:06:28Z",
    "url": "https://api.github.com/repos/nsqio/nsq/issues/855",
    "user": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/12460643?v=4",
      "events_url": "https://api.github.com/users/mcorb/events{/privacy}",
      "followers_url": "https://api.github.com/users/mcorb/followers",
      "following_url": "https://api.github.com/users/mcorb/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcorb/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mcorb",
      "id": 12460643,
      "login": "mcorb",
      "node_id": "MDQ6VXNlcjEyNDYwNjQz",
      "organizations_url": "https://api.github.com/users/mcorb/orgs",
      "received_events_url": "https://api.github.com/users/mcorb/received_events",
      "repos_url": "https://api.github.com/users/mcorb/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mcorb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcorb/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mcorb"
    }
  }
]